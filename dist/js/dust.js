(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
!function(u,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("guify",[],t):"object"==typeof exports?exports.guify=t():u.guify=t()}(this,function(){return function(u){function t(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return u[n].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var e={};return t.m=u,t.c=e,t.d=function(u,e,n){t.o(u,e)||Object.defineProperty(u,e,{configurable:!1,enumerable:!0,get:n})},t.n=function(u){var e=u&&u.__esModule?function(){return u.default}:function(){return u};return t.d(e,"a",e),e},t.o=function(u,t){return Object.prototype.hasOwnProperty.call(u,t)},t.p="",t(t.s=8)}([function(u,t,e){function n(u,t,e){var n=c[t];if(void 0===n&&(n=i(t)),n){if(void 0===e)return u.style[n];u.style[n]=l(n,e)}}function r(u,t){for(var e in t)t.hasOwnProperty(e)&&n(u,e,t[e])}function i(u){var t=s(u),e=a(t);return c[t]=c[u]=c[e]=e,e}function o(){2===arguments.length?"string"==typeof arguments[1]?arguments[0].style.cssText=arguments[1]:r(arguments[0],arguments[1]):n(arguments[0],arguments[1],arguments[2])}var a=e(17),s=e(18),c={float:"cssFloat"},l=e(21);u.exports=o,u.exports.set=o,u.exports.get=function(u,t){return Array.isArray(t)?t.reduce(function(t,e){return t[e]=n(u,e||""),t},{}):n(u,t||"")}},function(u,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=(e(25),e(0)),r=function(u,t){var e=u.appendChild(document.createElement("div"));return e.classList.add("guify-component-container"),n(e,{position:"relative",height:"25px"}),e};t.default=r,u.exports=t.default},function(u,t){function e(u,t){var e=u[1]||"",r=u[3];if(!r)return e;if(t&&"function"==typeof btoa){var i=n(r);return[e].concat(r.sources.map(function(u){return"/*# sourceURL="+r.sourceRoot+u+" */"})).concat([i]).join("\n")}return[e].join("\n")}function n(u){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(u))))+" */"}u.exports=function(u){var t=[];return t.toString=function(){return this.map(function(t){var n=e(t,u);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(u,e){"string"==typeof u&&(u=[[null,u,""]]);for(var n={},r=0;r<this.length;r++){var i=this[r][0];"number"==typeof i&&(n[i]=!0)}for(r=0;r<u.length;r++){var o=u[r];"number"==typeof o[0]&&n[o[0]]||(e&&!o[2]?o[2]=e:e&&(o[2]="("+o[2]+") and ("+e+")"),t.push(o))}},t}},function(u,t,e){function n(u,t){for(var e=0;e<u.length;e++){var n=u[e],r=p[n.id];if(r){r.refs++;for(var i=0;i<r.parts.length;i++)r.parts[i](n.parts[i]);for(;i<n.parts.length;i++)r.parts.push(l(n.parts[i],t))}else{for(var o=[],i=0;i<n.parts.length;i++)o.push(l(n.parts[i],t));p[n.id]={id:n.id,refs:1,parts:o}}}}function r(u,t){for(var e=[],n={},r=0;r<u.length;r++){var i=u[r],o=t.base?i[0]+t.base:i[0],a=i[1],s=i[2],c=i[3],l={css:a,media:s,sourceMap:c};n[o]?n[o].parts.push(l):e.push(n[o]={id:o,parts:[l]})}return e}function i(u,t){var e=C(u.insertInto);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var n=F[F.length-1];if("top"===u.insertAt)n?n.nextSibling?e.insertBefore(t,n.nextSibling):e.appendChild(t):e.insertBefore(t,e.firstChild),F.push(t);else{if("bottom"!==u.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");e.appendChild(t)}}function o(u){if(null===u.parentNode)return!1;u.parentNode.removeChild(u);var t=F.indexOf(u);t>=0&&F.splice(t,1)}function a(u){var t=document.createElement("style");return u.attrs.type="text/css",c(t,u.attrs),i(u,t),t}function s(u){var t=document.createElement("link");return u.attrs.type="text/css",u.attrs.rel="stylesheet",c(t,u.attrs),i(u,t),t}function c(u,t){Object.keys(t).forEach(function(e){u.setAttribute(e,t[e])})}function l(u,t){var e,n,r,i;if(t.transform&&u.css){if(!(i=t.transform(u.css)))return function(){};u.css=i}if(t.singleton){var c=g++;e=d||(d=a(t)),n=A.bind(null,e,c,!1),r=A.bind(null,e,c,!0)}else u.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(e=s(t),n=f.bind(null,e,t),r=function(){o(e),e.href&&URL.revokeObjectURL(e.href)}):(e=a(t),n=E.bind(null,e),r=function(){o(e)});return n(u),function(t){if(t){if(t.css===u.css&&t.media===u.media&&t.sourceMap===u.sourceMap)return;n(u=t)}else r()}}function A(u,t,e,n){var r=e?"":n.css;if(u.styleSheet)u.styleSheet.cssText=D(t,r);else{var i=document.createTextNode(r),o=u.childNodes;o[t]&&u.removeChild(o[t]),o.length?u.insertBefore(i,o[t]):u.appendChild(i)}}function E(u,t){var e=t.css,n=t.media;if(n&&u.setAttribute("media",n),u.styleSheet)u.styleSheet.cssText=e;else{for(;u.firstChild;)u.removeChild(u.firstChild);u.appendChild(document.createTextNode(e))}}function f(u,t,e){var n=e.css,r=e.sourceMap,i=void 0===t.convertToAbsoluteUrls&&r;(t.convertToAbsoluteUrls||i)&&(n=b(n)),r&&(n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */");var o=new Blob([n],{type:"text/css"}),a=u.href;u.href=URL.createObjectURL(o),a&&URL.revokeObjectURL(a)}var p={},h=function(u){var t;return function(){return void 0===t&&(t=u.apply(this,arguments)),t}}(function(){return window&&document&&document.all&&!window.atob}),C=function(u){var t={};return function(e){return void 0===t[e]&&(t[e]=u.call(this,e)),t[e]}}(function(u){return document.querySelector(u)}),d=null,g=0,F=[],b=e(12);u.exports=function(u,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");t=t||{},t.attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||(t.singleton=h()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var e=r(u,t);return n(e,t),function(u){for(var i=[],o=0;o<e.length;o++){var a=e[o],s=p[a.id];s.refs--,i.push(s)}if(u){n(r(u,t),t)}for(var o=0;o<i.length;o++){var s=i[o];if(0===s.refs){for(var c=0;c<s.parts.length;c++)s.parts[c]();delete p[s.id]}}}};var D=function(){var u=[];return function(t,e){return u[t]=e,u.filter(Boolean).join("\n")}}()},function(u,t,e){var n;!function(t){"use strict";function r(){}function i(u,t){for(var e=u.length;e--;)if(u[e].listener===t)return e;return-1}function o(u){return function(){return this[u].apply(this,arguments)}}function a(u){return"function"==typeof u||u instanceof RegExp||!(!u||"object"!=typeof u)&&a(u.listener)}var s=r.prototype,c=t.EventEmitter;s.getListeners=function(u){var t,e,n=this._getEvents();if(u instanceof RegExp){t={};for(e in n)n.hasOwnProperty(e)&&u.test(e)&&(t[e]=n[e])}else t=n[u]||(n[u]=[]);return t},s.flattenListeners=function(u){var t,e=[];for(t=0;t<u.length;t+=1)e.push(u[t].listener);return e},s.getListenersAsObject=function(u){var t,e=this.getListeners(u);return e instanceof Array&&(t={},t[u]=e),t||e},s.addListener=function(u,t){if(!a(t))throw new TypeError("listener must be a function");var e,n=this.getListenersAsObject(u),r="object"==typeof t;for(e in n)n.hasOwnProperty(e)&&-1===i(n[e],t)&&n[e].push(r?t:{listener:t,once:!1});return this},s.on=o("addListener"),s.addOnceListener=function(u,t){return this.addListener(u,{listener:t,once:!0})},s.once=o("addOnceListener"),s.defineEvent=function(u){return this.getListeners(u),this},s.defineEvents=function(u){for(var t=0;t<u.length;t+=1)this.defineEvent(u[t]);return this},s.removeListener=function(u,t){var e,n,r=this.getListenersAsObject(u);for(n in r)r.hasOwnProperty(n)&&-1!==(e=i(r[n],t))&&r[n].splice(e,1);return this},s.off=o("removeListener"),s.addListeners=function(u,t){return this.manipulateListeners(!1,u,t)},s.removeListeners=function(u,t){return this.manipulateListeners(!0,u,t)},s.manipulateListeners=function(u,t,e){var n,r,i=u?this.removeListener:this.addListener,o=u?this.removeListeners:this.addListeners;if("object"!=typeof t||t instanceof RegExp)for(n=e.length;n--;)i.call(this,t,e[n]);else for(n in t)t.hasOwnProperty(n)&&(r=t[n])&&("function"==typeof r?i.call(this,n,r):o.call(this,n,r));return this},s.removeEvent=function(u){var t,e=typeof u,n=this._getEvents();if("string"===e)delete n[u];else if(u instanceof RegExp)for(t in n)n.hasOwnProperty(t)&&u.test(t)&&delete n[t];else delete this._events;return this},s.removeAllListeners=o("removeEvent"),s.emitEvent=function(u,t){var e,n,r,i,o=this.getListenersAsObject(u);for(i in o)if(o.hasOwnProperty(i))for(e=o[i].slice(0),r=0;r<e.length;r++)n=e[r],!0===n.once&&this.removeListener(u,n.listener),n.listener.apply(this,t||[])===this._getOnceReturnValue()&&this.removeListener(u,n.listener);return this},s.trigger=o("emitEvent"),s.emit=function(u){var t=Array.prototype.slice.call(arguments,1);return this.emitEvent(u,t)},s.setOnceReturnValue=function(u){return this._onceReturnValue=u,this},s._getOnceReturnValue=function(){return!this.hasOwnProperty("_onceReturnValue")||this._onceReturnValue},s._getEvents=function(){return this._events||(this._events={})},r.noConflict=function(){return t.EventEmitter=c,r},void 0!==(n=function(){return r}.call(t,e,t,u))&&(u.exports=n)}(this||{})},function(u,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=e(0);t.default=function(u,t,e){var r=u.appendChild(document.createElement("div"));n(r,{left:0,width:"36%",display:"inline-block",height:"20px",paddingRight:"2%",verticalAlign:"top"});var i=r.appendChild(document.createElement("span"));return i.innerHTML=t,n(i,{color:e.text1,display:"inline-block",verticalAlign:"sub","line-height":"20px"}),i},u.exports=t.default},function(u,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=e(0);t.default=function(u,t,e,r,i){var o=u.appendChild(document.createElement("div")),a=o.appendChild(document.createElement("span"));a.innerHTML=t;var s={position:"absolute",backgroundColor:e.background2,paddingLeft:"1.5%",height:"20px",width:r,display:"inline-block",overflow:"hidden"};return i||(s.right=0),n(o,s),n(a,{color:e.text2,display:"inline-block",userSelect:"text",cursor:"text",overflow:"hidden",lineHeight:"20px",wordBreak:"break-all",height:20}),a},u.exports=t.default},function(u,t,e){var n;!function(r){function i(u,t){if(u=u||"",t=t||{},u instanceof i)return u;if(!(this instanceof i))return new i(u,t);var e=o(u);this._originalInput=u,this._r=e.r,this._g=e.g,this._b=e.b,this._a=e.a,this._roundA=q(100*this._a)/100,this._format=t.format||e.format,this._gradientType=t.gradientType,this._r<1&&(this._r=q(this._r)),this._g<1&&(this._g=q(this._g)),this._b<1&&(this._b=q(this._b)),this._ok=e.ok,this._tc_id=I++}function o(u){var t={r:0,g:0,b:0},e=1,n=null,r=null,i=null,o=!1,s=!1;return"string"==typeof u&&(u=P(u)),"object"==typeof u&&(R(u.r)&&R(u.g)&&R(u.b)?(t=a(u.r,u.g,u.b),o=!0,s="%"===String(u.r).substr(-1)?"prgb":"rgb"):R(u.h)&&R(u.s)&&R(u.v)?(n=H(u.s),r=H(u.v),t=A(u.h,n,r),o=!0,s="hsv"):R(u.h)&&R(u.s)&&R(u.l)&&(n=H(u.s),i=H(u.l),t=c(u.h,n,i),o=!0,s="hsl"),u.hasOwnProperty("a")&&(e=u.a)),e=_(e),{ok:o,format:u.format||s,r:V(255,W(t.r,0)),g:V(255,W(t.g,0)),b:V(255,W(t.b,0)),a:e}}function a(u,t,e){return{r:255*k(u,255),g:255*k(t,255),b:255*k(e,255)}}function s(u,t,e){u=k(u,255),t=k(t,255),e=k(e,255);var n,r,i=W(u,t,e),o=V(u,t,e),a=(i+o)/2;if(i==o)n=r=0;else{var s=i-o;switch(r=a>.5?s/(2-i-o):s/(i+o),i){case u:n=(t-e)/s+(t<e?6:0);break;case t:n=(e-u)/s+2;break;case e:n=(u-t)/s+4}n/=6}return{h:n,s:r,l:a}}function c(u,t,e){function n(u,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?u+6*(t-u)*e:e<.5?t:e<2/3?u+(t-u)*(2/3-e)*6:u}var r,i,o;if(u=k(u,360),t=k(t,100),e=k(e,100),0===t)r=i=o=e;else{var a=e<.5?e*(1+t):e+t-e*t,s=2*e-a;r=n(s,a,u+1/3),i=n(s,a,u),o=n(s,a,u-1/3)}return{r:255*r,g:255*i,b:255*o}}function l(u,t,e){u=k(u,255),t=k(t,255),e=k(e,255);var n,r,i=W(u,t,e),o=V(u,t,e),a=i,s=i-o;if(r=0===i?0:s/i,i==o)n=0;else{switch(i){case u:n=(t-e)/s+(t<e?6:0);break;case t:n=(e-u)/s+2;break;case e:n=(u-t)/s+4}n/=6}return{h:n,s:r,v:a}}function A(u,t,e){u=6*k(u,360),t=k(t,100),e=k(e,100);var n=r.floor(u),i=u-n,o=e*(1-t),a=e*(1-i*t),s=e*(1-(1-i)*t),c=n%6;return{r:255*[e,a,o,o,s,e][c],g:255*[s,e,e,a,o,o][c],b:255*[o,o,s,e,e,a][c]}}function E(u,t,e,n){var r=[L(q(u).toString(16)),L(q(t).toString(16)),L(q(e).toString(16))];return n&&r[0].charAt(0)==r[0].charAt(1)&&r[1].charAt(0)==r[1].charAt(1)&&r[2].charAt(0)==r[2].charAt(1)?r[0].charAt(0)+r[1].charAt(0)+r[2].charAt(0):r.join("")}function f(u,t,e,n,r){var i=[L(q(u).toString(16)),L(q(t).toString(16)),L(q(e).toString(16)),L(z(n))];return r&&i[0].charAt(0)==i[0].charAt(1)&&i[1].charAt(0)==i[1].charAt(1)&&i[2].charAt(0)==i[2].charAt(1)&&i[3].charAt(0)==i[3].charAt(1)?i[0].charAt(0)+i[1].charAt(0)+i[2].charAt(0)+i[3].charAt(0):i.join("")}function p(u,t,e,n){return[L(z(n)),L(q(u).toString(16)),L(q(t).toString(16)),L(q(e).toString(16))].join("")}function h(u,t){t=0===t?0:t||10;var e=i(u).toHsl();return e.s-=t/100,e.s=S(e.s),i(e)}function C(u,t){t=0===t?0:t||10;var e=i(u).toHsl();return e.s+=t/100,e.s=S(e.s),i(e)}function d(u){return i(u).desaturate(100)}function g(u,t){t=0===t?0:t||10;var e=i(u).toHsl();return e.l+=t/100,e.l=S(e.l),i(e)}function F(u,t){t=0===t?0:t||10;var e=i(u).toRgb();return e.r=W(0,V(255,e.r-q(-t/100*255))),e.g=W(0,V(255,e.g-q(-t/100*255))),e.b=W(0,V(255,e.b-q(-t/100*255))),i(e)}function b(u,t){t=0===t?0:t||10;var e=i(u).toHsl();return e.l-=t/100,e.l=S(e.l),i(e)}function D(u,t){var e=i(u).toHsl(),n=(e.h+t)%360;return e.h=n<0?360+n:n,i(e)}function B(u){var t=i(u).toHsl();return t.h=(t.h+180)%360,i(t)}function y(u){var t=i(u).toHsl(),e=t.h;return[i(u),i({h:(e+120)%360,s:t.s,l:t.l}),i({h:(e+240)%360,s:t.s,l:t.l})]}function m(u){var t=i(u).toHsl(),e=t.h;return[i(u),i({h:(e+90)%360,s:t.s,l:t.l}),i({h:(e+180)%360,s:t.s,l:t.l}),i({h:(e+270)%360,s:t.s,l:t.l})]}function v(u){var t=i(u).toHsl(),e=t.h;return[i(u),i({h:(e+72)%360,s:t.s,l:t.l}),i({h:(e+216)%360,s:t.s,l:t.l})]}function x(u,t,e){t=t||6,e=e||30;var n=i(u).toHsl(),r=360/e,o=[i(u)];for(n.h=(n.h-(r*t>>1)+720)%360;--t;)n.h=(n.h+r)%360,o.push(i(n));return o}function w(u,t){t=t||6;for(var e=i(u).toHsv(),n=e.h,r=e.s,o=e.v,a=[],s=1/t;t--;)a.push(i({h:n,s:r,v:o})),o=(o+s)%1;return a}function _(u){return u=parseFloat(u),(isNaN(u)||u<0||u>1)&&(u=1),u}function k(u,t){j(u)&&(u="100%");var e=O(u);return u=V(t,W(0,parseFloat(u))),e&&(u=parseInt(u*t,10)/100),r.abs(u-t)<1e-6?1:u%t/parseFloat(t)}function S(u){return V(1,W(0,u))}function M(u){return parseInt(u,16)}function j(u){return"string"==typeof u&&-1!=u.indexOf(".")&&1===parseFloat(u)}function O(u){return"string"==typeof u&&-1!=u.indexOf("%")}function L(u){return 1==u.length?"0"+u:""+u}function H(u){return u<=1&&(u=100*u+"%"),u}function z(u){return r.round(255*parseFloat(u)).toString(16)}function U(u){return M(u)/255}function R(u){return!!Y.CSS_UNIT.exec(u)}function P(u){u=u.replace(T,"").replace(N,"").toLowerCase();var t=!1;if(Z[u])u=Z[u],t=!0;else if("transparent"==u)return{r:0,g:0,b:0,a:0,format:"name"};var e;return(e=Y.rgb.exec(u))?{r:e[1],g:e[2],b:e[3]}:(e=Y.rgba.exec(u))?{r:e[1],g:e[2],b:e[3],a:e[4]}:(e=Y.hsl.exec(u))?{h:e[1],s:e[2],l:e[3]}:(e=Y.hsla.exec(u))?{h:e[1],s:e[2],l:e[3],a:e[4]}:(e=Y.hsv.exec(u))?{h:e[1],s:e[2],v:e[3]}:(e=Y.hsva.exec(u))?{h:e[1],s:e[2],v:e[3],a:e[4]}:(e=Y.hex8.exec(u))?{r:M(e[1]),g:M(e[2]),b:M(e[3]),a:U(e[4]),format:t?"name":"hex8"}:(e=Y.hex6.exec(u))?{r:M(e[1]),g:M(e[2]),b:M(e[3]),format:t?"name":"hex"}:(e=Y.hex4.exec(u))?{r:M(e[1]+""+e[1]),g:M(e[2]+""+e[2]),b:M(e[3]+""+e[3]),a:U(e[4]+""+e[4]),format:t?"name":"hex8"}:!!(e=Y.hex3.exec(u))&&{r:M(e[1]+""+e[1]),g:M(e[2]+""+e[2]),b:M(e[3]+""+e[3]),format:t?"name":"hex"}}function $(u){var t,e;return u=u||{level:"AA",size:"small"},t=(u.level||"AA").toUpperCase(),e=(u.size||"small").toLowerCase(),"AA"!==t&&"AAA"!==t&&(t="AA"),"small"!==e&&"large"!==e&&(e="small"),{level:t,size:e}}var T=/^\s+/,N=/\s+$/,I=0,q=r.round,V=r.min,W=r.max,G=r.random;i.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var u=this.toRgb();return(299*u.r+587*u.g+114*u.b)/1e3},getLuminance:function(){var u,t,e,n,i,o,a=this.toRgb();return u=a.r/255,t=a.g/255,e=a.b/255,n=u<=.03928?u/12.92:r.pow((u+.055)/1.055,2.4),i=t<=.03928?t/12.92:r.pow((t+.055)/1.055,2.4),o=e<=.03928?e/12.92:r.pow((e+.055)/1.055,2.4),.2126*n+.7152*i+.0722*o},setAlpha:function(u){return this._a=_(u),this._roundA=q(100*this._a)/100,this},toHsv:function(){var u=l(this._r,this._g,this._b);return{h:360*u.h,s:u.s,v:u.v,a:this._a}},toHsvString:function(){var u=l(this._r,this._g,this._b),t=q(360*u.h),e=q(100*u.s),n=q(100*u.v);return 1==this._a?"hsv("+t+", "+e+"%, "+n+"%)":"hsva("+t+", "+e+"%, "+n+"%, "+this._roundA+")"},toHsl:function(){var u=s(this._r,this._g,this._b);return{h:360*u.h,s:u.s,l:u.l,a:this._a}},toHslString:function(){var u=s(this._r,this._g,this._b),t=q(360*u.h),e=q(100*u.s),n=q(100*u.l);return 1==this._a?"hsl("+t+", "+e+"%, "+n+"%)":"hsla("+t+", "+e+"%, "+n+"%, "+this._roundA+")"},toHex:function(u){return E(this._r,this._g,this._b,u)},toHexString:function(u){return"#"+this.toHex(u)},toHex8:function(u){return f(this._r,this._g,this._b,this._a,u)},toHex8String:function(u){return"#"+this.toHex8(u)},toRgb:function(){return{r:q(this._r),g:q(this._g),b:q(this._b),a:this._a}},toRgbString:function(){return 1==this._a?"rgb("+q(this._r)+", "+q(this._g)+", "+q(this._b)+")":"rgba("+q(this._r)+", "+q(this._g)+", "+q(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:q(100*k(this._r,255))+"%",g:q(100*k(this._g,255))+"%",b:q(100*k(this._b,255))+"%",a:this._a}},toPercentageRgbString:function(){return 1==this._a?"rgb("+q(100*k(this._r,255))+"%, "+q(100*k(this._g,255))+"%, "+q(100*k(this._b,255))+"%)":"rgba("+q(100*k(this._r,255))+"%, "+q(100*k(this._g,255))+"%, "+q(100*k(this._b,255))+"%, "+this._roundA+")"},toName:function(){return 0===this._a?"transparent":!(this._a<1)&&(X[E(this._r,this._g,this._b,!0)]||!1)},toFilter:function(u){var t="#"+p(this._r,this._g,this._b,this._a),e=t,n=this._gradientType?"GradientType = 1, ":"";if(u){var r=i(u);e="#"+p(r._r,r._g,r._b,r._a)}return"progid:DXImageTransform.Microsoft.gradient("+n+"startColorstr="+t+",endColorstr="+e+")"},toString:function(u){var t=!!u;u=u||this._format;var e=!1,n=this._a<1&&this._a>=0;return t||!n||"hex"!==u&&"hex6"!==u&&"hex3"!==u&&"hex4"!==u&&"hex8"!==u&&"name"!==u?("rgb"===u&&(e=this.toRgbString()),"prgb"===u&&(e=this.toPercentageRgbString()),"hex"!==u&&"hex6"!==u||(e=this.toHexString()),"hex3"===u&&(e=this.toHexString(!0)),"hex4"===u&&(e=this.toHex8String(!0)),"hex8"===u&&(e=this.toHex8String()),"name"===u&&(e=this.toName()),"hsl"===u&&(e=this.toHslString()),"hsv"===u&&(e=this.toHsvString()),e||this.toHexString()):"name"===u&&0===this._a?this.toName():this.toRgbString()},clone:function(){return i(this.toString())},_applyModification:function(u,t){var e=u.apply(null,[this].concat([].slice.call(t)));return this._r=e._r,this._g=e._g,this._b=e._b,this.setAlpha(e._a),this},lighten:function(){return this._applyModification(g,arguments)},brighten:function(){return this._applyModification(F,arguments)},darken:function(){return this._applyModification(b,arguments)},desaturate:function(){return this._applyModification(h,arguments)},saturate:function(){return this._applyModification(C,arguments)},greyscale:function(){return this._applyModification(d,arguments)},spin:function(){return this._applyModification(D,arguments)},_applyCombination:function(u,t){return u.apply(null,[this].concat([].slice.call(t)))},analogous:function(){return this._applyCombination(x,arguments)},complement:function(){return this._applyCombination(B,arguments)},monochromatic:function(){return this._applyCombination(w,arguments)},splitcomplement:function(){return this._applyCombination(v,arguments)},triad:function(){return this._applyCombination(y,arguments)},tetrad:function(){return this._applyCombination(m,arguments)}},i.fromRatio=function(u,t){if("object"==typeof u){var e={};for(var n in u)u.hasOwnProperty(n)&&(e[n]="a"===n?u[n]:H(u[n]));u=e}return i(u,t)},i.equals=function(u,t){return!(!u||!t)&&i(u).toRgbString()==i(t).toRgbString()},i.random=function(){return i.fromRatio({r:G(),g:G(),b:G()})},i.mix=function(u,t,e){e=0===e?0:e||50;var n=i(u).toRgb(),r=i(t).toRgb(),o=e/100;return i({r:(r.r-n.r)*o+n.r,g:(r.g-n.g)*o+n.g,b:(r.b-n.b)*o+n.b,a:(r.a-n.a)*o+n.a})},i.readability=function(u,t){var e=i(u),n=i(t);return(r.max(e.getLuminance(),n.getLuminance())+.05)/(r.min(e.getLuminance(),n.getLuminance())+.05)},i.isReadable=function(u,t,e){var n,r,o=i.readability(u,t);switch(r=!1,n=$(e),n.level+n.size){case"AAsmall":case"AAAlarge":r=o>=4.5;break;case"AAlarge":r=o>=3;break;case"AAAsmall":r=o>=7}return r},i.mostReadable=function(u,t,e){var n,r,o,a,s=null,c=0;e=e||{},r=e.includeFallbackColors,o=e.level,a=e.size;for(var l=0;l<t.length;l++)(n=i.readability(u,t[l]))>c&&(c=n,s=i(t[l]));return i.isReadable(u,s,{level:o,size:a})||!r?s:(e.includeFallbackColors=!1,i.mostReadable(u,["#fff","#000"],e))};var Z=i.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},X=i.hexNames=function(u){var t={};for(var e in u)u.hasOwnProperty(e)&&(t[u[e]]=e);return t}(Z),Y=function(){var u="(?:[-\\+]?\\d*\\.\\d+%?)|(?:[-\\+]?\\d+%?)",t="[\\s|\\(]+("+u+")[,|\\s]+("+u+")[,|\\s]+("+u+")\\s*\\)?",e="[\\s|\\(]+("+u+")[,|\\s]+("+u+")[,|\\s]+("+u+")[,|\\s]+("+u+")\\s*\\)?";return{CSS_UNIT:new RegExp(u),rgb:new RegExp("rgb"+t),rgba:new RegExp("rgba"+e),hsl:new RegExp("hsl"+t),hsla:new RegExp("hsla"+e),hsv:new RegExp("hsv"+t),hsva:new RegExp("hsva"+e),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();void 0!==u&&u.exports?u.exports=i:void 0!==(n=function(){return i}.call(t,e,t,u))&&(u.exports=n)}(Math)},function(u,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GUI=void 0;var n=e(9),r=function(u){return u&&u.__esModule?u:{default:u}}(n);t.GUI=r.default},function(u,t,e){"use strict";function n(u,t){if(!(u instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function u(u,t){for(var e=0;e<t.length;e++){var n=t[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(u,n.key,n)}}return function(t,e,n){return e&&u(t.prototype,e),n&&u(t,n),t}}(),i=e(10),o=(function(u){u&&u.__esModule}(i),e(13)),a=e(0),s=e(22),c=e(23),l=function(){function u(t){var r=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];n(this,u),this.opts=t,this.hasRoot=void 0!==t.root,t=t||{},t.width=t.width||300,t.theme=s(t.theme)?c[t.theme]:c.dark,t.root=t.root||document.body,t.align=(t.align||"right").toLowerCase(),t.opacity=t.opacity||1,t.useMenuBar=t.useMenuBar||!1,t.barMode=(t.barMode||"overlay").toLowerCase(),this.styling={barHeight:36},this.uuid=o(),this._LoadStyles(),this._ConstructElements(),this.components={title:e(24),range:e(31),button:e(35),checkbox:e(38),select:e(41),text:e(44),color:e(45)},i.forEach(function(u){r.Register(u)})}return r(u,[{key:"_LoadStyles",value:function(){var u=document.createElement("style");u.setAttribute("type","text/css"),u.setAttribute("rel","stylesheet"),u.setAttribute("href","//cdn.jsdelivr.net/font-hack/2.019/css/hack.min.css"),document.getElementsByTagName("head")[0].appendChild(u)}},{key:"_ConstructElements",value:function(){var u=this;if(this.container=document.createElement("div"),this.container.id="guify",this.container.classList.add("reset"),this.container.classList.add("guify-container"),a(this.container,{top:"above"==this.opts.barMode&&this.hasRoot?"-36px":"0"}),this.opts.root.appendChild(this.container),this.bar=document.createElement("div"),this.bar.className="guify-bar",this.container.appendChild(this.bar),a(this.bar,{background:this.opts.theme.background1}),this.opts.title){var t=this.bar.appendChild(document.createElement("div"));t.className="guify-bar-title",t.innerHTML=this.opts.title,a(t,{color:this.opts.theme.text1})}var n=this.bar.appendChild(document.createElement("button"));if(n.className="guify-bar-button",n.innerHTML="Controls",a(n,{left:"left"==this.opts.align?"8px":"unset",right:"left"==this.opts.align?"unset":"8px"}),n.onclick=function(){u.TogglePanelVisible()},"offset"==this.opts.barMode){this.opts.root.style.height=this.opts.root.offsetHeight+this.bar.offsetHeight+"px";var r=document.createElement("div");r.style.width="100%",r.style.height=this.bar.offsetHeight,this.opts.root.insertBefore(r,this.opts.root.childNodes[0])}this.panel=this.container.appendChild(document.createElement("div")),this.panel.className="guify-panel",a(this.panel,{background:this.opts.theme.background1,width:this.opts.width,opacity:this.opts.opacity||1,left:"left"==this.opts.align?"0px":"unset",right:"left"==this.opts.align?"unset":"0px"}),this.opts.title&&!this.opts.useMenuBar&&e(59)(this.panel,this.opts.title,this.opts.theme),this.opts.useMenuBar?this.SetPanelVisible(!1):(this.bar.style.display="none",this.SetPanelVisible(!0)),this.toastContainer=this.container.appendChild(document.createElement("div")),a(this.toastContainer,{position:"absolute",width:"100%"})}},{key:"SetPanelVisible",value:function(u){this.panel.style.display=u?"block":"none"}},{key:"TogglePanelVisible",value:function(){"none"!=this.panel.style.display?this.SetPanelVisible(!1):this.SetPanelVisible(!0)}},{key:"Register",value:function(u){if(u.object&&u.property&&void 0===u.object[u.property])throw new Error("Object "+u.object+" has no property '"+u.property+"'");if(u.object&&u.property&&(u.initial=u.object[u.property]),void 0===this.components[u.type])throw new Error("No component type named '"+u.type+"' exists.");var t=new this.components[u.type](this.panel,u,this.opts.theme,this.uuid);t.on&&(t.on("initialized",function(t){u.onInitialize&&u.onInitialize(t)}),t.on("input",function(t){u.object&&u.property&&(u.object[u.property]=t),u.onChange&&u.onChange(t)}))}},{key:"Toast",value:function(u){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:100;console.log("[Toast] "+u);var n=this.toastContainer.appendChild(document.createElement("div"));a(n,{"box-sizing":"border-box","background-color":this.opts.theme.background2,color:this.opts.theme.text1,position:"relative",width:"100%",padding:"8px","padding-left":"20px","padding-right":"20px","text-align":"center","font-family":"Hack', monospace","font-size":"11px","z-index":this.container.zIndex-100}),n.innerHTML=u;var r=n.appendChild(document.createElement("button"));r.innerHTML="&#10006;",a(r,{background:"rgba(0, 0, 0, 0)",color:this.opts.theme.text1,position:"absolute",textAlign:"center","margin-top":"auto","margin-bottom":"auto",border:"none",cursor:"pointer",fontFamily:"inherit",top:"0",bottom:"0",right:"8px"});var i=void 0,o=function(){a(n,{"-webkit-transition":"-webkit-opacity "+e+"ms linear",transition:"opacity "+e+"ms linear",opacity:"0"}),clearTimeout(i),i=setTimeout(function(){n&&n.parentNode.removeChild(n)},e)};i=setTimeout(o,t),r.onclick=o}}]),u}();t.default=l,u.exports=t.default},function(u,t,e){var n=e(11);"string"==typeof n&&(n=[[u.i,n,""]]);var r={};r.transform=void 0;e(3)(n,r);n.locals&&(u.exports=n.locals)},function(u,t,e){t=u.exports=e(2)(void 0),t.push([u.i,"#guify {\n  position: absolute;\n  left: 0;\n  width: 100%;\n  font-family: 'Hack', monospace;\n  font-size: 11px; }\n  #guify .guify-bar {\n    height: 36px;\n    width: 100%;\n    opacity: 1.0;\n    position: relative;\n    left: 0;\n    top: 0; }\n    #guify .guify-bar .guify-bar-title {\n      text-align: center;\n      width: 100%;\n      position: absolute;\n      top: 8px;\n      line-height: 20px;\n      color: #ebebeb;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      user-select: none; }\n    #guify .guify-bar .guify-bar-button {\n      text-align: center;\n      border: none;\n      cursor: pointer;\n      font-family: inherit;\n      height: 20px;\n      position: absolute;\n      top: 8px;\n      color: #ebebeb;\n      background-color: #363636;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      user-select: none; }\n      #guify .guify-bar .guify-bar-button:hover {\n        background-color: #4c4c4c; }\n  #guify .guify-panel {\n    position: absolute;\n    padding: 14px;\n    padding-bottom: 8px;\n    /* all: initial;  */\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    cursor: default;\n    text-align: left;\n    box-sizing: border-box; }\n  #guify .guify-panel * {\n    box-sizing: initial;\n    -webkit-box-sizing: initial;\n    -moz-box-sizing: initial; }\n  #guify .guify-panel * input {\n    font-family: 'Hack';\n    font-size: 11px;\n    display: inline; }\n  #guify .guify-panel * a {\n    color: inherit;\n    text-decoration: none; }\n",""])},function(u,t){u.exports=function(u){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!u||"string"!=typeof u)return u;var e=t.protocol+"//"+t.host,n=e+t.pathname.replace(/\/[^\/]*$/,"/");return u.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(u,t){var r=t.trim().replace(/^"(.*)"$/,function(u,t){return t}).replace(/^'(.*)'$/,function(u,t){return t});if(/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(r))return u;var i;return i=0===r.indexOf("//")?r:0===r.indexOf("/")?e+r:n+r.replace(/^\.\//,""),"url("+JSON.stringify(i)+")"})}},function(u,t,e){function n(u,t,e){var n=t&&e||0;"string"==typeof u&&(t="binary"==u?new Array(16):null,u=null),u=u||{};var o=u.random||(u.rng||r)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,t)for(var a=0;a<16;++a)t[n+a]=o[a];return t||i(o)}var r=e(14),i=e(16);u.exports=n},function(u,t,e){(function(t){var e,n=t.crypto||t.msCrypto;if(n&&n.getRandomValues){var r=new Uint8Array(16);e=function(){return n.getRandomValues(r),r}}if(!e){var i=new Array(16);e=function(){for(var u,t=0;t<16;t++)0==(3&t)&&(u=4294967296*Math.random()),i[t]=u>>>((3&t)<<3)&255;return i}}u.exports=e}).call(t,e(15))},function(u,t){var e;e=function(){return this}();try{e=e||Function("return this")()||(0,eval)("this")}catch(u){"object"==typeof window&&(e=window)}u.exports=e},function(u,t){function e(u,t){var e=t||0,r=n;return r[u[e++]]+r[u[e++]]+r[u[e++]]+r[u[e++]]+"-"+r[u[e++]]+r[u[e++]]+"-"+r[u[e++]]+r[u[e++]]+"-"+r[u[e++]]+r[u[e++]]+"-"+r[u[e++]]+r[u[e++]]+r[u[e++]]+r[u[e++]]+r[u[e++]]+r[u[e++]]}for(var n=[],r=0;r<256;++r)n[r]=(r+256).toString(16).substr(1);u.exports=e},function(u,t){var e=null,n=["Webkit","Moz","O","ms"];u.exports=function(u){e||(e=document.createElement("div"));var t=e.style;if(u in t)return u;for(var r=u.charAt(0).toUpperCase()+u.slice(1),i=n.length;i>=0;i--){var o=n[i]+r;if(o in t)return o}return!1}},function(u,t,e){function n(u){return r(u).replace(/\s(\w)/g,function(u,t){return t.toUpperCase()})}var r=e(19);u.exports=n},function(u,t,e){function n(u){return r(u).replace(/[\W_]+(.|$)/g,function(u,t){return t?" "+t:""}).trim()}var r=e(20);u.exports=n},function(u,t){function e(u){return i.test(u)?u.toLowerCase():o.test(u)?(n(u)||u).toLowerCase():a.test(u)?r(u).toLowerCase():u.toLowerCase()}function n(u){return u.replace(s,function(u,t){return t?" "+t:""})}function r(u){return u.replace(c,function(u,t,e){return t+" "+e.toLowerCase().split("").join(" ")})}u.exports=e;var i=/\s/,o=/(_|-|\.|:)/,a=/([a-z][A-Z]|[A-Z][a-z])/,s=/[\W_]+(.|$)/g,c=/(.)([A-Z]+)/g},function(u,t){var e={animationIterationCount:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridColumn:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,stopOpacity:!0,strokeDashoffset:!0,strokeOpacity:!0,strokeWidth:!0};u.exports=function(u,t){return"number"!=typeof t||e[u]?t:t+"px"}},function(u,t,e){"use strict";var n=String.prototype.valueOf,r=function(u){try{return n.call(u),!0}catch(u){return!1}},i=Object.prototype.toString,o="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;u.exports=function(u){return"string"==typeof u||"object"==typeof u&&(o?r(u):"[object String]"===i.call(u))}},function(u,t,e){"use strict";u.exports={light:{background1:"rgb(227,227,227)",background2:"rgb(204,204,204)",background2hover:"rgb(208,208,208)",foreground1:"rgb(105,105,105)",text1:"rgb(36,36,36)",text2:"rgb(87,87,87)"},dark:{background1:"rgb(35,35,35)",background2:"rgb(54,54,54)",background2hover:"rgb(58,58,58)",foreground1:"rgb(112,112,112)",text1:"rgb(235,235,235)",text2:"rgb(161,161,161)"}}},function(u,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=e(0);t.default=function(u,t,r){var i=e(1)(u,t.label);n(i,{"margin-top":"2%","margin-bottom":"1%"});var o=i.appendChild(document.createElement("div"));n(o,{"box-sizing":"border-box",left:0,width:"100%",display:"inline-block",height:"20px",verticalAlign:"top"});var a=o.appendChild(document.createElement("div"));a.innerHTML="&#9632; "+t.label+" &#9632;",n(a,{color:r.text1,display:"inline-block",verticalAlign:"sub"})},u.exports=t.default},function(u,t,e){var n=e(26);u.exports=function(u,t){return n(u,t,"-")}},function(u,t,e){var n=e(27),r=e(28),i=e(29),o=e(30);u.exports=function(u,t,e){function a(u,t,n){return 0===t||t===n.length-u.length?"":e}return null==u?"":(e="string"!=typeof e?" ":e,u=String(u).replace(i,"$1 $2").replace(o,"$1 $2").replace(r,a),n(u,t))}},function(u,t){var e={tr:{regexp:/\u0130|\u0049|\u0049\u0307/g,map:{"İ":"i",I:"ı","İ":"i"}},az:{regexp:/[\u0130]/g,map:{"İ":"i",I:"ı","İ":"i"}},lt:{regexp:/[\u0049\u004A\u012E\u00CC\u00CD\u0128]/g,map:{I:"i̇",J:"j̇","Į":"į̇","Ì":"i̇̀","Í":"i̇́","Ĩ":"i̇̃"}}};u.exports=function(u,t){var n=e[t];return u=null==u?"":String(u),n&&(u=u.replace(n.regexp,function(u){return n.map[u]})),u.toLowerCase()}},function(u,t){u.exports=/[^A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC0-9\xB2\xB3\xB9\xBC-\xBE\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u09F4-\u09F9\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0B72-\u0B77\u0BE6-\u0BF2\u0C66-\u0C6F\u0C78-\u0C7E\u0CE6-\u0CEF\u0D66-\u0D75\u0DE6-\u0DEF\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F33\u1040-\u1049\u1090-\u1099\u1369-\u137C\u16EE-\u16F0\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1946-\u194F\u19D0-\u19DA\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\u2070\u2074-\u2079\u2080-\u2089\u2150-\u2182\u2185-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3007\u3021-\u3029\u3038-\u303A\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA620-\uA629\uA6E6-\uA6EF\uA830-\uA835\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uA9F0-\uA9F9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19]+/g},function(u,t){u.exports=/([a-z\xB5\xDF-\xF6\xF8-\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02AF\u0371\u0373\u0377\u037B-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0561-\u0587\u13F8-\u13FD\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2184\u2C30-\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7B\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793-\uA795\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7B5\uA7B7\uA7FA\uAB30-\uAB5A\uAB60-\uAB65\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A0-9\xB2\xB3\xB9\xBC-\xBE\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u09F4-\u09F9\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0B72-\u0B77\u0BE6-\u0BF2\u0C66-\u0C6F\u0C78-\u0C7E\u0CE6-\u0CEF\u0D66-\u0D75\u0DE6-\u0DEF\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F33\u1040-\u1049\u1090-\u1099\u1369-\u137C\u16EE-\u16F0\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1946-\u194F\u19D0-\u19DA\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\u2070\u2074-\u2079\u2080-\u2089\u2150-\u2182\u2185-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3007\u3021-\u3029\u3038-\u303A\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA620-\uA629\uA6E6-\uA6EF\uA830-\uA835\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uA9F0-\uA9F9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19])([A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AD\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A])/g},function(u,t){u.exports=/([A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AD\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A]+)([A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AD\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A][a-z\xB5\xDF-\xF6\xF8-\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02AF\u0371\u0373\u0377\u037B-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0561-\u0587\u13F8-\u13FD\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2184\u2C30-\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7B\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793-\uA795\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7B5\uA7B7\uA7FA\uAB30-\uAB5A\uAB60-\uAB65\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A])/g},function(u,t,e){"use strict";function n(u,t){if(!(u instanceof t))throw new TypeError("Cannot call a class as a function")}function r(u,t){if(!u)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?u:t}function i(u,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);u.prototype=Object.create(t&&t.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(u,t):u.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var o=e(32),a=(function(u){u&&u.__esModule}(o),e(4)),s=e(0),c=e(34),l=function(u){function t(u,i,o,a){n(this,t);var l=r(this,(t.__proto__||Object.getPrototypeOf(t)).call(this)),A=void 0,E=void 0,f=void 0,p=void 0,h=void 0,C=e(1)(u,i.label);if(e(5)(C,i.label,o),i.step&&i.steps)throw new Error("Cannot specify both step and steps. Got step = "+i.step+", steps = ",i.steps);var d=C.appendChild(document.createElement("input"));if(d.type="range",d.className="guify-range","log"===i.scale?(A=function(u){return h*Math.exp(Math.log(f)+(Math.log(p)-Math.log(f))*u/100)},E=function(u){return 100*(Math.log(u*h)-Math.log(f))/(Math.log(p)-Math.log(f))}):A=E=function(u){return u},"log"===i.scale){if(i.max=c(i.max)?i.max:100,i.min=c(i.min)?i.min:.1,i.min*i.max<=0)throw new Error("Log range min/max must have the same sign and not equal zero. Got min = "+i.min+", max = "+i.max);if(f=i.min,p=i.max,h=i.min>0?1:-1,f=Math.abs(f),p=Math.abs(p),i.min=0,i.max=100,c(i.step))throw new Error("Log may only use steps (integer number of steps), not a step value. Got step ="+i.step);if(i.step=1,i.initial=E(c(i.initial)?i.initial:A(.5*(i.min+i.max))),i.initial*E(i.max)<=0)throw new Error("Log range initial value must have the same sign as min/max and must not equal zero. Got initial value = "+i.initial)}else i.max=c(i.max)?i.max:100,i.min=c(i.min)?i.min:0,i.step=c(i.step)?i.step:(i.max-i.min)/100,i.initial=c(i.initial)?i.initial:.5*(i.min+i.max);c(i.steps)&&(i.step=c(i.steps)?(i.max-i.min)/i.steps:i.step);var g=Math.round((i.initial-i.min)/i.step);i.initial=i.min+i.step*g,d.min=i.min,d.max=i.max,d.step=i.step,d.value=i.initial,s(d,{width:"47.5%"});var F=e(6)(C,A(i.initial),o,"11%");return setTimeout(function(){l.emit("initialized",parseFloat(d.value))}),d.oninput=function(u){var t=A(parseFloat(u.target.value));F.innerHTML=t,l.emit("input",t)},l}return i(t,u),t}(a);t.default=l,u.exports=t.default},function(u,t,e){var n=e(33);"string"==typeof n&&(n=[[u.i,n,""]]);var r={};r.transform=void 0;e(3)(n,r);n.locals&&(u.exports=n.locals)},function(u,t,e){t=u.exports=e(2)(void 0),t.push([u.i,"input[type=range].guify-range {\n  -webkit-appearance: none;\n  width: 100%;\n  margin: 0px 0; }\n\ninput[type=range].guify-range:focus {\n  outline: none; }\n\ninput[type=range].guify-range::-webkit-slider-runnable-track {\n  width: 100%;\n  height: 20px;\n  cursor: ew-resize;\n  background: #363636; }\n\ninput[type=range].guify-range::-webkit-slider-thumb {\n  height: 20px;\n  width: 10px;\n  background: #707070;\n  cursor: ew-resize;\n  -webkit-appearance: none;\n  margin-top: 0px; }\n\ninput[type=range].guify-range:focus::-webkit-slider-runnable-track {\n  background: #363636;\n  outline: none; }\n\ninput[type=range].guify-range::-moz-range-track {\n  width: 100%;\n  height: 20px;\n  cursor: ew-resize;\n  background: #363636; }\n\ninput[type=range].guify-range::-moz-range-thumb {\n  height: 20px;\n  width: 10px;\n  background: #707070;\n  cursor: ew-resize; }\n\ninput[type=range].guify-range::-ms-track {\n  width: 100%;\n  height: 20px;\n  cursor: ew-resize;\n  background: transparent;\n  border-color: transparent;\n  color: transparent; }\n\ninput[type=range].guify-range::-ms-fill-lower {\n  background: #363636; }\n\ninput[type=range].guify-range::-ms-fill-upper {\n  background: #363636; }\n\ninput[type=range].guify-range::-ms-thumb {\n  width: 10px;\n  border-radius: 0px;\n  background: #707070;\n  cursor: ew-resize;\n  height: 20px; }\n\ninput[type=range].guify-range:focus::-ms-fill-lower {\n  background: #363636;\n  outline: none; }\n\ninput[type=range].guify-range:focus::-ms-fill-upper {\n  background: #363636;\n  outline: none; }\n\ninput[type=range].guify-range {\n  -webkit-appearance: none;\n  width: 100%;\n  margin: 0px 0; }\n\ninput[type=range].guify-range:focus {\n  outline: none; }\n\ninput[type=range].guify-range::-webkit-slider-runnable-track {\n  width: 100%;\n  height: 20px;\n  cursor: ew-resize;\n  background: #363636; }\n\ninput[type=range].guify-range::-webkit-slider-thumb {\n  height: 20px;\n  width: 10px;\n  background: #707070;\n  cursor: ew-resize;\n  -webkit-appearance: none;\n  margin-top: 0px; }\n\ninput[type=range].guify-range:focus::-webkit-slider-runnable-track {\n  background: #363636;\n  outline: none; }\n\ninput[type=range].guify-range::-moz-range-track {\n  width: 100%;\n  height: 20px;\n  cursor: ew-resize;\n  background: #363636; }\n\ninput[type=range].guify-range::-moz-range-thumb {\n  height: 20px;\n  width: 10px;\n  background: #707070;\n  cursor: ew-resize; }\n\ninput[type=range].guify-range::-ms-track {\n  width: 100%;\n  height: 20px;\n  cursor: ew-resize;\n  background: transparent;\n  border-color: transparent;\n  color: transparent; }\n\ninput[type=range].guify-range::-ms-fill-lower {\n  background: #363636; }\n\ninput[type=range].guify-range::-ms-fill-upper {\n  background: #363636; }\n\ninput[type=range].guify-range::-ms-thumb {\n  width: 10px;\n  background: #707070;\n  cursor: ew-resize;\n  height: 20px; }\n\ninput[type=range].guify-range:focus::-ms-fill-lower {\n  background: #363636;\n  outline: none; }\n\ninput[type=range].guify-range:focus::-ms-fill-upper {\n  background: #363636;\n  outline: none; }\n\ninput[type=range].guify-range {\n  -webkit-appearance: none;\n  width: 100%;\n  margin: 0px 0; }\n\ninput[type=range].guify-range:focus {\n  outline: none; }\n\ninput[type=range].guify-range::-webkit-slider-runnable-track {\n  width: 100%;\n  height: 20px;\n  cursor: ew-resize;\n  background: #363636; }\n\ninput[type=range].guify-range::-webkit-slider-thumb {\n  height: 20px;\n  width: 10px;\n  background: #707070;\n  cursor: ew-resize;\n  -webkit-appearance: none;\n  margin-top: 0px; }\n\ninput[type=range].guify-range:focus::-webkit-slider-runnable-track {\n  background: #363636;\n  outline: none; }\n\ninput[type=range].guify-range::-moz-range-track {\n  width: 100%;\n  height: 20px;\n  cursor: ew-resize;\n  background: #363636; }\n\ninput[type=range].guify-range::-moz-range-thumb {\n  border: 0px solid transparent;\n  height: 20px;\n  width: 10px;\n  border-radius: 0px;\n  background: #707070;\n  cursor: ew-resize; }\n\ninput[type=range].guify-range::-ms-track {\n  width: 100%;\n  height: 20px;\n  cursor: ew-resize;\n  background: transparent;\n  border-color: transparent;\n  color: transparent; }\n\ninput[type=range].guify-range::-ms-fill-lower {\n  background: #363636; }\n\ninput[type=range].guify-range::-ms-fill-upper {\n  background: #363636; }\n\ninput[type=range].guify-range::-ms-thumb {\n  width: 10px;\n  background: #707070;\n  cursor: ew-resize;\n  height: 20px; }\n\ninput[type=range].guify-range:focus::-ms-fill-lower {\n  background: #363636;\n  outline: none; }\n\ninput[type=range].guify-range:focus::-ms-fill-upper {\n  background: #363636;\n  outline: none; }\n",""])},function(u,t,e){!function(e){"use strict";function n(u){return"number"==typeof u&&!isNaN(u)||!!(u=(u||"").toString().trim())&&!isNaN(u)}void 0!==u&&u.exports&&(t=u.exports=n),t.isNumeric=n}()},function(u,t,e){"use strict";function n(u,t){if(!(u instanceof t))throw new TypeError("Cannot call a class as a function")}function r(u,t){if(!u)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?u:t}function i(u,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);u.prototype=Object.create(t&&t.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(u,t):u.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var o=e(36),a=(function(u){u&&u.__esModule}(o),e(4)),s=e(0),c=function(u){function t(u,i,o,a){n(this,t);var c=r(this,(t.__proto__||Object.getPrototypeOf(t)).call(this)),l=e(1)(u,i.label);e(5)(l,"",o);var A=l.appendChild(document.createElement("button"));return A.className="guify-button",A.onfocus=function(){s(A,{outline:"none"})},A.textContent=i.label,s(A,{position:"absolute",textAlign:"center",height:"20px",width:"62%",border:"none",cursor:"pointer",right:0,fontFamily:"inherit"}),A.addEventListener("click",i.action),c}return i(t,u),t}(a);t.default=c,u.exports=t.default},function(u,t,e){var n=e(37);"string"==typeof n&&(n=[[u.i,n,""]]);var r={};r.transform=void 0;e(3)(n,r);n.locals&&(u.exports=n.locals)},function(u,t,e){t=u.exports=e(2)(void 0),t.push([u.i,".guify-button {\n  box-sizing: border-box !important;\n  color: #a1a1a1;\n  background-color: #363636; }\n\n.guify-button:hover {\n  color: #a1a1a1;\n  background-color: #4c4c4c; }\n\n.guify-button:active {\n  color: #363636;\n  background-color: #a1a1a1; }\n",""])},function(u,t,e){"use strict";function n(u,t){if(!(u instanceof t))throw new TypeError("Cannot call a class as a function")}function r(u,t){if(!u)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?u:t}function i(u,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);u.prototype=Object.create(t&&t.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(u,t):u.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var o=e(39),a=(function(u){u&&u.__esModule}(o),e(4)),s=(e(0),function(u){function t(u,i,o,a){n(this,t);var s=r(this,(t.__proto__||Object.getPrototypeOf(t)).call(this)),c=e(1)(u,i.label);e(5)(c,i.label,o);var l=c.appendChild(document.createElement("input"));l.id="checkbox-"+i.label+a,l.type="checkbox",l.checked=i.initial,l.className="guify-checkbox";var A=c.appendChild(document.createElement("label"));return A.htmlFor="checkbox-"+i.label+a,A.className="guify-checkbox",setTimeout(function(){s.emit("initialized",l.checked)}),l.onchange=function(u){s.emit("input",u.target.checked)},s}return i(t,u),t}(a));t.default=s,u.exports=t.default},function(u,t,e){var n=e(40);"string"==typeof n&&(n=[[u.i,n,""]]);var r={};r.transform=void 0;e(3)(n,r);n.locals&&(u.exports=n.locals)},function(u,t,e){t=u.exports=e(2)(void 0),t.push([u.i,'input[type=checkbox].guify-checkbox {\n  display: none !important;\n  cursor: pointer; }\n\ninput[type=checkbox].guify-checkbox + label:before {\n  content: "";\n  display: inline-block;\n  width: 18px;\n  height: 18px;\n  padding: 0px;\n  vertical-align: middle;\n  margin-right: 8px;\n  margin-top: 1px;\n  background-color: #363636;\n  border-radius: 0px;\n  cursor: pointer; }\n\ninput[type=checkbox]:checked.guify-checkbox + label:before {\n  width: 10px;\n  height: 10px;\n  background-color: #707070;\n  border: solid 4px #363636;\n  cursor: pointer;\n  box-sizing: content-box;\n  -moz-box-sizing: content-box;\n  -webkit-box-sizing: content-box; }\n',""])},function(u,t,e){"use strict";function n(u,t){if(!(u instanceof t))throw new TypeError("Cannot call a class as a function")}function r(u,t){if(!u)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?u:t}function i(u,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);u.prototype=Object.create(t&&t.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(u,t):u.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var o=e(42),a=(function(u){u&&u.__esModule}(o),e(4)),s=function(u){function t(u,i,o,a){n(this,t);var s,c,l,A,E,f,p,h,C,d=r(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));if(c=e(1)(u,i.label),e(5)(c,i.label,o),l=document.createElement("select"),l.className="guify-select-dropdown",A=document.createElement("span"),A.className="guify-select-triangle guify-select-triangle--down",E=document.createElement("span"),E.className="guify-select-triangle guify-select-triangle--up",c.appendChild(A),c.appendChild(E),Array.isArray(i.options))for(s=0;s<i.options.length;s++)p=i.options[s],h=document.createElement("option"),h.value=h.textContent=p,i.initial===p&&(h.selected="selected"),l.appendChild(h);else for(C=Object.keys(i.options),s=0;s<C.length;s++)f=C[s],h=document.createElement("option"),h.value=f,i.initial===f&&(h.selected="selected"),h.textContent=i.options[f],l.appendChild(h);return c.appendChild(l),l.onchange=function(u){d.emit("input",u.target.value)},d}return i(t,u),t}(a);t.default=s,u.exports=t.default},function(u,t,e){var n=e(43);"string"==typeof n&&(n=[[u.i,n,""]]);var r={};r.transform=void 0;e(3)(n,r);n.locals&&(u.exports=n.locals)},function(u,t,e){t=u.exports=e(2)(void 0),t.push([u.i,".guify-select-dropdown {\n  display: inline-block;\n  position: absolute;\n  width: 62%;\n  padding-left: 1.5%;\n  height: 20px;\n  border: none;\n  border-radius: 0;\n  outline: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  -o-appearance: none;\n  appearance: none;\n  font-family: inherit;\n  background-color: #363636;\n  color: #a1a1a1;\n  box-sizing: border-box !important;\n  -moz-box-sizing: border-box !important;\n  -webkit-box-sizing: border-box !important; }\n\n.guify-select-dropdown::-ms-expand {\n  display: none; }\n\n.guify-select-triangle {\n  content: ' ';\n  border-right: 3px solid transparent;\n  border-left: 3px solid transparent;\n  line-height: 20px;\n  position: absolute;\n  right: 2.5%;\n  z-index: 1; }\n\n.guify-select-triangle--down {\n  top: 11px;\n  border-top: 5px solid #a1a1a1;\n  border-bottom: 0px transparent; }\n\n.guify-select-triangle--up {\n  top: 4px;\n  border-bottom: 5px solid #a1a1a1;\n  border-top: 0px transparent; }\n",""])},function(u,t,e){"use strict";function n(u,t){if(!(u instanceof t))throw new TypeError("Cannot call a class as a function")}function r(u,t){if(!u)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?u:t}function i(u,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);u.prototype=Object.create(t&&t.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(u,t):u.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var o=e(4),a=e(0),s=function(u){function t(u,i,o,s){n(this,t);var c=r(this,(t.__proto__||Object.getPrototypeOf(t)).call(this)),l=e(1)(u,i.label);e(5)(l,i.label,o);var A=l.appendChild(document.createElement("input"));return A.type="text",A.className="guify-text",i.initial&&(A.value=i.initial),A.onfocus=function(){a(A,{outline:"none"})},a(A,{position:"absolute",paddingLeft:"6px",height:"20px",width:"62%",border:"none",background:o.background2,color:o.text2,fontFamily:"inherit","box-sizing":"border-box","-moz-box-sizing":"border-box","-webkit-box-sizing":"border-box",resize:"vertical"}),setTimeout(function(){c.emit("initialized",A.value)}),A.oninput=function(u){c.emit("input",u.target.value)},c}return i(t,u),t}(o);t.default=s,u.exports=t.default},function(u,t,e){"use strict";function n(u,t){if(!(u instanceof t))throw new TypeError("Cannot call a class as a function")}function r(u,t){if(!u)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?u:t}function i(u,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);u.prototype=Object.create(t&&t.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(u,t):u.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var o=e(46),a=(function(u){u&&u.__esModule}(o),e(4)),s=e(48),c=e(0),l=e(7),A=function(u){function t(u,i,o,a){function A(u){switch(i.format){case"rgb":return l(u).toRgbString();case"hex":return l(u).toHexString();case"array":var t=l(u).toRgb();return[t.r/255,t.g/255,t.b/255].map(function(u){return u.toFixed(2)});default:return u}}n(this,t);var E=r(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));i.format=i.format||"rgb",i.initial=i.initial||"#123456";var f=e(1)(u,i.label);e(5)(f,i.label,o);var p=f.appendChild(document.createElement("span"));p.className="guify-color-"+a;var h=e(6)(f,"",o,"46%");p.onmouseover=function(){d.$el.style.display=""};var C=i.initial;switch(i.format){case"rgb":case"hex":C=l(C).toHexString();break;case"array":C=l.fromRatio({r:C[0],g:C[1],b:C[2]}).toHexString()}var d=new s({el:p,color:C,background:o.background1,width:125,height:100});return c(d.$el,{marginTop:"20px",display:"none",position:"absolute"}),c(p,{position:"relative",display:"inline-block",width:"12.5%",height:"20px",backgroundColor:d.getHexString()}),p.onmouseout=function(u){d.$el.style.display="none"},setTimeout(function(){E.emit("initialized",C)}),d.onChange(function(u){h.innerHTML=A(u),c(p,{backgroundColor:u}),E.emit("input",A(u))}),E}return i(t,u),t}(a);t.default=A,u.exports=t.default},function(u,t,e){var n=e(47);"string"==typeof n&&(n=[[u.i,n,""]]);var r={};r.transform=void 0;e(3)(n,r);n.locals&&(u.exports=n.locals)},function(u,t,e){t=u.exports=e(2)(void 0),t.push([u.i,".Scp {\n  width: 125px;\n  height: 100px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  position: relative;\n  z-index: 1000;\n  cursor: pointer; }\n\n.Scp-saturation {\n  position: relative;\n  width: calc(100% - 25px);\n  height: 100%;\n  background: linear-gradient(to right, #fff 0%, #f00 100%);\n  float: left;\n  margin-right: 5px; }\n\n.Scp-brightness {\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(to top, #000 0%, rgba(255, 255, 255, 0) 100%); }\n\n.Scp-sbSelector {\n  border: 1px solid;\n  position: absolute;\n  width: 14px;\n  height: 14px;\n  background: #fff;\n  border-radius: 10px;\n  top: -7px;\n  left: -7px;\n  box-sizing: border-box;\n  z-index: 10; }\n\n.Scp-hue {\n  width: 20px;\n  height: 100%;\n  position: relative;\n  float: left;\n  background: linear-gradient(to bottom, #f00 0%, #f0f 17%, #00f 34%, #0ff 50%, #0f0 67%, #ff0 84%, #f00 100%); }\n\n.Scp-hSelector {\n  position: absolute;\n  background: #fff;\n  border-bottom: 1px solid #000;\n  right: -3px;\n  width: 10px;\n  height: 2px; }\n",""])},function(u,t,e){"use strict";!function(){function t(u){return u=u||{},this.color=null,this.width=0,this.widthUnits="px",this.height=0,this.heightUnits="px",this.hue=0,this.position={x:0,y:0},this.huePosition=0,this.saturationWidth=0,this.hueHeight=0,this.maxHue=0,this.inputIsNumber=!1,this._onSaturationMouseDown=this._onSaturationMouseDown.bind(this),this._onSaturationMouseMove=this._onSaturationMouseMove.bind(this),this._onSaturationMouseUp=this._onSaturationMouseUp.bind(this),this._onHueMouseDown=this._onHueMouseDown.bind(this),this._onHueMouseMove=this._onHueMouseMove.bind(this),this._onHueMouseUp=this._onHueMouseUp.bind(this),this.$el=document.createElement("div"),this.$el.className="Scp",this.$el.innerHTML=['<div class="Scp-saturation">','<div class="Scp-brightness"></div>','<div class="Scp-sbSelector"></div>',"</div>",'<div class="Scp-hue">','<div class="Scp-hSelector"></div>',"</div>"].join(""),this.$saturation=this.$el.querySelector(".Scp-saturation"),this.$hue=this.$el.querySelector(".Scp-hue"),this.$sbSelector=this.$el.querySelector(".Scp-sbSelector"),this.$hSelector=this.$el.querySelector(".Scp-hSelector"),this.$saturation.addEventListener("mousedown",this._onSaturationMouseDown),this.$saturation.addEventListener("touchstart",this._onSaturationMouseDown),this.$hue.addEventListener("mousedown",this._onHueMouseDown),this.$hue.addEventListener("touchstart",this._onHueMouseDown),u.el&&this.appendTo(u.el),u.background&&this.setBackgroundColor(u.background),u.widthUnits&&(this.widthUnits=u.widthUnits),u.heightUnits&&(this.heightUnits=u.heightUnits),this.setSize(u.width||175,u.height||150),this.setColor(u.color),this}function n(u,t,e){return Math.min(Math.max(u,t),e)}function r(u){return u=0===u.type.indexOf("touch")?u.touches[0]:u,{x:u.clientX,y:u.clientY}}function i(u){return u="#"+("00000"+(0|u).toString(16)).substr(-6)}var o=e(49),a=e(50),s=e(7),c=e(53);o(t.prototype),t.prototype.appendTo=function(u){return u.appendChild(this.$el),this},t.prototype.remove=function(){this._onSaturationMouseUp(),this._onHueMouseUp(),this.$saturation.removeEventListener("mousedown",this._onSaturationMouseDown),this.$saturation.removeEventListener("touchstart",this._onSaturationMouseDown),this.$hue.removeEventListener("mousedown",this._onHueMouseDown),this.$hue.removeEventListener("touchstart",this._onHueMouseDown),this.off(),this.$el.parentNode&&this.$el.parentNode.removeChild(this.$el)},t.prototype.setColor=function(u){a(u)?(this.inputIsNumber=!0,u=i(u)):this.inputIsNumber=!1,this.color=s(u);var t=this.color.toHsv();return isNaN(t.h)||(this.hue=t.h),this._moveSelectorTo(this.saturationWidth*t.s,(1-t.v)*this.hueHeight),this._moveHueTo((1-this.hue/360)*this.hueHeight),this._updateHue(),this},t.prototype.setSize=function(u,t){return this.width=u,this.height=t,this.$el.style.width=this.width+this.widthUnits,this.$el.style.height=this.height+this.heightUnits,this.saturationWidth=this.width-25,this.$saturation.style.width=this.saturationWidth+"px",this.hueHeight=this.height,this.maxHue=this.hueHeight-2,this},t.prototype.setBackgroundColor=function(u){return a(u)&&(u=i(u)),this.$el.style.padding="5px",this.$el.style.background=s(u).toHexString(),this},t.prototype.setNoBackground=function(){this.$el.style.padding="0px",this.$el.style.background="none"},t.prototype.onChange=function(u){return this.on("update",u),this.emit("update",this.getHexString()),this},t.prototype.getColor=function(){return this.inputIsNumber?this.getHexNumber():this.color.toString()},t.prototype.getHexString=function(){return this.color.toHexString().toUpperCase()},t.prototype.getHexNumber=function(){return parseInt(this.color.toHex(),16)},t.prototype.getRGB=function(){return this.color.toRgb()},t.prototype.getHSV=function(){return this.color.toHsv()},t.prototype.isDark=function(){return this.color.isDark()},t.prototype.isLight=function(){return this.color.isLight()},t.prototype._moveSelectorTo=function(u,t){this.position.x=n(u,0,this.saturationWidth),this.position.y=n(t,0,this.hueHeight),c(this.$sbSelector,{x:this.position.x,y:this.position.y})},t.prototype._updateColorFromPosition=function(){this.color=s({h:this.hue,s:this.position.x/this.saturationWidth,v:1-this.position.y/this.hueHeight}),this._updateColor()},t.prototype._moveHueTo=function(u){this.huePosition=n(u,0,this.maxHue),c(this.$hSelector,{y:this.huePosition})},t.prototype._updateHueFromPosition=function(){var u=this.color.toHsv();this.hue=360*(1-this.huePosition/this.maxHue),this.color=s({h:this.hue,s:u.s,v:u.v}),this._updateHue()},t.prototype._updateHue=function(){var u=s({h:this.hue,s:1,v:1});this.$saturation.style.background="linear-gradient(to right, #fff, "+u.toHexString()+")",this._updateColor()},t.prototype._updateColor=function(){this.$sbSelector.style.background=this.color.toHexString(),this.$sbSelector.style.borderColor=this.color.isDark()?"#fff":"#000",this.emit("update",this.color.toHexString())},t.prototype._onSaturationMouseDown=function(u){var t=this.$saturation.getBoundingClientRect(),e=r(u).x,n=r(u).y;this._moveSelectorTo(e-t.left,n-t.top),this._updateColorFromPosition(),window.addEventListener("mouseup",this._onSaturationMouseUp),window.addEventListener("touchend",this._onSaturationMouseUp),window.addEventListener("mousemove",this._onSaturationMouseMove),window.addEventListener("touchmove",this._onSaturationMouseMove),u.preventDefault()},t.prototype._onSaturationMouseMove=function(u){var t=this.$saturation.getBoundingClientRect(),e=r(u).x,n=r(u).y;this._moveSelectorTo(e-t.left,n-t.top),this._updateColorFromPosition()},t.prototype._onSaturationMouseUp=function(){window.removeEventListener("mouseup",this._onSaturationMouseUp),window.removeEventListener("touchend",this._onSaturationMouseUp),window.removeEventListener("mousemove",this._onSaturationMouseMove),window.removeEventListener("touchmove",this._onSaturationMouseMove)},t.prototype._onHueMouseDown=function(u){var t=this.$hue.getBoundingClientRect(),e=r(u).y;this._moveHueTo(e-t.top),this._updateHueFromPosition(),window.addEventListener("mouseup",this._onHueMouseUp),window.addEventListener("touchend",this._onHueMouseUp),window.addEventListener("mousemove",this._onHueMouseMove),window.addEventListener("touchmove",this._onHueMouseMove),u.preventDefault()},t.prototype._onHueMouseMove=function(u){var t=this.$hue.getBoundingClientRect(),e=r(u).y;this._moveHueTo(e-t.top),this._updateHueFromPosition()},t.prototype._onHueMouseUp=function(){window.removeEventListener("mouseup",this._onHueMouseUp),window.removeEventListener("touchend",this._onHueMouseUp),window.removeEventListener("mousemove",this._onHueMouseMove),window.removeEventListener("touchmove",this._onHueMouseMove)},void 0!==u&&u.exports&&(u.exports=t)}()},function(u,t,e){function n(u){if(u)return r(u)}function r(u){for(var t in n.prototype)u[t]=n.prototype[t];return u}u.exports=n,n.prototype.on=n.prototype.addEventListener=function(u,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+u]=this._callbacks["$"+u]||[]).push(t),this},n.prototype.once=function(u,t){function e(){this.off(u,e),t.apply(this,arguments)}return e.fn=t,this.on(u,e),this},n.prototype.off=n.prototype.removeListener=n.prototype.removeAllListeners=n.prototype.removeEventListener=function(u,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var e=this._callbacks["$"+u];if(!e)return this;if(1==arguments.length)return delete this._callbacks["$"+u],this;for(var n,r=0;r<e.length;r++)if((n=e[r])===t||n.fn===t){e.splice(r,1);break}return this},n.prototype.emit=function(u){this._callbacks=this._callbacks||{};var t=[].slice.call(arguments,1),e=this._callbacks["$"+u];if(e){e=e.slice(0);for(var n=0,r=e.length;n<r;++n)e[n].apply(this,t)}return this},n.prototype.listeners=function(u){return this._callbacks=this._callbacks||{},this._callbacks["$"+u]||[]},n.prototype.hasListeners=function(u){return!!this.listeners(u).length}},function(u,t,e){"use strict";/*!
 * is-number <https://github.com/jonschlinkert/is-number>
 *
 * Copyright (c) 2014-2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */
var n=e(51);u.exports=function(u){var t=n(u);if("number"!==t&&"string"!==t)return!1;var e=+u;return e-e+1>=0&&""!==u}},function(u,t,e){var n=e(52),r=Object.prototype.toString;u.exports=function(u){if(void 0===u)return"undefined";if(null===u)return"null";if(!0===u||!1===u||u instanceof Boolean)return"boolean";if("string"==typeof u||u instanceof String)return"string";if("number"==typeof u||u instanceof Number)return"number";if("function"==typeof u||u instanceof Function)return"function";if(void 0!==Array.isArray&&Array.isArray(u))return"array";if(u instanceof RegExp)return"regexp";if(u instanceof Date)return"date";var t=r.call(u);return"[object RegExp]"===t?"regexp":"[object Date]"===t?"date":"[object Arguments]"===t?"arguments":"[object Error]"===t?"error":n(u)?"buffer":"[object Set]"===t?"set":"[object WeakSet]"===t?"weakset":"[object Map]"===t?"map":"[object WeakMap]"===t?"weakmap":"[object Symbol]"===t?"symbol":"[object Int8Array]"===t?"int8array":"[object Uint8Array]"===t?"uint8array":"[object Uint8ClampedArray]"===t?"uint8clampedarray":"[object Int16Array]"===t?"int16array":"[object Uint16Array]"===t?"uint16array":"[object Int32Array]"===t?"int32array":"[object Uint32Array]"===t?"uint32array":"[object Float32Array]"===t?"float32array":"[object Float64Array]"===t?"float64array":"object"}},function(u,t){function e(u){return!!u.constructor&&"function"==typeof u.constructor.isBuffer&&u.constructor.isBuffer(u)}function n(u){return"function"==typeof u.readFloatLE&&"function"==typeof u.slice&&e(u.slice(0,0))}/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
u.exports=function(u){return null!=u&&(e(u)||n(u)||!!u._isBuffer)}},function(u,t,e){"use strict";function n(u,t){var e,n,r,i=[];a(t);for(e in t)f.call(t,e)&&(n=t[e],f.call(A.transform,e)?(r=A.transform[e],l(n)&&(n=n.join(r.separator)),i.push(e+"("+E(n,r.defaultUnit,r.separator)+")")):f.call(A,e)?(r=A[e],l(n)&&(n=n.join(r.separator)),u.style[c(e)]=E(n,r.defaultUnit,r.separator)):console.warn("dom-transform: this property (`"+e+"`) is not supported."));u.style[p]=i.join(" ")}function r(u,t){var e=u.style;if("string"==typeof t)return f.call(A.transform,t)?e[p]:e[c(t)];t||(t=s());var n={};return t.forEach(function(u){n[u]=e[c(u)]}),n}function i(u,t){var e=u.style;if("string"==typeof t)return void(e[c(t)]=null);t||(t=s()),t.forEach(function(u){e[c(u)]=null})}function o(){return p.length>0}function a(u){var t;for(t in u)f.call(h,t)&&(u[h[t]]=u[t],delete u[t])}function s(){return Object.keys(A).map(function(u){return u})}var c=e(54),l=e(55),A=e(56),E=e(57),f=Object.prototype.hasOwnProperty,p=c("transform"),h={x:"translateX",y:"translateY",z:"translateZ",origin:"transformOrigin"};t=u.exports=n,t.get=r,t.reset=i,t.isSupported=o},function(u,t){function e(u){if(u=u.replace(/-([a-z])/g,function(u,t){return t.toUpperCase()}),void 0!==i[u])return u;for(var t=u.charAt(0).toUpperCase()+u.slice(1),e=o.length;e--;){var n=o[e]+t;if(void 0!==i[n])return n}return u}function n(u){return u in s?s[u]:s[u]=e(u)}function r(u){return u=e(u),a.test(u)&&(u="-"+u.replace(a,"-$1"),a.lastIndex=0),u.toLowerCase()}var i="undefined"!=typeof document?document.createElement("p").style:{},o=["O","ms","Moz","Webkit"],a=/([A-Z])/g,s={};u.exports=n,u.exports.dash=r},function(u,t){var e=Array.isArray,n=Object.prototype.toString;u.exports=e||function(u){return!!u&&"[object Array]"==n.call(u)}},function(u,t,e){"use strict";u.exports={transform:{translate:{defaultUnit:"px"},translate3d:{defaultUnit:"px"},translateX:{defaultUnit:"px"},translateY:{defaultUnit:"px"},translateZ:{defaultUnit:"px"},scale:{defaultUnit:""},scale3d:{defaultUnit:""},scaleX:{defaultUnit:""},scaleY:{defaultUnit:""},scaleZ:{defaultUnit:""},rotate:{defaultUnit:"deg"},rotate3d:{defaultUnit:""},rotateX:{defaultUnit:"deg"},rotateY:{defaultUnit:"deg"},rotateZ:{defaultUnit:"deg"},skew:{defaultUnit:"deg"},skewX:{defaultUnit:"deg"},skewY:{defaultUnit:"deg"},perspective:{defaultUnit:"px"},matrix:{defaultUnit:""},matrix3d:{defaultUnit:""}},transformOrigin:{defaultUnit:"px",separator:" "}}},function(u,t,e){"use strict";var n=e(58),r=/^-?\d+(\.\d+)?$/;u.exports=function(u,t,e){if(e=e||",","number"==typeof u)return""+u+t;var i=new RegExp(e,"g");return u.split(i.test(u)?e:" ").map(function(u){return u=n(u),r.test(u)&&(u+=t),u}).join(e)}},function(u,t){function e(u){return u.replace(/^\s*|\s*$/g,"")}t=u.exports=e,t.left=function(u){return u.replace(/^\s*/,"")},t.right=function(u){return u.replace(/\s*$/,"")}},function(u,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(u,t,e){var r=u.appendChild(document.createElement("div"));return r.innerHTML=t,n(r,{width:"100%",textAlign:"center",color:e.text2,height:"20px",marginBottom:"4px"}),r};var n=e(0);u.exports=t.default}])});
},{}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Dust = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _cellauto = require("./vendor/cellauto.js");

var CellAuto = _interopRequireWildcard(_cellauto);

var _worlds = require("./worlds.js");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Dust = exports.Dust = function () {
    function Dust(container, initFinishedCallback) {
        var _this = this;

        _classCallCheck(this, Dust);

        this.container = container;

        var worldNames = Object.keys(_worlds.Worlds);
        this.worldOptions = {
            name: worldNames[worldNames.length * Math.random() << 0] // Random startup world
            //width: 128, // Can force a width/height here
            //height: 128,


            // Create the app and put its canvas into `container`
        };this.app = new PIXI.Application({
            antialias: false,
            transparent: false,
            resolution: 1
        });
        this.container.appendChild(this.app.view);

        // Start the update loop
        this.app.ticker.add(function (delta) {
            _this.OnUpdate(delta);
        });

        this.framecounter = new FrameCounter(1, null);

        // Stop application and wait for setup to finish
        this.app.stop();

        // Load resources needed for the program to run
        PIXI.loader.add('fragShader', '../resources/dust.frag').load(function (loader, res) {
            // Loading has finished
            _this.loadedResources = res;
            _this.Setup();
            _this.app.start();
            initFinishedCallback();
        });
    }

    /**
     * Reusable method for setting up the simulation from `this.worldOptions`.
     * Also works as a reset function if you call this without changing
     * `this.worldOptions.name` beforehand.
     */


    _createClass(Dust, [{
        key: "Setup",
        value: function Setup() {

            // Create the world from the string
            try {
                this.world = _worlds.Worlds[this.worldOptions.name].call(this, this.worldOptions.width, this.worldOptions.height);
            } catch (err) {
                throw "World with the name " + this.worldOptions.name + " does not exist!";
            }
            this.framecounter.frameFrequency = this.world.recommendedFrameFrequency || 1;

            this.app.renderer.resize(this.world.width, this.world.height);

            // Remove canvas filtering through css
            this.app.renderer.view.style.cssText = " \n            image-rendering: optimizeSpeed; \n            image-rendering: -moz-crisp-edges; \n            image-rendering: -webkit-optimize-contrast; \n            image-rendering: optimize-contrast;\n            image-rendering: -o-crisp-edges; \n            image-rendering: pixelated; \n            -ms-interpolation-mode: nearest-neighbor; \n        ";
            this.app.renderer.view.style.border = "1px dashed green";
            this.app.renderer.view.style.width = "100%";
            this.app.renderer.view.style.height = "100%";
            this.app.renderer.backgroundColor = 0xffffff;

            // Create a sprite from a blank canvas
            this.textureCanvas = document.createElement('canvas');
            this.textureCanvas.width = this.world.width;
            this.textureCanvas.height = this.world.height;
            this.textureCtx = this.textureCanvas.getContext('2d'); // Used later to update texture

            this.baseTexture = new PIXI.BaseTexture.fromCanvas(this.textureCanvas);
            this.sprite = new PIXI.Sprite(new PIXI.Texture(this.baseTexture, new PIXI.Rectangle(0, 0, this.world.width, this.world.height)));

            // Center the sprite
            this.sprite.x = this.world.width / 2;
            this.sprite.y = this.world.height / 2;
            this.sprite.anchor.set(0.5);

            // Create the shader for the sprite
            this.filter = new PIXI.Filter(null, this.loadedResources.fragShader.data);
            this.sprite.filters = [this.filter];

            this.app.stage.removeChildren(); // Remove any attached children (for case where changing presets)
            this.app.stage.addChild(this.sprite);

            // Update the texture from the initial state of the world
            this.UpdateTexture();
        }

        /**
         * Called every frame. Continues indefinitely after being called once.
         */

    }, {
        key: "OnUpdate",
        value: function OnUpdate(delta) {
            var noskip = this.framecounter.IncrementFrame();
            if (noskip) {
                this.filter.uniforms.time += delta;
                this.world.step();
                this.UpdateTexture();
                this.app.render();
            }
        }

        /**
         * Updates the texture representing the world.
         * Writes cell colors to the texture canvas and updates `baseTexture` from it,
         * which makes Pixi update the sprite.
         */

    }, {
        key: "UpdateTexture",
        value: function UpdateTexture() {

            var index = 0;
            var ctx = this.textureCtx;
            ctx.fillStyle = "black";
            ctx.fillRect(0, 0, this.textureCanvas.width, this.textureCanvas.height);
            var pix = ctx.createImageData(this.textureCanvas.width, this.textureCanvas.height);
            for (var y = 0; y < this.textureCanvas.height; y++) {
                for (var x = 0; x < this.textureCanvas.width; x++) {
                    var paletteIndex = this.world.grid[y][x].getColor();
                    var colorRGBA = this.world.palette[paletteIndex];
                    if (colorRGBA != null) {
                        pix.data[index++] = colorRGBA[0];
                        pix.data[index++] = colorRGBA[1];
                        pix.data[index++] = colorRGBA[2];
                        pix.data[index++] = colorRGBA[3];
                    } else {
                        throw "Palette index out of bounds: " + paletteIndex;
                    }
                }
            }
            ctx.putImageData(pix, 0, 0);

            // Tell Pixi to update the texture referenced by this ctx.
            this.baseTexture.update();
        }
    }]);

    return Dust;
}();

/**
 * Convenience class for restricting the refresh rate of the simulation.
 */


var FrameCounter = function () {
    function FrameCounter(frameFrequency) {
        var frameLimit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

        _classCallCheck(this, FrameCounter);

        // The number of frames ingested
        this.frameCount = 0;

        // The number of frames allowed to run
        this.passedFrames = 0;

        // Frame will run every `frameFrequency` frames that pass
        this.frameFrequency = frameFrequency;

        // If set, class will stop allowing frames after `frameLimit` 
        // passedFrames have been allowed.
        this.frameLimit = frameLimit;
    }

    /**
     * Returns true once every `frameFrequency` times it is called.
     */


    _createClass(FrameCounter, [{
        key: "IncrementFrame",
        value: function IncrementFrame() {
            this.frameCount += 1;
            if (this.frameCount % this.frameFrequency == 0) {
                // If we've reached the frame limit
                if (this.frameLimit != null && this.passedFrames >= this.frameLimit) return false;

                this.frameCount = 0;
                this.passedFrames += 1;
                return true;
            }
            return false;
        }
    }]);

    return FrameCounter;
}();

},{"./vendor/cellauto.js":6,"./worlds.js":7}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.gui = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _worlds = require("./worlds.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var guify = require("guify");

var GUI = function () {
    function GUI() {
        _classCallCheck(this, GUI);
    }

    _createClass(GUI, [{
        key: "Init",
        value: function Init(dust, container) {

            this.panel = new guify.GUI({
                title: "Dust",
                theme: "dark",
                root: container,
                width: 350,
                barMode: "above",
                align: "right",
                opacity: "0.95",
                useMenuBar: true
            }, []);

            this.panel.Register({
                type: "range", label: "Frame Frequency",
                min: 1, max: 30, step: 1,
                object: dust.framecounter, property: "frameFrequency"
            });

            this.panel.Register({
                type: "select", label: "Preset",
                options: Object.getOwnPropertyNames(_worlds.Worlds),
                object: dust.worldOptions, property: "name",
                onChange: function onChange() {
                    return dust.Setup();
                }
            });

            this.panel.Register({
                type: "button", label: "Reset",
                action: function action() {
                    return dust.Setup();
                }
            });
        }
    }]);

    return GUI;
}();

var gui = exports.gui = new GUI();

},{"./worlds.js":7,"guify":1}],4:[function(require,module,exports){
"use strict";

var _webglDetect = require("./utils/webgl-detect.js");

var _dust = require("./dust.js");

var _gui = require("./gui.js");

var container = document.getElementById("dust-container");

if (!_webglDetect.Detector.HasWebGL()) {
    //exit("WebGL is not supported on this browser.");
    console.log("WebGL is not supported on this browser.");
    container.innerHTML = _webglDetect.Detector.GetErrorHTML();
    container.classList.add("no-webgl");
} else {
    var dust = new _dust.Dust(container, function () {
        // Dust is now fully loaded
        _gui.gui.Init(dust, container);
    });
}

},{"./dust.js":2,"./gui.js":3,"./utils/webgl-detect.js":5}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Detector = function () {
    function Detector() {
        _classCallCheck(this, Detector);
    }

    _createClass(Detector, null, [{
        key: "HasWebGL",


        //http://stackoverflow.com/questions/11871077/proper-way-to-detect-webgl-support
        value: function HasWebGL() {
            if (!!window.WebGLRenderingContext) {
                var canvas = document.createElement("canvas"),
                    names = ["webgl", "experimental-webgl", "moz-webgl", "webkit-3d"],
                    context = false;

                for (var i = 0; i < 4; i++) {
                    try {
                        context = canvas.getContext(names[i]);
                        if (context && typeof context.getParameter == "function") {
                            // WebGL is enabled
                            return true;
                        }
                    } catch (e) {}
                }

                // WebGL is supported, but disabled
                return false;
            }
            // WebGL not supported
            return false;
        }
    }, {
        key: "GetErrorHTML",
        value: function GetErrorHTML() {
            var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

            if (message == null) {
                message = "Your graphics card does not seem to support \n                        <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\">WebGL</a>. <br>\n                        Find out how to get it <a href=\"http://get.webgl.org/\">here</a>.";
            }
            return "\n        <div class=\"no-webgl-support\">\n        <p style=\"text-align: center;\">" + message + "</p>\n        </div>\n        ";
        }
    }]);

    return Detector;
}();

exports.Detector = Detector;

},{}],6:[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function CellAutoCell(locX, locY) {
	this.x = locX;
	this.y = locY;

	this.delays = [];
}

CellAutoCell.prototype.process = function (neighbors) {
	return;
};
CellAutoCell.prototype.countSurroundingCellsWithValue = function (neighbors, value) {
	var surrounding = 0;
	for (var i = 0; i < neighbors.length; i++) {
		if (neighbors[i] !== null && neighbors[i][value]) {
			surrounding++;
		}
	}
	return surrounding;
};
CellAutoCell.prototype.delay = function (numSteps, fn) {
	this.delays.push({ steps: numSteps, action: fn });
};

CellAutoCell.prototype.reset = function (neighbors) {
	return;
};

CellAutoCell.prototype.getSurroundingCellsAverageValue = function (neighbors, value) {
	var summed = 0.0;
	for (var i = 0; i < neighbors.length; i++) {
		if (neighbors[i] !== null && (neighbors[i][value] || neighbors[i][value] === 0)) {
			summed += neighbors[i][value];
		}
	}
	return summed / neighbors.length; //cnt;
};
function CAWorld(options) {

	this.width = 24;
	this.height = 24;
	this.options = options;

	this.wrap = false;

	this.TOPLEFT = { index: 0, x: -1, y: -1 };
	this.TOP = { index: 1, x: 0, y: -1 };
	this.TOPRIGHT = { index: 2, x: 1, y: -1 };
	this.LEFT = { index: 3, x: -1, y: 0 };
	this.RIGHT = { index: 4, x: 1, y: 0 };
	this.BOTTOMLEFT = { index: 5, x: -1, y: 1 };
	this.BOTTOM = { index: 6, x: 0, y: 1 };
	this.BOTTOMRIGHT = { index: 7, x: 1, y: 1 };

	this.randomGenerator = Math.random;

	// square tiles by default, eight sides
	var neighborhood = [null, null, null, null, null, null, null, null];

	if (this.options.hexTiles) {
		// six sides
		neighborhood = [null, null, null, null, null, null];
	}
	this.step = function () {
		var y, x;
		for (y = 0; y < this.height; y++) {
			for (x = 0; x < this.width; x++) {
				this.grid[y][x].reset();
			}
		}

		// bottom up, left to right processing
		for (y = this.height - 1; y >= 0; y--) {
			for (x = this.width - 1; x >= 0; x--) {
				this.fillNeighbors(neighborhood, x, y);
				var cell = this.grid[y][x];
				cell.process(neighborhood);

				// perform any delays
				for (var i = 0; i < cell.delays.length; i++) {
					cell.delays[i].steps--;
					if (cell.delays[i].steps <= 0) {
						// perform action and remove delay
						cell.delays[i].action(cell);
						cell.delays.splice(i, 1);
						i--;
					}
				}
			}
		}
	};

	//var NEIGHBORLOCS = [{x:-1, y:-1}, {x:0, y:-1}, {x:1, y:-1}, {x:-1, y:0}, {x:1, y:0},{x:-1, y:1}, {x:0, y:1}, {x:1, y:1}];
	// square tiles by default
	var NEIGHBORLOCS = [{ diffX: function diffX() {
			return -1;
		}, diffY: function diffY() {
			return -1;
		} }, // top left
	{ diffX: function diffX() {
			return 0;
		}, diffY: function diffY() {
			return -1;
		} }, // top
	{ diffX: function diffX() {
			return 1;
		}, diffY: function diffY() {
			return -1;
		} }, // top right
	{ diffX: function diffX() {
			return -1;
		}, diffY: function diffY() {
			return 0;
		} }, // left
	{ diffX: function diffX() {
			return 1;
		}, diffY: function diffY() {
			return 0;
		} }, // right
	{ diffX: function diffX() {
			return -1;
		}, diffY: function diffY() {
			return 1;
		} }, // bottom left
	{ diffX: function diffX() {
			return 0;
		}, diffY: function diffY() {
			return 1;
		} }, // bottom
	{ diffX: function diffX() {
			return 1;
		}, diffY: function diffY() {
			return 1;
		} // bottom right
	}];
	if (this.options.hexTiles) {
		if (this.options.flatTopped) {
			// flat topped hex map,  function requires column to be passed
			NEIGHBORLOCS = [{ diffX: function diffX() {
					return -1;
				}, diffY: function diffY(x) {
					return x % 2 ? -1 : 0;
				} }, // top left
			{ diffX: function diffX() {
					return 0;
				}, diffY: function diffY() {
					return -1;
				} }, // top
			{ diffX: function diffX() {
					return 1;
				}, diffY: function diffY(x) {
					return x % 2 ? -1 : 0;
				} }, // top right
			{ diffX: function diffX() {
					return 1;
				}, diffY: function diffY(x) {
					return x % 2 ? 0 : 1;
				} }, // bottom right
			{ diffX: function diffX() {
					return 0;
				}, diffY: function diffY() {
					return 1;
				} }, // bottom
			{ diffX: function diffX() {
					return -1;
				}, diffY: function diffY(x) {
					return x % 2 ? 0 : 1;
				} // bottom left
			}];
		} else {
			// pointy topped hex map, function requires row to be passed
			NEIGHBORLOCS = [{ diffX: function diffX(x, y) {
					return y % 2 ? 0 : -1;
				}, diffY: function diffY() {
					return -1;
				} }, // top left
			{ diffX: function diffX(x, y) {
					return y % 2 ? 1 : 0;
				}, diffY: function diffY() {
					return -1;
				} }, // top right
			{ diffX: function diffX() {
					return -1;
				}, diffY: function diffY() {
					return 0;
				} }, // left
			{ diffX: function diffX() {
					return 1;
				}, diffY: function diffY() {
					return 0;
				} }, // right
			{ diffX: function diffX(x, y) {
					return y % 2 ? 0 : -1;
				}, diffY: function diffY() {
					return 1;
				} }, // bottom left
			{ diffX: function diffX(x, y) {
					return y % 2 ? 1 : 0;
				}, diffY: function diffY() {
					return 1;
				} // bottom right
			}];
		}
	}
	this.fillNeighbors = function (neighbors, x, y) {
		for (var i = 0; i < NEIGHBORLOCS.length; i++) {
			var neighborX = x + NEIGHBORLOCS[i].diffX(x, y);
			var neighborY = y + NEIGHBORLOCS[i].diffY(x, y);
			if (this.wrap) {
				// TODO: hex map support for wrapping
				neighborX = (neighborX + this.width) % this.width;
				neighborY = (neighborY + this.height) % this.height;
			}
			if (!this.wrap && (neighborX < 0 || neighborY < 0 || neighborX >= this.width || neighborY >= this.height)) {
				neighbors[i] = null;
			} else {
				neighbors[i] = this.grid[neighborY][neighborX];
			}
		}
	};

	this.initialize = function (arrayTypeDist) {

		// sort the cell types by distribution
		arrayTypeDist.sort(function (a, b) {
			return a.distribution > b.distribution ? 1 : -1;
		});

		var totalDist = 0;
		// add all distributions together
		for (var i = 0; i < arrayTypeDist.length; i++) {
			totalDist += arrayTypeDist[i].distribution;
			arrayTypeDist[i].distribution = totalDist;
		}

		this.grid = [];
		for (var y = 0; y < this.height; y++) {
			this.grid[y] = [];
			for (var x = 0; x < this.width; x++) {
				var random = this.randomGenerator() * 100;

				for (i = 0; i < arrayTypeDist.length; i++) {
					if (random <= arrayTypeDist[i].distribution) {
						this.grid[y][x] = new this.cellTypes[arrayTypeDist[i].name](x, y);
						break;
					}
				}
			}
		}
	};

	this.cellTypes = {};
	this.registerCellType = function (name, cellOptions, init) {
		this.cellTypes[name] = function (x, y) {
			CellAutoCell.call(this, x, y);

			if (init) {
				init.call(this, x, y);
			}

			if (cellOptions) {
				for (var key in cellOptions) {
					if (typeof cellOptions[key] !== 'function') {
						// properties get instance
						if (_typeof(cellOptions[key]) === 'object') {
							// objects must be cloned
							this[key] = JSON.parse(JSON.stringify(cellOptions[key]));
						} else {
							// primitive
							this[key] = cellOptions[key];
						}
					}
				}
			}
		};
		this.cellTypes[name].prototype = Object.create(CellAutoCell.prototype);
		this.cellTypes[name].prototype.constructor = this.cellTypes[name];
		this.cellTypes[name].prototype.cellType = name;

		if (cellOptions) {
			for (var key in cellOptions) {
				if (typeof cellOptions[key] === 'function') {
					// functions get prototype
					this.cellTypes[name].prototype[key] = cellOptions[key];
				}
			}
		}
	};

	// apply options
	if (options) {
		for (var key in options) {
			this[key] = options[key];
		}
	}
}

CAWorld.prototype.initializeFromGrid = function (values, initGrid) {

	this.grid = [];
	for (var y = 0; y < this.height; y++) {
		this.grid[y] = [];
		for (var x = 0; x < this.width; x++) {
			for (var i = 0; i < values.length; i++) {
				if (values[i].gridValue === initGrid[y][x]) {
					this.grid[y][x] = new this.cellTypes[values[i].name](x, y);
					break;
				}
			}
		}
	}
};

CAWorld.prototype.createGridFromValues = function (values, defaultValue) {
	var newGrid = [];

	for (var y = 0; y < this.height; y++) {
		newGrid[y] = [];
		for (var x = 0; x < this.width; x++) {
			newGrid[y][x] = defaultValue;
			var cell = this.grid[y][x];
			for (var i = 0; i < values.length; i++) {
				if (cell.cellType == values[i].cellType && cell[values[i].hasProperty]) {
					newGrid[y][x] = values[i].value;
				}
			}
		}
	}

	return newGrid;
};

;(function () {
	var CellAuto = {
		World: CAWorld,
		Cell: CellAutoCell
	};

	if (typeof define === 'function' && define.amd) {
		define('CellAuto', function () {
			return CellAuto;
		});
	} else if (typeof module !== 'undefined' && module.exports) {
		module.exports = CellAuto;
	} else {
		window.CellAuto = CellAuto;
	}
})();

},{}],7:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Worlds = undefined;

var _cellauto = require('./vendor/cellauto.js');

var CellAuto = _interopRequireWildcard(_cellauto);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var Worlds = exports.Worlds = {

    /**
     * Chooses a random elementary automata from a list.
     */
    RandomRule: function RandomRule() {
        var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;
        var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 128;

        var rules = [18, 22, 26, 54, 60, 90, 94, 110, 126, 150];
        var options = {
            width: width,
            height: height,
            rule: rules[rules.length * Math.random() << 0], // Random rule from list
            palette: [[68, 36, 52, 255], [255, 255, 255, 255]],
            wrap: true
        };
        return Elementary(options);
    },

    /**
     * Conway's Game of Life
     * B3/S23
     */
    Life: function Life() {
        var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;
        var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 128;

        var options = {
            width: width,
            height: height,
            B: [3],
            S: [2, 3],
            palette: [[68, 36, 52, 255], [255, 255, 255, 255]],
            recommendedFrameFrequency: 2
        };
        return LifeLike(options);
    },

    /**
     * Generates a maze-like structure.
     * Based on rule B3/S1234 (Mazecetric).
     */
    Mazecetric: function Mazecetric() {
        var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 96;
        var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 96;

        var options = {
            width: width,
            height: height,
            B: [3],
            S: [1, 2, 3, 4],
            palette: [[68, 36, 52, 255], [255, 255, 255, 255]],
            recommendedFrameFrequency: 5
        };
        return LifeLike(options, function (x, y) {
            // Distribution function
            return Math.random() < 0.1;
        });
    },

    /**
     * B35678/S5678
     */
    Diamoeba: function Diamoeba() {
        var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 96;
        var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 96;

        var options = {
            width: width,
            height: height,
            B: [3, 5, 6, 7, 8],
            S: [5, 6, 7, 8],
            palette: [[68, 36, 52, 255], [255, 255, 255, 255]],
            recommendedFrameFrequency: 3
        };
        return LifeLike(options, function (x, y) {
            // Distribution function
            return Math.random() < 0.2;
        });
    },

    /**
     * B4678/S35678
     */
    Anneal: function Anneal() {
        var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 96;
        var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 96;

        var options = {
            width: width,
            height: height,
            B: [4, 6, 7, 8],
            S: [3, 5, 6, 7, 8],
            palette: [[68, 36, 52, 255], [255, 255, 255, 255]],
            recommendedFrameFrequency: 3
        };
        return LifeLike(options, function (x, y) {
            // Distribution function
            return Math.random() < 0.3;
        });
    },

    /**
     * CA that looks like lava.
     * 
     * From https://sanojian.github.io/cellauto
     */
    Lava: function Lava() {
        var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;
        var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 128;

        // thanks to TheLastBanana on TIGSource

        var world = new CellAuto.World({
            width: width,
            height: height,
            wrap: true
        });

        world.palette = [[34, 10, 21, 255], [68, 17, 26, 255], [123, 16, 16, 255], [190, 45, 16, 255], [244, 102, 20, 255], [254, 212, 97, 255]];

        var colors = [];
        var index = 0;
        for (; index < 18; ++index) {
            colors[index] = 1;
        }
        for (; index < 22; ++index) {
            colors[index] = 0;
        }
        for (; index < 25; ++index) {
            colors[index] = 1;
        }
        for (; index < 27; ++index) {
            colors[index] = 2;
        }
        for (; index < 29; ++index) {
            colors[index] = 3;
        }
        for (; index < 32; ++index) {
            colors[index] = 2;
        }
        for (; index < 35; ++index) {
            colors[index] = 0;
        }
        for (; index < 36; ++index) {
            colors[index] = 2;
        }
        for (; index < 38; ++index) {
            colors[index] = 4;
        }
        for (; index < 42; ++index) {
            colors[index] = 5;
        }
        for (; index < 44; ++index) {
            colors[index] = 4;
        }
        for (; index < 46; ++index) {
            colors[index] = 2;
        }
        for (; index < 56; ++index) {
            colors[index] = 1;
        }
        for (; index < 64; ++index) {
            colors[index] = 0;
        }

        world.registerCellType('lava', {
            getColor: function getColor() {
                var v = this.value + 0.5 + Math.sin(this.x / world.width * Math.PI) * 0.04 + Math.sin(this.y / world.height * Math.PI) * 0.04 - 0.05;
                v = Math.min(1.0, Math.max(0.0, v));

                return colors[Math.floor(colors.length * v)];
            },
            process: function process(neighbors) {
                if (this.droplet === true) {
                    for (var i = 0; i < neighbors.length; i++) {
                        if (neighbors[i] !== null && neighbors[i].value) {
                            neighbors[i].value = 0.5 * this.value;
                            neighbors[i].prev = 0.5 * this.prev;
                        }
                    }
                    this.droplet = false;
                    return true;
                }
                var avg = this.getSurroundingCellsAverageValue(neighbors, 'value');
                this.next = 0.998 * (2 * avg - this.prev);

                return true;
            },
            reset: function reset() {
                if (Math.random() > 0.99993) {
                    this.value = -0.25 + 0.3 * Math.random();
                    this.prev = this.value;
                    this.droplet = true;
                } else {
                    this.prev = this.value;
                    this.value = this.next;
                }
                this.value = Math.min(0.5, Math.max(-0.5, this.value));
                return true;
            }
        }, function () {
            //init
            this.value = 0.0;
            this.prev = this.value;
            this.next = this.value;
        });

        world.initialize([{ name: 'lava', distribution: 100 }]);

        return world;
    },

    /**
     * Cyclic rainbow automata.
     * 
     * From https://sanojian.github.io/cellauto
     */
    CyclicRainbows: function CyclicRainbows() {
        var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;
        var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 128;

        var world = new CellAuto.World({
            width: width,
            height: height
        });

        world.recommendedFrameFrequency = 1;

        world.palette = [[255, 0, 0, 1 * 255], [255, 96, 0, 1 * 255], [255, 191, 0, 1 * 255], [223, 255, 0, 1 * 255], [128, 255, 0, 1 * 255], [32, 255, 0, 1 * 255], [0, 255, 64, 1 * 255], [0, 255, 159, 1 * 255], [0, 255, 255, 1 * 255], [0, 159, 255, 1 * 255], [0, 64, 255, 1 * 255], [32, 0, 255, 1 * 255], [127, 0, 255, 1 * 255], [223, 0, 255, 1 * 255], [255, 0, 191, 1 * 255], [255, 0, 96, 1 * 255]];

        world.registerCellType('cyclic', {
            getColor: function getColor() {
                return this.state;
            },
            process: function process(neighbors) {
                var next = (this.state + Math.floor(Math.random() * 2)) % 16;

                var changing = false;
                for (var i = 0; i < neighbors.length; i++) {
                    if (neighbors[i] !== null) {
                        changing = changing || neighbors[i].state === next;
                    }
                }
                if (changing) this.state = next;
                return true;
            }
        }, function () {
            //init
            this.state = Math.floor(Math.random() * 16);
        });

        world.initialize([{ name: 'cyclic', distribution: 100 }]);

        return world;
    },

    /**
     * Simulates caves and water movement.
     * 
     * From https://sanojian.github.io/cellauto
     */
    CavesWithWater: function CavesWithWater() {
        var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;
        var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 128;

        // FIRST CREATE CAVES
        var world = new CellAuto.World({
            width: width,
            height: height
        });

        world.registerCellType('wall', {
            process: function process(neighbors) {
                var surrounding = this.countSurroundingCellsWithValue(neighbors, 'wasOpen');
                this.open = this.wasOpen && surrounding >= 4 || surrounding >= 6;
            },
            reset: function reset() {
                this.wasOpen = this.open;
            }
        }, function () {
            //init
            this.open = Math.random() > 0.40;
        });

        world.initialize([{ name: 'wall', distribution: 100 }]);

        // generate our cave, 10 steps aught to do it
        for (var i = 0; i < 10; i++) {
            world.step();
        }

        var grid = world.createGridFromValues([{ cellType: 'wall', hasProperty: 'open', value: 0 }], 1);

        // NOW USE OUR CAVES TO CREATE A NEW WORLD CONTAINING WATER
        world = new CellAuto.World({
            width: width,
            height: height,
            clearRect: true
        });

        world.palette = [[89, 125, 206, 0 * 255], [89, 125, 206, 1 / 9 * 255], [89, 125, 206, 2 / 9 * 255], [89, 125, 206, 3 / 9 * 255], [89, 125, 206, 4 / 9 * 255], [89, 125, 206, 5 / 9 * 255], [89, 125, 206, 6 / 9 * 255], [89, 125, 206, 7 / 9 * 255], [89, 125, 206, 8 / 9 * 255], [89, 125, 206, 1 * 255], [109, 170, 44, 1 * 255], [68, 36, 52, 1 * 255]];

        world.registerCellType('water', {
            getColor: function getColor() {
                //return 0x597DCE44;
                return this.water;
            },
            process: function process(neighbors) {
                if (this.water === 0) {
                    // already empty
                    return;
                }
                // push my water out to my available neighbors

                // cell below me will take all it can
                if (neighbors[world.BOTTOM.index] !== null && this.water && neighbors[world.BOTTOM.index].water < 9) {
                    var amt = Math.min(this.water, 9 - neighbors[world.BOTTOM.index].water);
                    this.water -= amt;
                    neighbors[world.BOTTOM.index].water += amt;
                    return;
                }

                // bottom two corners take half of what I have
                for (var _i = 5; _i <= 7; _i++) {
                    if (_i != world.BOTTOM.index && neighbors[_i] !== null && this.water && neighbors[_i].water < 9) {
                        var _amt = Math.min(this.water, Math.ceil((9 - neighbors[_i].water) / 2));
                        this.water -= _amt;
                        neighbors[_i].water += _amt;
                        return;
                    }
                }
                // sides take a third of what I have
                for (var _i2 = 3; _i2 <= 4; _i2++) {
                    if (neighbors[_i2] !== null && neighbors[_i2].water < this.water) {
                        var _amt2 = Math.min(this.water, Math.ceil((9 - neighbors[_i2].water) / 3));
                        this.water -= _amt2;
                        neighbors[_i2].water += _amt2;
                        return;
                    }
                }
            }
        }, function () {
            //init
            this.water = Math.floor(Math.random() * 9);
        });

        world.registerCellType('rock', {
            isSolid: true,
            getColor: function getColor() {
                return this.lighted ? 10 : 11;
            },
            process: function process(neighbors) {
                this.lighted = neighbors[world.TOP.index] && !(neighbors[world.TOP.index].water === 9) && !neighbors[world.TOP.index].isSolid && neighbors[world.BOTTOM.index] && neighbors[world.BOTTOM.index].isSolid;
            }
        });

        // pass in our generated cave data
        world.initializeFromGrid([{ name: 'rock', gridValue: 1 }, { name: 'water', gridValue: 0 }], grid);

        return world;
    },

    Rain: function Rain() {
        var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;
        var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 128;

        // FIRST CREATE CAVES
        var world = new CellAuto.World({
            width: width,
            height: height
        });

        world.registerCellType('wall', {
            process: function process(neighbors) {
                var surrounding = this.countSurroundingCellsWithValue(neighbors, 'wasOpen');
                this.open = this.wasOpen && surrounding >= 4 || surrounding >= 6;
            },
            reset: function reset() {
                this.wasOpen = this.open;
            }
        }, function () {
            //init
            this.open = Math.random() > 0.40;
        });

        world.initialize([{ name: 'wall', distribution: 100 }]);

        // generate our cave, 10 steps aught to do it
        for (var i = 0; i < 10; i++) {
            world.step();
        }

        var grid = world.createGridFromValues([{ cellType: 'wall', hasProperty: 'open', value: 0 }], 1);

        // cut the top half of the caves off
        for (var y = 0; y < Math.floor(world.height / 2); y++) {
            for (var x = 0; x < world.width; x++) {
                grid[y][x] = 0;
            }
        }

        // NOW USE OUR CAVES TO CREATE A NEW WORLD CONTAINING WATER
        world = new CellAuto.World({
            width: width,
            height: height,
            clearRect: true
        });

        world.palette = [[89, 125, 206, 1], [89, 125, 206, 1 / 9 * 255], [89, 125, 206, 2 / 9 * 255], [89, 125, 206, 3 / 9 * 255], [89, 125, 206, 4 / 9 * 255], [89, 125, 206, 5 / 9 * 255], [89, 125, 206, 6 / 9 * 255], [89, 125, 206, 7 / 9 * 255], [89, 125, 206, 8 / 9 * 255], [89, 125, 206, 255], [109, 170, 44, 255], [68, 36, 52, 255]];

        world.registerCellType('air', {
            getColor: function getColor() {
                //return '89, 125, 206, ' + (this.water ? Math.max(0.3, this.water/9) : 0);
                return this.water;
            },
            process: function process(neighbors) {
                // rain on the top row
                if (neighbors[world.TOP.index] === null && Math.random() < 0.02) {
                    this.water = 5;
                } else if (this.water === 0) {
                    // already empty
                    return;
                }

                // push my water out to my available neighbors

                // cell below me will take all it can
                if (neighbors[world.BOTTOM.index] !== null && this.water && neighbors[world.BOTTOM.index].water < 9) {
                    var amt = Math.min(this.water, 9 - neighbors[world.BOTTOM.index].water);
                    this.water -= amt;
                    neighbors[world.BOTTOM.index].water += amt;
                    return;
                }

                // bottom two corners take half of what I have
                for (var _i3 = 5; _i3 <= 7; _i3++) {
                    if (_i3 != world.BOTTOM.index && neighbors[_i3] !== null && this.water && neighbors[_i3].water < 9) {
                        var _amt3 = Math.min(this.water, Math.ceil((9 - neighbors[_i3].water) / 2));
                        this.water -= _amt3;
                        neighbors[_i3].water += _amt3;
                        return;
                    }
                }
                // sides take a third of what I have
                for (var _i4 = 3; _i4 <= 4; _i4++) {
                    if (neighbors[_i4] !== null && neighbors[_i4].water < this.water) {
                        var _amt4 = Math.min(this.water, Math.ceil((9 - neighbors[_i4].water) / 3));
                        this.water -= _amt4;
                        neighbors[_i4].water += _amt4;
                        return;
                    }
                }
            }
        }, function () {
            //init
            this.water = 0;
        });

        world.registerCellType('rock', {
            isSolid: true,
            getColor: function getColor() {
                return this.lighted ? 10 : 11;
            },
            process: function process(neighbors) {
                this.lighted = neighbors[world.TOP.index] && !(neighbors[world.TOP.index].water === 9) && !neighbors[world.TOP.index].isSolid && neighbors[world.BOTTOM.index] && neighbors[world.BOTTOM.index].isSolid;
            }
        });

        // pass in our generated cave data
        world.initializeFromGrid([{ name: 'rock', gridValue: 1 }, { name: 'air', gridValue: 0 }], grid);

        return world;
    },

    /**
     * Simulates splashing water.
     * 
     * From https://sanojian.github.io/cellauto
     */
    Splashes: function Splashes() {
        var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;
        var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 128;

        var world = new CellAuto.World({
            width: width,
            height: height
        });

        world.palette = [];
        var colors = [];
        for (var index = 0; index < 64; index++) {
            world.palette.push([89, 125, 206, index / 64 * 255]);
            colors[index] = 63 - index;
        }

        world.registerCellType('water', {
            getColor: function getColor() {
                var v = Math.max(2 * this.value + 0.02, 0) - 0.02 + 0.5;
                return colors[Math.floor(colors.length * v)];
            },
            process: function process(neighbors) {
                if (this.droplet == true) {
                    for (var i = 0; i < neighbors.length; i++) {
                        if (neighbors[i] !== null && neighbors[i].value) {
                            neighbors[i].value = 0.5 * this.value;
                            neighbors[i].prev = 0.5 * this.prev;
                        }
                    }
                    this.droplet = false;
                    return true;
                }
                var avg = this.getSurroundingCellsAverageValue(neighbors, 'value');
                this.next = 0.99 * (2 * avg - this.prev);
                return true;
            },
            reset: function reset() {
                if (Math.random() > 0.9999) {
                    this.value = -0.2 + 0.25 * Math.random();
                    this.prev = this.value;
                    this.droplet = true;
                } else {
                    this.prev = this.value;
                    this.value = this.next;
                }
                return true;
            }
        }, function () {
            //init
            this.water = true;
            this.value = 0.0;
            this.prev = this.value;
            this.next = this.value;
        });

        world.initialize([{ name: 'water', distribution: 100 }]);

        return world;
    },

    /**
     * Rule 52928 - the CA used for Wolfram Alpha's loading animations
     * 
     * Resources:
     * https://www.quora.com/What-is-Wolfram-Alphas-loading-screen-a-depiction-of
     * http://jsfiddle.net/hungrycamel/9UrzJ/
     */
    Wolfram: function Wolfram() {
        var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 96;
        var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 96;

        var world = new CellAuto.World({
            width: width,
            height: height,
            wrap: true
        });

        world.recommendedFrameFrequency = 2;

        world.palette = [[255, 255, 255, 255], // Background color
        [255, 110, 0, 255], // dark orange
        [255, 130, 0, 255], //      |
        [255, 150, 0, 255], //      |
        [255, 170, 0, 255], //      V
        [255, 180, 0, 255] // light orange
        ];

        var choice = Math.random();

        var seedList = [[[0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 2, 1, 1, 1, 1, 0, 0, 0, 0], [1, 1, 3, 4, 2, 1, 1, 0, 0, 0], [0, 1, 1, 1, 4, 1, 1, 0, 0, 0], [0, 1, 2, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 2, 2, 0, 0], [0, 0, 2, 2, 0, 0, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 2, 1, 0], [0, 0, 0, 1, 1, 4, 1, 1, 1, 0], [0, 0, 0, 1, 1, 2, 4, 3, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 2, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 1], [1, 1, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 1, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0]], [[0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 0]], [[0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 0, 1, 0]], [[0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1, 1, 0]], [[1, 1, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 1, 1]], [[1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1]], [[1, 1, 1, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 1]], [[1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 1, 1, 1]], [[1, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1]], [[1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 1]], [[1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 1]], [[1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 1]], [[1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1]], [[1, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 1, 1, 1]], [[1, 1, 1, 1, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 1, 1, 1]], [[1, 1, 1, 1, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1]], [[1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1]], [[1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1, 1]], [[1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 1, 1]], [[1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 1, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 1, 1, 1]], [[1, 1, 1, 1, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 1, 1, 1, 1]], [[1, 1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 1]], [[1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1]], [[1, 1, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 1]], [[1, 1, 1, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 1]]];

        world.registerCellType('living', {
            getColor: function getColor() {
                return this.state;
            },
            process: function process(neighbors) {

                var neighborOnes = neighbors.filter(function (item) {
                    return item.state == 1;
                }).length;

                if (this.state == 0) {
                    if (neighborOnes == 3 || neighborOnes == 5 || neighborOnes == 7) this.newState = 1;
                } else if (this.state == 1) {
                    if (neighborOnes == 0 || neighborOnes == 1 || neighborOnes == 2 || neighborOnes == 6 || neighborOnes == 8) this.newState = 2;
                } else if (this.state == 2) {
                    this.newState = 3;
                } else if (this.state == 3) {
                    this.newState = 4;
                } else if (this.state == 4) {
                    this.newState = 0;
                }
            },
            reset: function reset() {
                this.state = this.newState;
            }
        }, function (x, y) {
            // Init 

            // 50% chance to use a seed
            if (choice < 0.5) {
                var seed = void 0;
                // 25% chance to use a random seed
                if (choice < 0.25) {
                    seed = seedList[Math.floor(Math.random() * seedList.length)];
                }
                // 25% chance to use the Wolfram seed
                else {
                        seed = seedList[0];
                    }

                var minX = Math.floor(width / 2) - Math.floor(seed[0].length / 2);
                var maxX = Math.floor(width / 2) + Math.floor(seed[0].length / 2);
                var minY = Math.floor(height / 2) - Math.floor(seed.length / 2);
                var maxY = Math.floor(height / 2) + Math.floor(seed.length / 2);

                this.state = 0;

                // If the cell is inside of the seed array (centered in the world), then use its value
                if (x >= minX && x < maxX && y >= minY && y < maxY) {
                    this.state = seed[y - minY][x - minX];
                }
            }
            // 50% chance to initialize with noise
            else {
                    this.state = Math.random() < 0.15 ? 1 : 0;
                }
            this.newState = this.state;
        });

        world.initialize([{ name: 'living', distribution: 100 }]);

        return world;
    },

    /**
     * Simulates a Belousov-Zhabotinsky reaction (approximately).
     * This one's still a little messed up, so consider it experimental.
     * 
     * Resources:
     * http://ccl.northwestern.edu/netlogo/models/B-ZReaction
     * http://www.fractaldesign.net/automataalgorithm.aspx
     */
    BelousovZhabotinsky: function BelousovZhabotinsky() {
        var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;
        var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 128;

        var world = new CellAuto.World({
            width: width,
            height: height,
            wrap: true
        });

        // Override frame frequency for this setup
        world.recommendedFrameFrequency = 10;

        // Config letiables
        var kernel = [// weights for neighbors. First index is for self weight
        0, 1, 1, 1, 1, 1, 1, 1, 1].reverse();
        var k1 = 5; // Lower gives higher tendency for a cell to be sickened by ill neighbors
        var k2 = 1; // Lower gives higher tendency for a cell to be sickened by infected neighbors
        var g = 5;
        var numStates = 255;

        world.palette = [];
        for (var i = 0; i < numStates; i++) {
            var gray = Math.floor(255 / numStates * i);
            world.palette.push([gray, gray, gray, 255]);
        }

        world.registerCellType('bz', {
            getColor: function getColor() {
                return this.state;
            },
            process: function process(neighbors) {
                var healthy = 0;
                var infected = 0;
                var ill = 0;
                var sumStates = this.state;

                for (var _i5 = 0; _i5 < neighbors.length + 1; _i5++) {
                    var neighbor = void 0;
                    if (_i5 == 8) neighbor = this;else neighbor = neighbors[_i5];

                    //if(neighbor !== null && neighbor.state){
                    sumStates += neighbor.state * kernel[_i5];
                    if (kernel[_i5] > 0) {
                        if (neighbor.state == 0) healthy += 1;else if (neighbor.state < numStates - 1) infected += 1;else ill += 1;
                    }
                    //}
                }

                if (this.state == 0) {
                    this.newState = infected / k1 + ill / k2;
                } else if (this.state < numStates - 1) {
                    this.newState = sumStates / infected + ill + 1 + g;
                    //this.newState = (sumStates / 9) + g;
                } else {
                    this.newState = 0;
                }

                // Make sure to set state to newstate in a second pass
                this.newState = Math.max(0, Math.min(numStates - 1, Math.floor(this.newState)));
            },
            reset: function reset() {
                this.state = this.newState;
            }
        }, function () {
            // Init
            // Generate a random state
            this.state = Math.random() < 1.0 ? Math.floor(Math.random() * numStates) : 0;
            this.newState = this.state;
        });

        world.initialize([{ name: 'bz', distribution: 100 }]);

        return world;
    }

    /**
     * Simulates a 1D automata.
     * Expects a property `rule` in `options`, which is the integer rule of the CA.
     * 
     * Not totally correct yet!
     * 
     */
};function Elementary(options) {
    var world = new CellAuto.World(options);

    var rule = (options.rule >>> 0).toString(2);
    while (rule.length < 8) {
        rule = "0" + rule;
    }

    console.log(options.rule);

    function processRule(leftAlive, centerAlive, rightAlive) {
        var index = 0;
        if (rightAlive) index += 1;
        if (centerAlive) index += 2;
        if (leftAlive) index += 4;
        return rule[rule.length - 1 - index];
    }

    function testRule() {
        var lastIndex = rule.length - 1;
        for (var i = 0; i < 8; i++) {
            // Convert i to binary and use it to feed processRule
            var bin = (lastIndex - i >>> 0).toString(2);
            while (bin.length < 3) {
                bin = "0" + bin;
            }var ruleOut = processRule(bin[0] == "1", bin[1] == "1", bin[2] == "1");

            console.assert(ruleOut == rule[i], bin + " " + rule[i] + " " + (ruleOut == rule[i]).toString());
        }
    }
    //testRule();

    world.registerCellType('living', {
        getColor: function getColor() {
            return this.alive ? 0 : 1;
        },
        process: function process(neighbors) {
            function getWasAlive(neighbor) {
                if (neighbor != null) return neighbor.wasAlive;
                return false;
            }

            // If the cell isn't active yet, determine its state based on its upper neighbors
            if (!this.wasAlive) {
                this.alive = processRule(getWasAlive(neighbors[0]), getWasAlive(neighbors[1]), getWasAlive(neighbors[2])) == "1";
            }
        },
        reset: function reset() {
            this.wasAlive = this.alive;
        }
    }, function (x, y) {
        // Init
        this.alive = x == Math.floor(options.width / 2) && y == 1;
        //this.alive = Math.random() < 0.01;
        //this.wasAlive = this.alive;
    });

    world.initialize([{ name: 'living', distribution: 100 }]);

    return world;
}

/**
 * Simulates a Life-like automata. Uses B/S notation.
 * See https://en.wikipedia.org/wiki/Life-like_cellular_automaton
 * 
 * Expects two additional properties in `options`:
 * `B`: An array of ints representing the B component of the rule
 * `S`: An array of ints representing the S component of the rule
 */
function LifeLike(options, distributionFunc) {
    var world = new CellAuto.World(options);

    world.registerCellType('living', {
        getColor: function getColor() {
            return this.alive ? 0 : 1;
        },
        process: function process(neighbors) {
            var surrounding = this.countSurroundingCellsWithValue(neighbors, 'wasAlive');
            this.alive = options.B.includes(surrounding) || options.S.includes(surrounding) && this.alive;
        },
        reset: function reset() {
            this.wasAlive = this.alive;
        }
    }, function (x, y) {
        // Init
        if (distributionFunc) this.alive = distributionFunc(x, y);else this.alive = Math.random() < 0.5;
    });

    world.initialize([{ name: 'living', distribution: 100 }]);

    return world;
}

},{"./vendor/cellauto.js":6}]},{},[4])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
