{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/add-px-to-style/index.js","node_modules/dom-css/index.js","node_modules/guify/lib/guify.min.js","node_modules/prefix-style/index.js","node_modules/to-camel-case/index.js","node_modules/to-no-case/index.js","node_modules/to-space-case/index.js","src/dust.js","src/gui.js","src/main.js","src/utils/webgl-detect.js","src/vendor/cellauto.js","src/worlds.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","IS_UNITLESS","animationIterationCount","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridColumn","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","stopOpacity","strokeDashoffset","strokeOpacity","strokeWidth","name","value","style","element","property","camel","cache","detect","undefined","addPxToStyle","each","properties","k","hasOwnProperty","cssProp","toCamelCase","result","prefix","set","arguments","cssText","float","get","Array","isArray","reduce","obj","prop","define","amd","guify","this","m","c","d","Object","defineProperty","configurable","enumerable","__esModule","default","prototype","p","appendChild","document","createElement","classList","add","position","height","btoa","concat","sources","map","sourceRoot","join","unescape","encodeURIComponent","JSON","stringify","toString","push","id","refs","parts","base","css","media","sourceMap","C","insertInto","g","insertAt","nextSibling","insertBefore","firstChild","parentNode","removeChild","indexOf","splice","attrs","type","rel","keys","forEach","setAttribute","transform","singleton","F","A","bind","URL","createObjectURL","revokeObjectURL","Blob","E","href","styleSheet","D","createTextNode","childNodes","convertToAbsoluteUrls","b","h","apply","window","all","atob","querySelector","DEBUG","filter","Boolean","listener","RegExp","EventEmitter","getListeners","_getEvents","test","flattenListeners","getListenersAsObject","addListener","TypeError","once","on","addOnceListener","defineEvent","defineEvents","removeListener","off","addListeners","manipulateListeners","removeListeners","removeEvent","_events","removeAllListeners","emitEvent","slice","_getOnceReturnValue","trigger","emit","setOnceReturnValue","_onceReturnValue","noConflict","left","width","display","paddingRight","verticalAlign","innerHTML","color","text1","line-height","backgroundColor","background2","paddingLeft","overflow","right","text2","userSelect","cursor","wordBreak","_originalInput","_r","_g","_b","_a","_roundA","V","_format","format","_gradientType","gradientType","_ok","ok","_tc_id","I","T","z","String","substr","v","H","_","q","G","floor","L","charAt","U","toHsl","S","desaturate","toRgb","B","y","x","w","toHsv","parseFloat","isNaN","j","O","parseInt","abs","M","round","R","Y","CSS_UNIT","exec","replace","$","N","toLowerCase","Z","rgb","rgba","hsl","hsla","hsv","hsva","hex8","hex6","hex4","hex3","P","level","size","toUpperCase","min","max","W","random","isDark","getBrightness","isLight","isValid","getOriginalInput","getFormat","getAlpha","getLuminance","pow","setAlpha","toHsvString","toHslString","toHex","toHexString","toHex8","toHex8String","toRgbString","toPercentageRgb","toPercentageRgbString","toName","X","toFilter","clone","_applyModification","lighten","brighten","darken","saturate","greyscale","spin","_applyCombination","analogous","complement","monochromatic","splitcomplement","triad","tetrad","fromRatio","equals","mix","readability","isReadable","mostReadable","includeFallbackColors","names","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hexNames","Math","GUI","writable","key","opts","hasRoot","root","theme","dark","body","align","useMenuBar","barMode","styling","barHeight","uuid","_LoadStyles","_ConstructElements","components","title","range","button","checkbox","select","text","folder","loadedComponents","_UpdateComponents","getElementsByTagName","container","top","bar","className","background","background1","onclick","TogglePanelVisible","offsetHeight","panel","SetPanelVisible","toastContainer","binding","SetValue","object","setTimeout","requestAnimationFrame","assign","_Register","initial","find","label","folderContainer","onInitialize","onChange","console","log","box-sizing","background-color","padding","padding-left","padding-right","text-align","font-family","font-size","z-index","textAlign","margin-top","margin-bottom","border","fontFamily","bottom","-webkit-transition","transition","clearTimeout","locals","location","protocol","host","pathname","trim","rng","crypto","msCrypto","getRandomValues","Uint8Array","Function","eval","split","valueOf","Symbol","toStringTag","light","background2hover","foreground1","tr","regexp","İ","İ","az","lt","J","Į","Ì","Í","Ĩ","ReferenceError","create","constructor","setPrototypeOf","__proto__","getPrototypeOf","step","steps","input","scale","logmin","logmax","logsign","InverseScaleValue","scaleValue","valueComponent","ScaleValue","userIsModifying","onmousedown","onmouseup","oninput","target","exp","isNumeric","onfocus","outline","textContent","addEventListener","action","checked","htmlFor","onchange","options","selected","-moz-box-sizing","-webkit-box-sizing","resize","onmouseover","picker","$el","el","marginTop","getHexString","onmouseout","Format","toFixed","setColor","getColor","widthUnits","heightUnits","hue","huePosition","saturationWidth","hueHeight","maxHue","inputIsNumber","_onSaturationMouseDown","_onSaturationMouseMove","_onSaturationMouseUp","_onHueMouseDown","_onHueMouseMove","_onHueMouseUp","$saturation","$hue","$sbSelector","$hSelector","appendTo","setBackgroundColor","setSize","touches","clientX","clientY","remove","removeEventListener","_moveSelectorTo","_moveHueTo","_updateHue","setNoBackground","getHexNumber","getRGB","getHSV","_updateColorFromPosition","_updateColor","_updateHueFromPosition","borderColor","getBoundingClientRect","preventDefault","_callbacks","fn","listeners","hasListeners","Number","Date","isBuffer","readFloatLE","_isBuffer","separator","defaultUnit","warn","origin","reset","isSupported","lastIndex","dash","translate","translate3d","translateX","translateY","translateZ","scale3d","scaleX","scaleY","scaleZ","rotate","rotate3d","rotateX","rotateY","rotateZ","skew","skewX","skewY","perspective","matrix","matrix3d","transformOrigin","arrow","Toggle","which","open","SetOpen","marginBottom","div","prefixes","titleCase","string","space","matches","letter","toNoCase","hasSpace","hasSeparator","unseparate","hasCamel","uncamelize","separatorSplitter","next","camelSplitter","previous","uppers","toSpaceCase","clean","match","_cellauto","_worlds","FrameCounter","Dust","initFinishedCallback","_this","_classCallCheck","worldNames","Worlds","worldOptions","app","PIXI","Application","antialias","transparent","resolution","offsetWidth","autoResize","view","ticker","delta","OnUpdate","framecounter","stop","loader","load","res","loadedResources","Setup","start","world","err","frameFrequency","recommendedFrameFrequency","settings","SCALE_MODE","SCALE_MODES","NEAREST","stage","Point","renderer","textureCanvas","textureCtx","getContext","baseTexture","BaseTexture","fromCanvas","sprite","Sprite","Texture","Rectangle","anchor","Filter","fragShader","data","filters","removeChildren","addChild","UpdateTexture","IncrementFrame","uniforms","time","render","index","ctx","fillStyle","fillRect","pix","createImageData","paletteIndex","grid","colorRGBA","palette","putImageData","update","frameLimit","frameCount","passedFrames","dust","Register","getOwnPropertyNames","gui","_webglDetect","_dust","_gui","Init","getElementById","Detector","HasWebGL","GetErrorHTML","readyState","onload","WebGLRenderingContext","canvas","context","getParameter","message","CellAutoCell","locX","locY","delays","CAWorld","wrap","TOPLEFT","TOP","TOPRIGHT","LEFT","RIGHT","BOTTOMLEFT","BOTTOM","BOTTOMRIGHT","randomGenerator","neighborhood","hexTiles","fillNeighbors","cell","process","NEIGHBORLOCS","diffX","diffY","flatTopped","neighbors","neighborX","neighborY","initialize","arrayTypeDist","sort","distribution","totalDist","cellTypes","registerCellType","cellOptions","init","_typeof","parse","cellType","countSurroundingCellsWithValue","surrounding","delay","numSteps","getSurroundingCellsAverageValue","summed","initializeFromGrid","values","initGrid","gridValue","createGridFromValues","defaultValue","newGrid","hasProperty","CellAuto","World","Cell","Elementary","processRule","leftAlive","centerAlive","rightAlive","rule","alive","getWasAlive","neighbor","wasAlive","LifeLike","distributionFunc","includes","RandomRule","rules","Life","Mazecetric","Diamoeba","Anneal","Lava","colors","sin","PI","droplet","prev","avg","CyclicRainbows","state","changing","CavesWithWater","wasOpen","clearRect","water","amt","_i","_amt","ceil","_i2","_amt2","isSolid","lighted","Rain","_i3","_amt3","_i4","_amt4","Splashes","Wolfram","choice","seedList","neighborOnes","item","newState","seed","minX","maxX","minY","maxY","BelousovZhabotinsky","kernel","reverse","healthy","infected","ill","sumStates","_i5","numStates"],"mappings":"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,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACnG,EAAG,EAAG,EAAG,EAAG,E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","file":"dust.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* The following list is defined in React's core */\nvar IS_UNITLESS = {\n  animationIterationCount: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridColumn: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  stopOpacity: true,\n  strokeDashoffset: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\nmodule.exports = function(name, value) {\n  if(typeof value === 'number' && !IS_UNITLESS[ name ]) {\n    return value + 'px';\n  } else {\n    return value;\n  }\n};","var prefix = require('prefix-style')\nvar toCamelCase = require('to-camel-case')\nvar cache = { 'float': 'cssFloat' }\nvar addPxToStyle = require('add-px-to-style')\n\nfunction style (element, property, value) {\n  var camel = cache[property]\n  if (typeof camel === 'undefined') {\n    camel = detect(property)\n  }\n\n  // may be false if CSS prop is unsupported\n  if (camel) {\n    if (value === undefined) {\n      return element.style[camel]\n    }\n\n    element.style[camel] = addPxToStyle(camel, value)\n  }\n}\n\nfunction each (element, properties) {\n  for (var k in properties) {\n    if (properties.hasOwnProperty(k)) {\n      style(element, k, properties[k])\n    }\n  }\n}\n\nfunction detect (cssProp) {\n  var camel = toCamelCase(cssProp)\n  var result = prefix(camel)\n  cache[camel] = cache[cssProp] = cache[result] = result\n  return result\n}\n\nfunction set () {\n  if (arguments.length === 2) {\n    if (typeof arguments[1] === 'string') {\n      arguments[0].style.cssText = arguments[1]\n    } else {\n      each(arguments[0], arguments[1])\n    }\n  } else {\n    style(arguments[0], arguments[1], arguments[2])\n  }\n}\n\nmodule.exports = set\nmodule.exports.set = set\n\nmodule.exports.get = function (element, properties) {\n  if (Array.isArray(properties)) {\n    return properties.reduce(function (obj, prop) {\n      obj[prop] = style(element, prop || '')\n      return obj\n    }, {})\n  } else {\n    return style(element, properties || '')\n  }\n}\n","!function(u,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(\"guify\",[],t):\"object\"==typeof exports?exports.guify=t():u.guify=t()}(this,function(){return function(u){function t(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return u[n].call(i.exports,i,i.exports,t),i.l=!0,i.exports}var e={};return t.m=u,t.c=e,t.d=function(u,e,n){t.o(u,e)||Object.defineProperty(u,e,{configurable:!1,enumerable:!0,get:n})},t.n=function(u){var e=u&&u.__esModule?function(){return u.default}:function(){return u};return t.d(e,\"a\",e),e},t.o=function(u,t){return Object.prototype.hasOwnProperty.call(u,t)},t.p=\"\",t(t.s=8)}([function(u,t,e){function n(u,t,e){var n=l[t];if(void 0===n&&(n=r(t)),n){if(void 0===e)return u.style[n];u.style[n]=c(n,e)}}function i(u,t){for(var e in t)t.hasOwnProperty(e)&&n(u,e,t[e])}function r(u){var t=s(u),e=a(t);return l[t]=l[u]=l[e]=e,e}function o(){2===arguments.length?\"string\"==typeof arguments[1]?arguments[0].style.cssText=arguments[1]:i(arguments[0],arguments[1]):n(arguments[0],arguments[1],arguments[2])}var a=e(17),s=e(18),l={float:\"cssFloat\"},c=e(21);u.exports=o,u.exports.set=o,u.exports.get=function(u,t){return Array.isArray(t)?t.reduce(function(t,e){return t[e]=n(u,e||\"\"),t},{}):n(u,t||\"\")}},function(u,t,e){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=(e(25),e(0)),i=function(u,t){var e=u.appendChild(document.createElement(\"div\"));return e.classList.add(\"guify-component-container\"),n(e,{position:\"relative\",height:\"25px\"}),e};t.default=i,u.exports=t.default},function(u,t){function e(u,t){var e=u[1]||\"\",i=u[3];if(!i)return e;if(t&&\"function\"==typeof btoa){var r=n(i);return[e].concat(i.sources.map(function(u){return\"/*# sourceURL=\"+i.sourceRoot+u+\" */\"})).concat([r]).join(\"\\n\")}return[e].join(\"\\n\")}function n(u){return\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(u))))+\" */\"}u.exports=function(u){var t=[];return t.toString=function(){return this.map(function(t){var n=e(t,u);return t[2]?\"@media \"+t[2]+\"{\"+n+\"}\":n}).join(\"\")},t.i=function(u,e){\"string\"==typeof u&&(u=[[null,u,\"\"]]);for(var n={},i=0;i<this.length;i++){var r=this[i][0];\"number\"==typeof r&&(n[r]=!0)}for(i=0;i<u.length;i++){var o=u[i];\"number\"==typeof o[0]&&n[o[0]]||(e&&!o[2]?o[2]=e:e&&(o[2]=\"(\"+o[2]+\") and (\"+e+\")\"),t.push(o))}},t}},function(u,t,e){function n(u,t){for(var e=0;e<u.length;e++){var n=u[e],i=p[n.id];if(i){i.refs++;for(var r=0;r<i.parts.length;r++)i.parts[r](n.parts[r]);for(;r<n.parts.length;r++)i.parts.push(c(n.parts[r],t))}else{for(var o=[],r=0;r<n.parts.length;r++)o.push(c(n.parts[r],t));p[n.id]={id:n.id,refs:1,parts:o}}}}function i(u,t){for(var e=[],n={},i=0;i<u.length;i++){var r=u[i],o=t.base?r[0]+t.base:r[0],a=r[1],s=r[2],l=r[3],c={css:a,media:s,sourceMap:l};n[o]?n[o].parts.push(c):e.push(n[o]={id:o,parts:[c]})}return e}function r(u,t){var e=C(u.insertInto);if(!e)throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");var n=g[g.length-1];if(\"top\"===u.insertAt)n?n.nextSibling?e.insertBefore(t,n.nextSibling):e.appendChild(t):e.insertBefore(t,e.firstChild),g.push(t);else{if(\"bottom\"!==u.insertAt)throw new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");e.appendChild(t)}}function o(u){if(null===u.parentNode)return!1;u.parentNode.removeChild(u);var t=g.indexOf(u);t>=0&&g.splice(t,1)}function a(u){var t=document.createElement(\"style\");return u.attrs.type=\"text/css\",l(t,u.attrs),r(u,t),t}function s(u){var t=document.createElement(\"link\");return u.attrs.type=\"text/css\",u.attrs.rel=\"stylesheet\",l(t,u.attrs),r(u,t),t}function l(u,t){Object.keys(t).forEach(function(e){u.setAttribute(e,t[e])})}function c(u,t){var e,n,i,r;if(t.transform&&u.css){if(!(r=t.transform(u.css)))return function(){};u.css=r}if(t.singleton){var l=F++;e=d||(d=a(t)),n=A.bind(null,e,l,!1),i=A.bind(null,e,l,!0)}else u.sourceMap&&\"function\"==typeof URL&&\"function\"==typeof URL.createObjectURL&&\"function\"==typeof URL.revokeObjectURL&&\"function\"==typeof Blob&&\"function\"==typeof btoa?(e=s(t),n=E.bind(null,e,t),i=function(){o(e),e.href&&URL.revokeObjectURL(e.href)}):(e=a(t),n=f.bind(null,e),i=function(){o(e)});return n(u),function(t){if(t){if(t.css===u.css&&t.media===u.media&&t.sourceMap===u.sourceMap)return;n(u=t)}else i()}}function A(u,t,e,n){var i=e?\"\":n.css;if(u.styleSheet)u.styleSheet.cssText=D(t,i);else{var r=document.createTextNode(i),o=u.childNodes;o[t]&&u.removeChild(o[t]),o.length?u.insertBefore(r,o[t]):u.appendChild(r)}}function f(u,t){var e=t.css,n=t.media;if(n&&u.setAttribute(\"media\",n),u.styleSheet)u.styleSheet.cssText=e;else{for(;u.firstChild;)u.removeChild(u.firstChild);u.appendChild(document.createTextNode(e))}}function E(u,t,e){var n=e.css,i=e.sourceMap,r=void 0===t.convertToAbsoluteUrls&&i;(t.convertToAbsoluteUrls||r)&&(n=b(n)),i&&(n+=\"\\n/*# sourceMappingURL=data:application/json;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+\" */\");var o=new Blob([n],{type:\"text/css\"}),a=u.href;u.href=URL.createObjectURL(o),a&&URL.revokeObjectURL(a)}var p={},h=function(u){var t;return function(){return void 0===t&&(t=u.apply(this,arguments)),t}}(function(){return window&&document&&document.all&&!window.atob}),C=function(u){var t={};return function(e){return void 0===t[e]&&(t[e]=u.call(this,e)),t[e]}}(function(u){return document.querySelector(u)}),d=null,F=0,g=[],b=e(12);u.exports=function(u,t){if(\"undefined\"!=typeof DEBUG&&DEBUG&&\"object\"!=typeof document)throw new Error(\"The style-loader cannot be used in a non-browser environment\");t=t||{},t.attrs=\"object\"==typeof t.attrs?t.attrs:{},t.singleton||(t.singleton=h()),t.insertInto||(t.insertInto=\"head\"),t.insertAt||(t.insertAt=\"bottom\");var e=i(u,t);return n(e,t),function(u){for(var r=[],o=0;o<e.length;o++){var a=e[o],s=p[a.id];s.refs--,r.push(s)}if(u){n(i(u,t),t)}for(var o=0;o<r.length;o++){var s=r[o];if(0===s.refs){for(var l=0;l<s.parts.length;l++)s.parts[l]();delete p[s.id]}}}};var D=function(){var u=[];return function(t,e){return u[t]=e,u.filter(Boolean).join(\"\\n\")}}()},function(u,t,e){var n;!function(t){\"use strict\";function i(){}function r(u,t){for(var e=u.length;e--;)if(u[e].listener===t)return e;return-1}function o(u){return function(){return this[u].apply(this,arguments)}}function a(u){return\"function\"==typeof u||u instanceof RegExp||!(!u||\"object\"!=typeof u)&&a(u.listener)}var s=i.prototype,l=t.EventEmitter;s.getListeners=function(u){var t,e,n=this._getEvents();if(u instanceof RegExp){t={};for(e in n)n.hasOwnProperty(e)&&u.test(e)&&(t[e]=n[e])}else t=n[u]||(n[u]=[]);return t},s.flattenListeners=function(u){var t,e=[];for(t=0;t<u.length;t+=1)e.push(u[t].listener);return e},s.getListenersAsObject=function(u){var t,e=this.getListeners(u);return e instanceof Array&&(t={},t[u]=e),t||e},s.addListener=function(u,t){if(!a(t))throw new TypeError(\"listener must be a function\");var e,n=this.getListenersAsObject(u),i=\"object\"==typeof t;for(e in n)n.hasOwnProperty(e)&&-1===r(n[e],t)&&n[e].push(i?t:{listener:t,once:!1});return this},s.on=o(\"addListener\"),s.addOnceListener=function(u,t){return this.addListener(u,{listener:t,once:!0})},s.once=o(\"addOnceListener\"),s.defineEvent=function(u){return this.getListeners(u),this},s.defineEvents=function(u){for(var t=0;t<u.length;t+=1)this.defineEvent(u[t]);return this},s.removeListener=function(u,t){var e,n,i=this.getListenersAsObject(u);for(n in i)i.hasOwnProperty(n)&&-1!==(e=r(i[n],t))&&i[n].splice(e,1);return this},s.off=o(\"removeListener\"),s.addListeners=function(u,t){return this.manipulateListeners(!1,u,t)},s.removeListeners=function(u,t){return this.manipulateListeners(!0,u,t)},s.manipulateListeners=function(u,t,e){var n,i,r=u?this.removeListener:this.addListener,o=u?this.removeListeners:this.addListeners;if(\"object\"!=typeof t||t instanceof RegExp)for(n=e.length;n--;)r.call(this,t,e[n]);else for(n in t)t.hasOwnProperty(n)&&(i=t[n])&&(\"function\"==typeof i?r.call(this,n,i):o.call(this,n,i));return this},s.removeEvent=function(u){var t,e=typeof u,n=this._getEvents();if(\"string\"===e)delete n[u];else if(u instanceof RegExp)for(t in n)n.hasOwnProperty(t)&&u.test(t)&&delete n[t];else delete this._events;return this},s.removeAllListeners=o(\"removeEvent\"),s.emitEvent=function(u,t){var e,n,i,r,o=this.getListenersAsObject(u);for(r in o)if(o.hasOwnProperty(r))for(e=o[r].slice(0),i=0;i<e.length;i++)n=e[i],!0===n.once&&this.removeListener(u,n.listener),n.listener.apply(this,t||[])===this._getOnceReturnValue()&&this.removeListener(u,n.listener);return this},s.trigger=o(\"emitEvent\"),s.emit=function(u){var t=Array.prototype.slice.call(arguments,1);return this.emitEvent(u,t)},s.setOnceReturnValue=function(u){return this._onceReturnValue=u,this},s._getOnceReturnValue=function(){return!this.hasOwnProperty(\"_onceReturnValue\")||this._onceReturnValue},s._getEvents=function(){return this._events||(this._events={})},i.noConflict=function(){return t.EventEmitter=l,i},void 0!==(n=function(){return i}.call(t,e,t,u))&&(u.exports=n)}(this||{})},function(u,t,e){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=e(0);t.default=function(u,t,e){var i=u.appendChild(document.createElement(\"div\"));n(i,{left:0,width:\"36%\",display:\"inline-block\",height:\"20px\",paddingRight:\"2%\",verticalAlign:\"top\"});var r=i.appendChild(document.createElement(\"span\"));return r.innerHTML=t,n(r,{color:e.text1,display:\"inline-block\",verticalAlign:\"sub\",\"line-height\":\"20px\"}),r},u.exports=t.default},function(u,t,e){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=e(0);t.default=function(u,t,e,i,r){var o=u.appendChild(document.createElement(\"div\")),a=o.appendChild(document.createElement(\"span\"));a.innerHTML=t;var s={position:\"absolute\",backgroundColor:e.background2,paddingLeft:\"1.5%\",height:\"20px\",width:i,display:\"inline-block\",overflow:\"hidden\"};return r||(s.right=0),n(o,s),n(a,{color:e.text2,display:\"inline-block\",userSelect:\"text\",cursor:\"text\",overflow:\"hidden\",lineHeight:\"20px\",wordBreak:\"break-all\",height:20}),a},u.exports=t.default},function(u,t,e){var n;!function(i){function r(u,t){if(u=u||\"\",t=t||{},u instanceof r)return u;if(!(this instanceof r))return new r(u,t);var e=o(u);this._originalInput=u,this._r=e.r,this._g=e.g,this._b=e.b,this._a=e.a,this._roundA=V(100*this._a)/100,this._format=t.format||e.format,this._gradientType=t.gradientType,this._r<1&&(this._r=V(this._r)),this._g<1&&(this._g=V(this._g)),this._b<1&&(this._b=V(this._b)),this._ok=e.ok,this._tc_id=I++}function o(u){var t={r:0,g:0,b:0},e=1,n=null,i=null,r=null,o=!1,s=!1;return\"string\"==typeof u&&(u=T(u)),\"object\"==typeof u&&(z(u.r)&&z(u.g)&&z(u.b)?(t=a(u.r,u.g,u.b),o=!0,s=\"%\"===String(u.r).substr(-1)?\"prgb\":\"rgb\"):z(u.h)&&z(u.s)&&z(u.v)?(n=H(u.s),i=H(u.v),t=A(u.h,n,i),o=!0,s=\"hsv\"):z(u.h)&&z(u.s)&&z(u.l)&&(n=H(u.s),r=H(u.l),t=l(u.h,n,r),o=!0,s=\"hsl\"),u.hasOwnProperty(\"a\")&&(e=u.a)),e=_(e),{ok:o,format:u.format||s,r:q(255,G(t.r,0)),g:q(255,G(t.g,0)),b:q(255,G(t.b,0)),a:e}}function a(u,t,e){return{r:255*k(u,255),g:255*k(t,255),b:255*k(e,255)}}function s(u,t,e){u=k(u,255),t=k(t,255),e=k(e,255);var n,i,r=G(u,t,e),o=q(u,t,e),a=(r+o)/2;if(r==o)n=i=0;else{var s=r-o;switch(i=a>.5?s/(2-r-o):s/(r+o),r){case u:n=(t-e)/s+(t<e?6:0);break;case t:n=(e-u)/s+2;break;case e:n=(u-t)/s+4}n/=6}return{h:n,s:i,l:a}}function l(u,t,e){function n(u,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?u+6*(t-u)*e:e<.5?t:e<2/3?u+(t-u)*(2/3-e)*6:u}var i,r,o;if(u=k(u,360),t=k(t,100),e=k(e,100),0===t)i=r=o=e;else{var a=e<.5?e*(1+t):e+t-e*t,s=2*e-a;i=n(s,a,u+1/3),r=n(s,a,u),o=n(s,a,u-1/3)}return{r:255*i,g:255*r,b:255*o}}function c(u,t,e){u=k(u,255),t=k(t,255),e=k(e,255);var n,i,r=G(u,t,e),o=q(u,t,e),a=r,s=r-o;if(i=0===r?0:s/r,r==o)n=0;else{switch(r){case u:n=(t-e)/s+(t<e?6:0);break;case t:n=(e-u)/s+2;break;case e:n=(u-t)/s+4}n/=6}return{h:n,s:i,v:a}}function A(u,t,e){u=6*k(u,360),t=k(t,100),e=k(e,100);var n=i.floor(u),r=u-n,o=e*(1-t),a=e*(1-r*t),s=e*(1-(1-r)*t),l=n%6;return{r:255*[e,a,o,o,s,e][l],g:255*[s,e,e,a,o,o][l],b:255*[o,o,s,e,e,a][l]}}function f(u,t,e,n){var i=[L(V(u).toString(16)),L(V(t).toString(16)),L(V(e).toString(16))];return n&&i[0].charAt(0)==i[0].charAt(1)&&i[1].charAt(0)==i[1].charAt(1)&&i[2].charAt(0)==i[2].charAt(1)?i[0].charAt(0)+i[1].charAt(0)+i[2].charAt(0):i.join(\"\")}function E(u,t,e,n,i){var r=[L(V(u).toString(16)),L(V(t).toString(16)),L(V(e).toString(16)),L(U(n))];return i&&r[0].charAt(0)==r[0].charAt(1)&&r[1].charAt(0)==r[1].charAt(1)&&r[2].charAt(0)==r[2].charAt(1)&&r[3].charAt(0)==r[3].charAt(1)?r[0].charAt(0)+r[1].charAt(0)+r[2].charAt(0)+r[3].charAt(0):r.join(\"\")}function p(u,t,e,n){return[L(U(n)),L(V(u).toString(16)),L(V(t).toString(16)),L(V(e).toString(16))].join(\"\")}function h(u,t){t=0===t?0:t||10;var e=r(u).toHsl();return e.s-=t/100,e.s=S(e.s),r(e)}function C(u,t){t=0===t?0:t||10;var e=r(u).toHsl();return e.s+=t/100,e.s=S(e.s),r(e)}function d(u){return r(u).desaturate(100)}function F(u,t){t=0===t?0:t||10;var e=r(u).toHsl();return e.l+=t/100,e.l=S(e.l),r(e)}function g(u,t){t=0===t?0:t||10;var e=r(u).toRgb();return e.r=G(0,q(255,e.r-V(-t/100*255))),e.g=G(0,q(255,e.g-V(-t/100*255))),e.b=G(0,q(255,e.b-V(-t/100*255))),r(e)}function b(u,t){t=0===t?0:t||10;var e=r(u).toHsl();return e.l-=t/100,e.l=S(e.l),r(e)}function D(u,t){var e=r(u).toHsl(),n=(e.h+t)%360;return e.h=n<0?360+n:n,r(e)}function B(u){var t=r(u).toHsl();return t.h=(t.h+180)%360,r(t)}function v(u){var t=r(u).toHsl(),e=t.h;return[r(u),r({h:(e+120)%360,s:t.s,l:t.l}),r({h:(e+240)%360,s:t.s,l:t.l})]}function y(u){var t=r(u).toHsl(),e=t.h;return[r(u),r({h:(e+90)%360,s:t.s,l:t.l}),r({h:(e+180)%360,s:t.s,l:t.l}),r({h:(e+270)%360,s:t.s,l:t.l})]}function m(u){var t=r(u).toHsl(),e=t.h;return[r(u),r({h:(e+72)%360,s:t.s,l:t.l}),r({h:(e+216)%360,s:t.s,l:t.l})]}function x(u,t,e){t=t||6,e=e||30;var n=r(u).toHsl(),i=360/e,o=[r(u)];for(n.h=(n.h-(i*t>>1)+720)%360;--t;)n.h=(n.h+i)%360,o.push(r(n));return o}function w(u,t){t=t||6;for(var e=r(u).toHsv(),n=e.h,i=e.s,o=e.v,a=[],s=1/t;t--;)a.push(r({h:n,s:i,v:o})),o=(o+s)%1;return a}function _(u){return u=parseFloat(u),(isNaN(u)||u<0||u>1)&&(u=1),u}function k(u,t){j(u)&&(u=\"100%\");var e=O(u);return u=q(t,G(0,parseFloat(u))),e&&(u=parseInt(u*t,10)/100),i.abs(u-t)<1e-6?1:u%t/parseFloat(t)}function S(u){return q(1,G(0,u))}function M(u){return parseInt(u,16)}function j(u){return\"string\"==typeof u&&-1!=u.indexOf(\".\")&&1===parseFloat(u)}function O(u){return\"string\"==typeof u&&-1!=u.indexOf(\"%\")}function L(u){return 1==u.length?\"0\"+u:\"\"+u}function H(u){return u<=1&&(u=100*u+\"%\"),u}function U(u){return i.round(255*parseFloat(u)).toString(16)}function R(u){return M(u)/255}function z(u){return!!Y.CSS_UNIT.exec(u)}function T(u){u=u.replace($,\"\").replace(N,\"\").toLowerCase();var t=!1;if(Z[u])u=Z[u],t=!0;else if(\"transparent\"==u)return{r:0,g:0,b:0,a:0,format:\"name\"};var e;return(e=Y.rgb.exec(u))?{r:e[1],g:e[2],b:e[3]}:(e=Y.rgba.exec(u))?{r:e[1],g:e[2],b:e[3],a:e[4]}:(e=Y.hsl.exec(u))?{h:e[1],s:e[2],l:e[3]}:(e=Y.hsla.exec(u))?{h:e[1],s:e[2],l:e[3],a:e[4]}:(e=Y.hsv.exec(u))?{h:e[1],s:e[2],v:e[3]}:(e=Y.hsva.exec(u))?{h:e[1],s:e[2],v:e[3],a:e[4]}:(e=Y.hex8.exec(u))?{r:M(e[1]),g:M(e[2]),b:M(e[3]),a:R(e[4]),format:t?\"name\":\"hex8\"}:(e=Y.hex6.exec(u))?{r:M(e[1]),g:M(e[2]),b:M(e[3]),format:t?\"name\":\"hex\"}:(e=Y.hex4.exec(u))?{r:M(e[1]+\"\"+e[1]),g:M(e[2]+\"\"+e[2]),b:M(e[3]+\"\"+e[3]),a:R(e[4]+\"\"+e[4]),format:t?\"name\":\"hex8\"}:!!(e=Y.hex3.exec(u))&&{r:M(e[1]+\"\"+e[1]),g:M(e[2]+\"\"+e[2]),b:M(e[3]+\"\"+e[3]),format:t?\"name\":\"hex\"}}function P(u){var t,e;return u=u||{level:\"AA\",size:\"small\"},t=(u.level||\"AA\").toUpperCase(),e=(u.size||\"small\").toLowerCase(),\"AA\"!==t&&\"AAA\"!==t&&(t=\"AA\"),\"small\"!==e&&\"large\"!==e&&(e=\"small\"),{level:t,size:e}}var $=/^\\s+/,N=/\\s+$/,I=0,V=i.round,q=i.min,G=i.max,W=i.random;r.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var u=this.toRgb();return(299*u.r+587*u.g+114*u.b)/1e3},getLuminance:function(){var u,t,e,n,r,o,a=this.toRgb();return u=a.r/255,t=a.g/255,e=a.b/255,n=u<=.03928?u/12.92:i.pow((u+.055)/1.055,2.4),r=t<=.03928?t/12.92:i.pow((t+.055)/1.055,2.4),o=e<=.03928?e/12.92:i.pow((e+.055)/1.055,2.4),.2126*n+.7152*r+.0722*o},setAlpha:function(u){return this._a=_(u),this._roundA=V(100*this._a)/100,this},toHsv:function(){var u=c(this._r,this._g,this._b);return{h:360*u.h,s:u.s,v:u.v,a:this._a}},toHsvString:function(){var u=c(this._r,this._g,this._b),t=V(360*u.h),e=V(100*u.s),n=V(100*u.v);return 1==this._a?\"hsv(\"+t+\", \"+e+\"%, \"+n+\"%)\":\"hsva(\"+t+\", \"+e+\"%, \"+n+\"%, \"+this._roundA+\")\"},toHsl:function(){var u=s(this._r,this._g,this._b);return{h:360*u.h,s:u.s,l:u.l,a:this._a}},toHslString:function(){var u=s(this._r,this._g,this._b),t=V(360*u.h),e=V(100*u.s),n=V(100*u.l);return 1==this._a?\"hsl(\"+t+\", \"+e+\"%, \"+n+\"%)\":\"hsla(\"+t+\", \"+e+\"%, \"+n+\"%, \"+this._roundA+\")\"},toHex:function(u){return f(this._r,this._g,this._b,u)},toHexString:function(u){return\"#\"+this.toHex(u)},toHex8:function(u){return E(this._r,this._g,this._b,this._a,u)},toHex8String:function(u){return\"#\"+this.toHex8(u)},toRgb:function(){return{r:V(this._r),g:V(this._g),b:V(this._b),a:this._a}},toRgbString:function(){return 1==this._a?\"rgb(\"+V(this._r)+\", \"+V(this._g)+\", \"+V(this._b)+\")\":\"rgba(\"+V(this._r)+\", \"+V(this._g)+\", \"+V(this._b)+\", \"+this._roundA+\")\"},toPercentageRgb:function(){return{r:V(100*k(this._r,255))+\"%\",g:V(100*k(this._g,255))+\"%\",b:V(100*k(this._b,255))+\"%\",a:this._a}},toPercentageRgbString:function(){return 1==this._a?\"rgb(\"+V(100*k(this._r,255))+\"%, \"+V(100*k(this._g,255))+\"%, \"+V(100*k(this._b,255))+\"%)\":\"rgba(\"+V(100*k(this._r,255))+\"%, \"+V(100*k(this._g,255))+\"%, \"+V(100*k(this._b,255))+\"%, \"+this._roundA+\")\"},toName:function(){return 0===this._a?\"transparent\":!(this._a<1)&&(X[f(this._r,this._g,this._b,!0)]||!1)},toFilter:function(u){var t=\"#\"+p(this._r,this._g,this._b,this._a),e=t,n=this._gradientType?\"GradientType = 1, \":\"\";if(u){var i=r(u);e=\"#\"+p(i._r,i._g,i._b,i._a)}return\"progid:DXImageTransform.Microsoft.gradient(\"+n+\"startColorstr=\"+t+\",endColorstr=\"+e+\")\"},toString:function(u){var t=!!u;u=u||this._format;var e=!1,n=this._a<1&&this._a>=0;return t||!n||\"hex\"!==u&&\"hex6\"!==u&&\"hex3\"!==u&&\"hex4\"!==u&&\"hex8\"!==u&&\"name\"!==u?(\"rgb\"===u&&(e=this.toRgbString()),\"prgb\"===u&&(e=this.toPercentageRgbString()),\"hex\"!==u&&\"hex6\"!==u||(e=this.toHexString()),\"hex3\"===u&&(e=this.toHexString(!0)),\"hex4\"===u&&(e=this.toHex8String(!0)),\"hex8\"===u&&(e=this.toHex8String()),\"name\"===u&&(e=this.toName()),\"hsl\"===u&&(e=this.toHslString()),\"hsv\"===u&&(e=this.toHsvString()),e||this.toHexString()):\"name\"===u&&0===this._a?this.toName():this.toRgbString()},clone:function(){return r(this.toString())},_applyModification:function(u,t){var e=u.apply(null,[this].concat([].slice.call(t)));return this._r=e._r,this._g=e._g,this._b=e._b,this.setAlpha(e._a),this},lighten:function(){return this._applyModification(F,arguments)},brighten:function(){return this._applyModification(g,arguments)},darken:function(){return this._applyModification(b,arguments)},desaturate:function(){return this._applyModification(h,arguments)},saturate:function(){return this._applyModification(C,arguments)},greyscale:function(){return this._applyModification(d,arguments)},spin:function(){return this._applyModification(D,arguments)},_applyCombination:function(u,t){return u.apply(null,[this].concat([].slice.call(t)))},analogous:function(){return this._applyCombination(x,arguments)},complement:function(){return this._applyCombination(B,arguments)},monochromatic:function(){return this._applyCombination(w,arguments)},splitcomplement:function(){return this._applyCombination(m,arguments)},triad:function(){return this._applyCombination(v,arguments)},tetrad:function(){return this._applyCombination(y,arguments)}},r.fromRatio=function(u,t){if(\"object\"==typeof u){var e={};for(var n in u)u.hasOwnProperty(n)&&(e[n]=\"a\"===n?u[n]:H(u[n]));u=e}return r(u,t)},r.equals=function(u,t){return!(!u||!t)&&r(u).toRgbString()==r(t).toRgbString()},r.random=function(){return r.fromRatio({r:W(),g:W(),b:W()})},r.mix=function(u,t,e){e=0===e?0:e||50;var n=r(u).toRgb(),i=r(t).toRgb(),o=e/100;return r({r:(i.r-n.r)*o+n.r,g:(i.g-n.g)*o+n.g,b:(i.b-n.b)*o+n.b,a:(i.a-n.a)*o+n.a})},r.readability=function(u,t){var e=r(u),n=r(t);return(i.max(e.getLuminance(),n.getLuminance())+.05)/(i.min(e.getLuminance(),n.getLuminance())+.05)},r.isReadable=function(u,t,e){var n,i,o=r.readability(u,t);switch(i=!1,n=P(e),n.level+n.size){case\"AAsmall\":case\"AAAlarge\":i=o>=4.5;break;case\"AAlarge\":i=o>=3;break;case\"AAAsmall\":i=o>=7}return i},r.mostReadable=function(u,t,e){var n,i,o,a,s=null,l=0;e=e||{},i=e.includeFallbackColors,o=e.level,a=e.size;for(var c=0;c<t.length;c++)(n=r.readability(u,t[c]))>l&&(l=n,s=r(t[c]));return r.isReadable(u,s,{level:o,size:a})||!i?s:(e.includeFallbackColors=!1,r.mostReadable(u,[\"#fff\",\"#000\"],e))};var Z=r.names={aliceblue:\"f0f8ff\",antiquewhite:\"faebd7\",aqua:\"0ff\",aquamarine:\"7fffd4\",azure:\"f0ffff\",beige:\"f5f5dc\",bisque:\"ffe4c4\",black:\"000\",blanchedalmond:\"ffebcd\",blue:\"00f\",blueviolet:\"8a2be2\",brown:\"a52a2a\",burlywood:\"deb887\",burntsienna:\"ea7e5d\",cadetblue:\"5f9ea0\",chartreuse:\"7fff00\",chocolate:\"d2691e\",coral:\"ff7f50\",cornflowerblue:\"6495ed\",cornsilk:\"fff8dc\",crimson:\"dc143c\",cyan:\"0ff\",darkblue:\"00008b\",darkcyan:\"008b8b\",darkgoldenrod:\"b8860b\",darkgray:\"a9a9a9\",darkgreen:\"006400\",darkgrey:\"a9a9a9\",darkkhaki:\"bdb76b\",darkmagenta:\"8b008b\",darkolivegreen:\"556b2f\",darkorange:\"ff8c00\",darkorchid:\"9932cc\",darkred:\"8b0000\",darksalmon:\"e9967a\",darkseagreen:\"8fbc8f\",darkslateblue:\"483d8b\",darkslategray:\"2f4f4f\",darkslategrey:\"2f4f4f\",darkturquoise:\"00ced1\",darkviolet:\"9400d3\",deeppink:\"ff1493\",deepskyblue:\"00bfff\",dimgray:\"696969\",dimgrey:\"696969\",dodgerblue:\"1e90ff\",firebrick:\"b22222\",floralwhite:\"fffaf0\",forestgreen:\"228b22\",fuchsia:\"f0f\",gainsboro:\"dcdcdc\",ghostwhite:\"f8f8ff\",gold:\"ffd700\",goldenrod:\"daa520\",gray:\"808080\",green:\"008000\",greenyellow:\"adff2f\",grey:\"808080\",honeydew:\"f0fff0\",hotpink:\"ff69b4\",indianred:\"cd5c5c\",indigo:\"4b0082\",ivory:\"fffff0\",khaki:\"f0e68c\",lavender:\"e6e6fa\",lavenderblush:\"fff0f5\",lawngreen:\"7cfc00\",lemonchiffon:\"fffacd\",lightblue:\"add8e6\",lightcoral:\"f08080\",lightcyan:\"e0ffff\",lightgoldenrodyellow:\"fafad2\",lightgray:\"d3d3d3\",lightgreen:\"90ee90\",lightgrey:\"d3d3d3\",lightpink:\"ffb6c1\",lightsalmon:\"ffa07a\",lightseagreen:\"20b2aa\",lightskyblue:\"87cefa\",lightslategray:\"789\",lightslategrey:\"789\",lightsteelblue:\"b0c4de\",lightyellow:\"ffffe0\",lime:\"0f0\",limegreen:\"32cd32\",linen:\"faf0e6\",magenta:\"f0f\",maroon:\"800000\",mediumaquamarine:\"66cdaa\",mediumblue:\"0000cd\",mediumorchid:\"ba55d3\",mediumpurple:\"9370db\",mediumseagreen:\"3cb371\",mediumslateblue:\"7b68ee\",mediumspringgreen:\"00fa9a\",mediumturquoise:\"48d1cc\",mediumvioletred:\"c71585\",midnightblue:\"191970\",mintcream:\"f5fffa\",mistyrose:\"ffe4e1\",moccasin:\"ffe4b5\",navajowhite:\"ffdead\",navy:\"000080\",oldlace:\"fdf5e6\",olive:\"808000\",olivedrab:\"6b8e23\",orange:\"ffa500\",orangered:\"ff4500\",orchid:\"da70d6\",palegoldenrod:\"eee8aa\",palegreen:\"98fb98\",paleturquoise:\"afeeee\",palevioletred:\"db7093\",papayawhip:\"ffefd5\",peachpuff:\"ffdab9\",peru:\"cd853f\",pink:\"ffc0cb\",plum:\"dda0dd\",powderblue:\"b0e0e6\",purple:\"800080\",rebeccapurple:\"663399\",red:\"f00\",rosybrown:\"bc8f8f\",royalblue:\"4169e1\",saddlebrown:\"8b4513\",salmon:\"fa8072\",sandybrown:\"f4a460\",seagreen:\"2e8b57\",seashell:\"fff5ee\",sienna:\"a0522d\",silver:\"c0c0c0\",skyblue:\"87ceeb\",slateblue:\"6a5acd\",slategray:\"708090\",slategrey:\"708090\",snow:\"fffafa\",springgreen:\"00ff7f\",steelblue:\"4682b4\",tan:\"d2b48c\",teal:\"008080\",thistle:\"d8bfd8\",tomato:\"ff6347\",turquoise:\"40e0d0\",violet:\"ee82ee\",wheat:\"f5deb3\",white:\"fff\",whitesmoke:\"f5f5f5\",yellow:\"ff0\",yellowgreen:\"9acd32\"},X=r.hexNames=function(u){var t={};for(var e in u)u.hasOwnProperty(e)&&(t[u[e]]=e);return t}(Z),Y=function(){var u=\"(?:[-\\\\+]?\\\\d*\\\\.\\\\d+%?)|(?:[-\\\\+]?\\\\d+%?)\",t=\"[\\\\s|\\\\(]+(\"+u+\")[,|\\\\s]+(\"+u+\")[,|\\\\s]+(\"+u+\")\\\\s*\\\\)?\",e=\"[\\\\s|\\\\(]+(\"+u+\")[,|\\\\s]+(\"+u+\")[,|\\\\s]+(\"+u+\")[,|\\\\s]+(\"+u+\")\\\\s*\\\\)?\";return{CSS_UNIT:new RegExp(u),rgb:new RegExp(\"rgb\"+t),rgba:new RegExp(\"rgba\"+e),hsl:new RegExp(\"hsl\"+t),hsla:new RegExp(\"hsla\"+e),hsv:new RegExp(\"hsv\"+t),hsva:new RegExp(\"hsva\"+e),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();void 0!==u&&u.exports?u.exports=r:void 0!==(n=function(){return r}.call(t,e,t,u))&&(u.exports=n)}(Math)},function(u,t,e){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.GUI=void 0;var n=e(9),i=function(u){return u&&u.__esModule?u:{default:u}}(n);t.GUI=i.default},function(u,t,e){\"use strict\";function n(u,t){if(!(u instanceof t))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(t,\"__esModule\",{value:!0});var i=function(){function u(u,t){for(var e=0;e<t.length;e++){var n=t[e];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(u,n.key,n)}}return function(t,e,n){return e&&u(t.prototype,e),n&&u(t,n),t}}(),r=e(10),o=(function(u){u&&u.__esModule}(r),e(13)),a=e(0),s=e(22),l=e(23),c=function(){function u(t){n(this,u),this.opts=t,this.hasRoot=void 0!==t.root,t=t||{},t.width=t.width||300,t.theme=s(t.theme)?l[t.theme]:l.dark,t.root=t.root||document.body,t.align=(t.align||\"right\").toLowerCase(),t.opacity=t.opacity||1,t.useMenuBar=t.useMenuBar||!1,t.barMode=(t.barMode||\"overlay\").toLowerCase(),this.styling={barHeight:36},this.uuid=o(),this._LoadStyles(),this._ConstructElements(),this.components={title:e(24),range:e(31),button:e(35),checkbox:e(38),select:e(41),text:e(44),color:e(45),folder:e(59)},this.loadedComponents=[],this._UpdateComponents()}return i(u,[{key:\"_LoadStyles\",value:function(){var u=document.createElement(\"style\");u.setAttribute(\"type\",\"text/css\"),u.setAttribute(\"rel\",\"stylesheet\"),u.setAttribute(\"href\",\"//cdn.jsdelivr.net/font-hack/2.019/css/hack.min.css\"),document.getElementsByTagName(\"head\")[0].appendChild(u)}},{key:\"_ConstructElements\",value:function(){var u=this;if(this.container=document.createElement(\"div\"),this.container.id=\"guify\",this.container.classList.add(\"reset\"),this.container.classList.add(\"guify-container\"),a(this.container,{top:\"above\"==this.opts.barMode&&this.hasRoot?\"-36px\":\"0\"}),this.opts.root.appendChild(this.container),this.bar=document.createElement(\"div\"),this.bar.className=\"guify-bar\",this.container.appendChild(this.bar),a(this.bar,{background:this.opts.theme.background1}),this.opts.title){var t=this.bar.appendChild(document.createElement(\"div\"));t.className=\"guify-bar-title\",t.innerHTML=this.opts.title,a(t,{color:this.opts.theme.text1})}var n=this.bar.appendChild(document.createElement(\"button\"));if(n.className=\"guify-bar-button\",n.innerHTML=\"Controls\",a(n,{left:\"left\"==this.opts.align?\"8px\":\"unset\",right:\"left\"==this.opts.align?\"unset\":\"8px\"}),n.onclick=function(){u.TogglePanelVisible()},\"offset\"==this.opts.barMode){this.opts.root.style.height=this.opts.root.offsetHeight+this.bar.offsetHeight+\"px\";var i=document.createElement(\"div\");i.style.width=\"100%\",i.style.height=this.bar.offsetHeight,this.opts.root.insertBefore(i,this.opts.root.childNodes[0])}this.panel=this.container.appendChild(document.createElement(\"div\")),this.panel.className=\"guify-panel\",a(this.panel,{background:this.opts.theme.background1,width:this.opts.width,opacity:this.opts.opacity||1,left:\"left\"==this.opts.align?\"0px\":\"unset\",right:\"left\"==this.opts.align?\"unset\":\"0px\"}),this.opts.title&&!this.opts.useMenuBar&&e(62)(this.panel,this.opts.title,this.opts.theme),this.opts.useMenuBar?this.SetPanelVisible(!1):(this.bar.style.display=\"none\",this.SetPanelVisible(!0)),this.toastContainer=this.container.appendChild(document.createElement(\"div\")),a(this.toastContainer,{position:\"absolute\",width:\"100%\"})}},{key:\"_UpdateComponents\",value:function(){var u=this;this.loadedComponents.forEach(function(u){u.binding&&u.SetValue(u.binding.object[u.binding.property])}),setTimeout(function(){window.requestAnimationFrame(function(){u._UpdateComponents()})},100)}},{key:\"SetPanelVisible\",value:function(u){this.panel.style.display=u?\"block\":\"none\"}},{key:\"TogglePanelVisible\",value:function(){\"none\"!=this.panel.style.display?this.SetPanelVisible(!1):this.SetPanelVisible(!0)}},{key:\"Register\",value:function(u){var t=this,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(Array.isArray(u))u.forEach(function(u){var n=Object.assign(u,e);t._Register(n)});else{var n=Object.assign(u,e);this._Register(n)}}},{key:\"_Register\",value:function(u){if(u.object&&u.property&&void 0===u.object[u.property])throw new Error(\"Object \"+u.object+\" has no property '\"+u.property+\"'\");if(u.object&&u.property&&(u.initial=u.object[u.property]),void 0===this.components[u.type])throw new Error(\"No component type named '\"+u.type+\"' exists.\");var t=this.panel;if(u.folder){var e=this.loadedComponents.find(function(t){return\"folder\"===t.opts.type&&t.opts.label===u.folder});if(!e)throw new Error(\"No folder exists with the name \"+u.folder);t=e.folderContainer}var n=new this.components[u.type](t,u,this.opts.theme,this.uuid);u.object&&u.property&&(n.binding={object:u.object,property:u.property}),n.on&&(n.on(\"initialized\",function(t){u.onInitialize&&u.onInitialize(t)}),n.on(\"input\",function(t){u.object&&u.property&&(u.object[u.property]=t),u.onChange&&u.onChange(t)})),this.loadedComponents.push(n)}},{key:\"Toast\",value:function(u){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:100;console.log(\"[Toast] \"+u);var n=this.toastContainer.appendChild(document.createElement(\"div\"));a(n,{\"box-sizing\":\"border-box\",\"background-color\":this.opts.theme.background2,color:this.opts.theme.text1,position:\"relative\",width:\"100%\",padding:\"8px\",\"padding-left\":\"20px\",\"padding-right\":\"20px\",\"text-align\":\"center\",\"font-family\":\"Hack', monospace\",\"font-size\":\"11px\",\"z-index\":this.container.zIndex-100}),n.innerHTML=u;var i=n.appendChild(document.createElement(\"button\"));i.innerHTML=\"&#10006;\",a(i,{background:\"rgba(0, 0, 0, 0)\",color:this.opts.theme.text1,position:\"absolute\",textAlign:\"center\",\"margin-top\":\"auto\",\"margin-bottom\":\"auto\",border:\"none\",cursor:\"pointer\",fontFamily:\"inherit\",top:\"0\",bottom:\"0\",right:\"8px\"});var r=void 0,o=function(){a(n,{\"-webkit-transition\":\"-webkit-opacity \"+e+\"ms linear\",transition:\"opacity \"+e+\"ms linear\",opacity:\"0\"}),clearTimeout(r),r=setTimeout(function(){n&&n.parentNode.removeChild(n)},e)};r=setTimeout(o,t),i.onclick=o}}]),u}();t.default=c,u.exports=t.default},function(u,t,e){var n=e(11);\"string\"==typeof n&&(n=[[u.i,n,\"\"]]);var i={};i.transform=void 0;e(3)(n,i);n.locals&&(u.exports=n.locals)},function(u,t,e){t=u.exports=e(2)(void 0),t.push([u.i,\"#guify {\\n  position: absolute;\\n  left: 0;\\n  width: 100%;\\n  font-family: 'Hack', monospace;\\n  font-size: 11px; }\\n  #guify .guify-bar {\\n    height: 36px;\\n    width: 100%;\\n    opacity: 1.0;\\n    position: relative;\\n    left: 0;\\n    top: 0; }\\n    #guify .guify-bar .guify-bar-title {\\n      text-align: center;\\n      width: 100%;\\n      position: absolute;\\n      top: 8px;\\n      line-height: 20px;\\n      color: #ebebeb;\\n      -webkit-user-select: none;\\n      -moz-user-select: none;\\n      -ms-user-select: none;\\n      user-select: none; }\\n    #guify .guify-bar .guify-bar-button {\\n      text-align: center;\\n      border: none;\\n      cursor: pointer;\\n      font-family: inherit;\\n      height: 20px;\\n      position: absolute;\\n      top: 8px;\\n      color: #ebebeb;\\n      background-color: #363636;\\n      -webkit-user-select: none;\\n      -moz-user-select: none;\\n      -ms-user-select: none;\\n      user-select: none; }\\n      #guify .guify-bar .guify-bar-button:hover {\\n        background-color: #4c4c4c; }\\n  #guify .guify-panel {\\n    border: 1px solid #232323; }\\n    #guify .guify-panel {\\n      position: absolute;\\n      padding: 14px;\\n      padding-bottom: 8px;\\n      /* all: initial;  */\\n      -webkit-user-select: none;\\n      -moz-user-select: none;\\n      -ms-user-select: none;\\n      user-select: none;\\n      cursor: default;\\n      text-align: left;\\n      box-sizing: border-box; }\\n    #guify .guify-panel * {\\n      box-sizing: initial;\\n      -webkit-box-sizing: initial;\\n      -moz-box-sizing: initial; }\\n    #guify .guify-panel * input {\\n      font-family: 'Hack';\\n      font-size: 11px;\\n      display: inline; }\\n    #guify .guify-panel * a {\\n      color: inherit;\\n      text-decoration: none; }\\n\",\"\"])},function(u,t){u.exports=function(u){var t=\"undefined\"!=typeof window&&window.location;if(!t)throw new Error(\"fixUrls requires window.location\");if(!u||\"string\"!=typeof u)return u;var e=t.protocol+\"//\"+t.host,n=e+t.pathname.replace(/\\/[^\\/]*$/,\"/\");return u.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi,function(u,t){var i=t.trim().replace(/^\"(.*)\"$/,function(u,t){return t}).replace(/^'(.*)'$/,function(u,t){return t});if(/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(i))return u;var r;return r=0===i.indexOf(\"//\")?i:0===i.indexOf(\"/\")?e+i:n+i.replace(/^\\.\\//,\"\"),\"url(\"+JSON.stringify(r)+\")\"})}},function(u,t,e){function n(u,t,e){var n=t&&e||0;\"string\"==typeof u&&(t=\"binary\"==u?new Array(16):null,u=null),u=u||{};var o=u.random||(u.rng||i)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,t)for(var a=0;a<16;++a)t[n+a]=o[a];return t||r(o)}var i=e(14),r=e(16);u.exports=n},function(u,t,e){(function(t){var e,n=t.crypto||t.msCrypto;if(n&&n.getRandomValues){var i=new Uint8Array(16);e=function(){return n.getRandomValues(i),i}}if(!e){var r=new Array(16);e=function(){for(var u,t=0;t<16;t++)0==(3&t)&&(u=4294967296*Math.random()),r[t]=u>>>((3&t)<<3)&255;return r}}u.exports=e}).call(t,e(15))},function(u,t){var e;e=function(){return this}();try{e=e||Function(\"return this\")()||(0,eval)(\"this\")}catch(u){\"object\"==typeof window&&(e=window)}u.exports=e},function(u,t){function e(u,t){var e=t||0,i=n;return i[u[e++]]+i[u[e++]]+i[u[e++]]+i[u[e++]]+\"-\"+i[u[e++]]+i[u[e++]]+\"-\"+i[u[e++]]+i[u[e++]]+\"-\"+i[u[e++]]+i[u[e++]]+\"-\"+i[u[e++]]+i[u[e++]]+i[u[e++]]+i[u[e++]]+i[u[e++]]+i[u[e++]]}for(var n=[],i=0;i<256;++i)n[i]=(i+256).toString(16).substr(1);u.exports=e},function(u,t){var e=null,n=[\"Webkit\",\"Moz\",\"O\",\"ms\"];u.exports=function(u){e||(e=document.createElement(\"div\"));var t=e.style;if(u in t)return u;for(var i=u.charAt(0).toUpperCase()+u.slice(1),r=n.length;r>=0;r--){var o=n[r]+i;if(o in t)return o}return!1}},function(u,t,e){function n(u){return i(u).replace(/\\s(\\w)/g,function(u,t){return t.toUpperCase()})}var i=e(19);u.exports=n},function(u,t,e){function n(u){return i(u).replace(/[\\W_]+(.|$)/g,function(u,t){return t?\" \"+t:\"\"}).trim()}var i=e(20);u.exports=n},function(u,t){function e(u){return r.test(u)?u.toLowerCase():o.test(u)?(n(u)||u).toLowerCase():a.test(u)?i(u).toLowerCase():u.toLowerCase()}function n(u){return u.replace(s,function(u,t){return t?\" \"+t:\"\"})}function i(u){return u.replace(l,function(u,t,e){return t+\" \"+e.toLowerCase().split(\"\").join(\" \")})}u.exports=e;var r=/\\s/,o=/(_|-|\\.|:)/,a=/([a-z][A-Z]|[A-Z][a-z])/,s=/[\\W_]+(.|$)/g,l=/(.)([A-Z]+)/g},function(u,t){var e={animationIterationCount:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridColumn:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,stopOpacity:!0,strokeDashoffset:!0,strokeOpacity:!0,strokeWidth:!0};u.exports=function(u,t){return\"number\"!=typeof t||e[u]?t:t+\"px\"}},function(u,t,e){\"use strict\";var n=String.prototype.valueOf,i=function(u){try{return n.call(u),!0}catch(u){return!1}},r=Object.prototype.toString,o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.toStringTag;u.exports=function(u){return\"string\"==typeof u||\"object\"==typeof u&&(o?i(u):\"[object String]\"===r.call(u))}},function(u,t,e){\"use strict\";u.exports={light:{background1:\"rgb(227,227,227)\",background2:\"rgb(204,204,204)\",background2hover:\"rgb(208,208,208)\",foreground1:\"rgb(105,105,105)\",text1:\"rgb(36,36,36)\",text2:\"rgb(87,87,87)\"},dark:{background1:\"rgb(35,35,35)\",background2:\"rgb(54,54,54)\",background2hover:\"rgb(58,58,58)\",foreground1:\"rgb(112,112,112)\",text1:\"rgb(235,235,235)\",text2:\"rgb(161,161,161)\"}}},function(u,t,e){\"use strict\";function n(u,t){if(!(u instanceof t))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(t,\"__esModule\",{value:!0});var i=e(0),r=function u(t,r,o){n(this,u),this.opts=r;var a=e(1)(t,r.label);i(a,{\"margin-top\":\"2%\",\"margin-bottom\":\"1%\"});var s=a.appendChild(document.createElement(\"div\"));i(s,{\"box-sizing\":\"border-box\",left:0,width:\"100%\",display:\"inline-block\",height:\"20px\",verticalAlign:\"top\"});var l=s.appendChild(document.createElement(\"div\"));l.innerHTML=\"&#9632; \"+r.label+\" &#9632;\",i(l,{color:o.text1,display:\"inline-block\",verticalAlign:\"sub\",height:\"20px\"})};t.default=r,u.exports=t.default},function(u,t,e){var n=e(26);u.exports=function(u,t){return n(u,t,\"-\")}},function(u,t,e){var n=e(27),i=e(28),r=e(29),o=e(30);u.exports=function(u,t,e){function a(u,t,n){return 0===t||t===n.length-u.length?\"\":e}return null==u?\"\":(e=\"string\"!=typeof e?\" \":e,u=String(u).replace(r,\"$1 $2\").replace(o,\"$1 $2\").replace(i,a),n(u,t))}},function(u,t){var e={tr:{regexp:/\\u0130|\\u0049|\\u0049\\u0307/g,map:{\"İ\":\"i\",I:\"ı\",\"İ\":\"i\"}},az:{regexp:/[\\u0130]/g,map:{\"İ\":\"i\",I:\"ı\",\"İ\":\"i\"}},lt:{regexp:/[\\u0049\\u004A\\u012E\\u00CC\\u00CD\\u0128]/g,map:{I:\"i̇\",J:\"j̇\",\"Į\":\"į̇\",\"Ì\":\"i̇̀\",\"Í\":\"i̇́\",\"Ĩ\":\"i̇̃\"}}};u.exports=function(u,t){var n=e[t];return u=null==u?\"\":String(u),n&&(u=u.replace(n.regexp,function(u){return n.map[u]})),u.toLowerCase()}},function(u,t){u.exports=/[^A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC0-9\\xB2\\xB3\\xB9\\xBC-\\xBE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D66-\\u0D75\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19]+/g},function(u,t){u.exports=/([a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A0-9\\xB2\\xB3\\xB9\\xBC-\\xBE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D66-\\u0D75\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19])([A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A])/g},function(u,t){u.exports=/([A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A]+)([A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A][a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A])/g},function(u,t,e){\"use strict\";function n(u,t){if(!(u instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function i(u,t){if(!u)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?u:t}function r(u,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);u.prototype=Object.create(t&&t.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(u,t):u.__proto__=t)}Object.defineProperty(t,\"__esModule\",{value:!0});var o=function(){function u(u,t){for(var e=0;e<t.length;e++){var n=t[e];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(u,n.key,n)}}return function(t,e,n){return e&&u(t.prototype,e),n&&u(t,n),t}}(),a=e(32),s=(function(u){u&&u.__esModule}(a),e(4)),l=e(0),c=e(34),A=function(u){function t(u,r,o,a){n(this,t);var s=i(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));s.opts=r;var A=e(1)(u,r.label);if(e(5)(A,r.label,o),r.step&&r.steps)throw new Error(\"Cannot specify both step and steps. Got step = \"+r.step+\", steps = \",r.steps);if(s.input=A.appendChild(document.createElement(\"input\")),s.input.type=\"range\",s.input.className=\"guify-range\",r.label&&s.input.setAttribute(\"aria-label\",r.label),\"log\"===r.scale){if(r.max=c(r.max)?r.max:100,r.min=c(r.min)?r.min:.1,r.min*r.max<=0)throw new Error(\"Log range min/max must have the same sign and not equal zero. Got min = \"+r.min+\", max = \"+r.max);if(s.logmin=r.min,s.logmax=r.max,s.logsign=r.min>0?1:-1,s.logmin=Math.abs(s.logmin),s.logmax=Math.abs(s.logmax),r.min=0,r.max=100,c(r.step))throw new Error(\"Log may only use steps (integer number of steps), not a step value. Got step =\"+r.step);if(r.step=1,r.initial=s.InverseScaleValue(c(r.initial)?r.initial:scaleValue(.5*(r.min+r.max))),r.initial*s.InverseScaleValue(r.max)<=0)throw new Error(\"Log range initial value must have the same sign as min/max and must not equal zero. Got initial value = \"+r.initial)}else r.max=c(r.max)?r.max:100,r.min=c(r.min)?r.min:0,r.step=c(r.step)?r.step:(r.max-r.min)/100,r.initial=c(r.initial)?r.initial:.5*(r.min+r.max);c(r.steps)&&(r.step=c(r.steps)?(r.max-r.min)/r.steps:r.step);var f=Math.round((r.initial-r.min)/r.step);return r.initial=r.min+r.step*f,s.input.min=r.min,s.input.max=r.max,s.input.step=r.step,s.input.value=r.initial,l(s.input,{width:\"47.5%\"}),s.valueComponent=e(6)(A,s.ScaleValue(r.initial),o,\"11%\"),setTimeout(function(){s.emit(\"initialized\",parseFloat(s.input.value))}),s.userIsModifying=!1,s.input.onmousedown=function(){s.userIsModifying=!0},s.input.onmouseup=function(){s.userIsModifying=!1},s.input.oninput=function(u){var t=s.ScaleValue(parseFloat(u.target.value));s.valueComponent.innerHTML=t,s.emit(\"input\",t)},s}return r(t,u),o(t,[{key:\"ScaleValue\",value:function(u){return\"log\"===this.opts.scale?this.logsign*Math.exp(Math.log(this.logmin)+(Math.log(this.logmax)-Math.log(this.logmin))*u/100):u}},{key:\"InverseScaleValue\",value:function(u){return\"log\"===this.opts.scale?100*(Math.log(u*this.logsign)-Math.log(this.logmin))/(Math.log(this.logmax)-Math.log(this.logmin)):u}},{key:\"SetValue\",value:function(u){this.userIsModifying||(this.valueComponent.innerHTML=u.toString(),this.input.value=this.InverseScaleValue(u))}},{key:\"GetValue\",value:function(){return this.input.value}}]),t}(s);t.default=A,u.exports=t.default},function(u,t,e){var n=e(33);\"string\"==typeof n&&(n=[[u.i,n,\"\"]]);var i={};i.transform=void 0;e(3)(n,i);n.locals&&(u.exports=n.locals)},function(u,t,e){t=u.exports=e(2)(void 0),t.push([u.i,\"input[type=range].guify-range {\\n  -webkit-appearance: none;\\n  width: 100%;\\n  margin: 0px 0; }\\n\\ninput[type=range].guify-range:focus {\\n  outline: none; }\\n\\ninput[type=range].guify-range::-webkit-slider-runnable-track {\\n  width: 100%;\\n  height: 20px;\\n  cursor: ew-resize;\\n  background: #363636; }\\n\\ninput[type=range].guify-range::-webkit-slider-thumb {\\n  height: 20px;\\n  width: 10px;\\n  background: #707070;\\n  cursor: ew-resize;\\n  -webkit-appearance: none;\\n  margin-top: 0px; }\\n\\ninput[type=range].guify-range:focus::-webkit-slider-runnable-track {\\n  background: #4c4c4c;\\n  outline: none; }\\n\\ninput[type=range].guify-range::-moz-range-track {\\n  width: 100%;\\n  height: 20px;\\n  cursor: ew-resize;\\n  background: #363636; }\\n\\ninput[type=range].guify-range::-moz-range-thumb {\\n  height: 20px;\\n  width: 10px;\\n  background: #707070;\\n  cursor: ew-resize; }\\n\\ninput[type=range].guify-range::-ms-track {\\n  width: 100%;\\n  height: 20px;\\n  cursor: ew-resize;\\n  background: transparent;\\n  border-color: transparent;\\n  color: transparent; }\\n\\ninput[type=range].guify-range::-ms-fill-lower {\\n  background: #363636; }\\n\\ninput[type=range].guify-range::-ms-fill-upper {\\n  background: #363636; }\\n\\ninput[type=range].guify-range::-ms-thumb {\\n  width: 10px;\\n  border-radius: 0px;\\n  background: #707070;\\n  cursor: ew-resize;\\n  height: 20px; }\\n\\ninput[type=range].guify-range:focus::-ms-fill-lower {\\n  background: #4c4c4c;\\n  outline: none; }\\n\\ninput[type=range].guify-range:focus::-ms-fill-upper {\\n  background: #4c4c4c;\\n  outline: none; }\\n\",\"\"])},function(u,t,e){!function(e){\"use strict\";function n(u){return\"number\"==typeof u&&!isNaN(u)||!!(u=(u||\"\").toString().trim())&&!isNaN(u)}void 0!==u&&u.exports&&(t=u.exports=n),t.isNumeric=n}()},function(u,t,e){\"use strict\";function n(u,t){if(!(u instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function i(u,t){if(!u)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?u:t}function r(u,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);u.prototype=Object.create(t&&t.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(u,t):u.__proto__=t)}Object.defineProperty(t,\"__esModule\",{value:!0});var o=e(36),a=(function(u){u&&u.__esModule}(o),e(4)),s=e(0),l=function(u){function t(u,r,o,a){n(this,t);var l=i(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));l.opts=r;var c=e(1)(u,r.label);e(5)(c,\"\",o);var A=c.appendChild(document.createElement(\"button\"));return A.className=\"guify-button\",A.onfocus=function(){s(A,{outline:\"none\"})},A.textContent=r.label,s(A,{position:\"absolute\",textAlign:\"center\",height:\"20px\",width:\"62%\",border:\"none\",cursor:\"pointer\",right:0,fontFamily:\"inherit\"}),A.addEventListener(\"click\",r.action),l}return r(t,u),t}(a);t.default=l,u.exports=t.default},function(u,t,e){var n=e(37);\"string\"==typeof n&&(n=[[u.i,n,\"\"]]);var i={};i.transform=void 0;e(3)(n,i);n.locals&&(u.exports=n.locals)},function(u,t,e){t=u.exports=e(2)(void 0),t.push([u.i,\".guify-button {\\n  box-sizing: border-box !important;\\n  color: #a1a1a1;\\n  background-color: #363636; }\\n\\n.guify-button:hover {\\n  color: #a1a1a1;\\n  background-color: #4c4c4c; }\\n\\n.guify-button:active {\\n  color: #363636;\\n  background-color: #a1a1a1; }\\n\\n.guify-button:focus {\\n  color: #a1a1a1;\\n  background-color: #4c4c4c; }\\n\",\"\"])},function(u,t,e){\"use strict\";function n(u,t){if(!(u instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function i(u,t){if(!u)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?u:t}function r(u,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);u.prototype=Object.create(t&&t.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(u,t):u.__proto__=t)}Object.defineProperty(t,\"__esModule\",{value:!0});var o=function(){function u(u,t){for(var e=0;e<t.length;e++){var n=t[e];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(u,n.key,n)}}return function(t,e,n){return e&&u(t.prototype,e),n&&u(t,n),t}}(),a=e(39),s=(function(u){u&&u.__esModule}(a),e(4)),l=(e(0),function(u){function t(u,r,o,a){n(this,t);var s=i(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));s.opts=r;var l=e(1)(u,r.label);e(5)(l,r.label,o),s.input=l.appendChild(document.createElement(\"input\")),s.input.id=\"checkbox-\"+r.label+a,s.input.type=\"checkbox\",s.input.checked=r.initial,s.input.className=\"guify-checkbox\",r.label&&s.input.setAttribute(\"aria-label\",r.label);var c=l.appendChild(document.createElement(\"label\"));return c.htmlFor=\"checkbox-\"+r.label+a,c.className=\"guify-checkbox\",setTimeout(function(){s.emit(\"initialized\",s.input.checked)}),s.input.onchange=function(u){s.emit(\"input\",u.target.checked)},s}return r(t,u),o(t,[{key:\"SetValue\",value:function(u){this.input.checked=u}},{key:\"GetValue\",value:function(){return this.input.checked}}]),t}(s));t.default=l,u.exports=t.default},function(u,t,e){var n=e(40);\"string\"==typeof n&&(n=[[u.i,n,\"\"]]);var i={};i.transform=void 0;e(3)(n,i);n.locals&&(u.exports=n.locals)},function(u,t,e){t=u.exports=e(2)(void 0),t.push([u.i,'input[type=checkbox].guify-checkbox {\\n  appearance: none;\\n  -moz-appearance: none;\\n  -webkit-appearance: none;\\n  margin: 0;\\n  cursor: pointer; }\\n\\ninput[type=checkbox].guify-checkbox + label:before {\\n  content: \"\";\\n  display: inline-block;\\n  width: 18px;\\n  height: 18px;\\n  padding: 0px;\\n  vertical-align: middle;\\n  margin-right: 8px;\\n  margin-top: 1px;\\n  background-color: #363636;\\n  border-radius: 0px;\\n  cursor: pointer; }\\n\\ninput[type=checkbox].guify-checkbox:focus + label:before {\\n  background: #4c4c4c; }\\n\\ninput[type=checkbox]:checked.guify-checkbox + label:before {\\n  width: 10px;\\n  height: 10px;\\n  background-color: #707070;\\n  border: solid 4px #363636;\\n  cursor: pointer;\\n  box-sizing: content-box;\\n  -moz-box-sizing: content-box;\\n  -webkit-box-sizing: content-box; }\\n',\"\"])},function(u,t,e){\"use strict\";function n(u,t){if(!(u instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function i(u,t){if(!u)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?u:t}function r(u,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);u.prototype=Object.create(t&&t.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(u,t):u.__proto__=t)}Object.defineProperty(t,\"__esModule\",{value:!0});var o=function(){function u(u,t){for(var e=0;e<t.length;e++){var n=t[e];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(u,n.key,n)}}return function(t,e,n){return e&&u(t.prototype,e),n&&u(t,n),t}}(),a=e(42),s=(function(u){u&&u.__esModule}(a),e(4)),l=function(u){function t(u,r,o,a){n(this,t);var s=i(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));s.opts=r;var l,c,A,f,E,p,h,C;if(c=e(1)(u,r.label),e(5)(c,r.label,o),s.input=document.createElement(\"select\"),s.input.className=\"guify-select-dropdown\",r.label&&s.input.setAttribute(\"aria-label\",r.label),A=document.createElement(\"span\"),A.className=\"guify-select-triangle guify-select-triangle--down\",f=document.createElement(\"span\"),f.className=\"guify-select-triangle guify-select-triangle--up\",c.appendChild(A),c.appendChild(f),Array.isArray(r.options))for(l=0;l<r.options.length;l++)p=r.options[l],h=document.createElement(\"option\"),h.value=h.textContent=p,r.initial===p&&(h.selected=\"selected\"),s.input.appendChild(h);else for(C=Object.keys(r.options),l=0;l<C.length;l++)E=C[l],h=document.createElement(\"option\"),h.value=E,r.initial===E&&(h.selected=\"selected\"),h.textContent=r.options[E],s.input.appendChild(h);return c.appendChild(s.input),s.input.onchange=function(u){s.emit(\"input\",u.target.value)},s}return r(t,u),o(t,[{key:\"SetValue\",value:function(u){this.input.value=u}},{key:\"GetValue\",value:function(){return this.input.value}}]),t}(s);t.default=l,u.exports=t.default},function(u,t,e){var n=e(43);\"string\"==typeof n&&(n=[[u.i,n,\"\"]]);var i={};i.transform=void 0;e(3)(n,i);n.locals&&(u.exports=n.locals)},function(u,t,e){t=u.exports=e(2)(void 0),t.push([u.i,\".guify-select-dropdown {\\n  display: inline-block;\\n  position: absolute;\\n  width: 62%;\\n  padding-left: 1.5%;\\n  height: 20px;\\n  border: none;\\n  border-radius: 0;\\n  outline: none;\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  -o-appearance: none;\\n  appearance: none;\\n  font-family: inherit;\\n  background-color: #363636;\\n  color: #a1a1a1;\\n  box-sizing: border-box !important;\\n  -moz-box-sizing: border-box !important;\\n  -webkit-box-sizing: border-box !important; }\\n\\n.guify-select-dropdown:focus {\\n  background-color: #4c4c4c; }\\n\\n.guify-select-dropdown::-ms-expand {\\n  display: none; }\\n\\n.guify-select-triangle {\\n  content: ' ';\\n  border-right: 3px solid transparent;\\n  border-left: 3px solid transparent;\\n  line-height: 20px;\\n  position: absolute;\\n  right: 2.5%;\\n  z-index: 1; }\\n\\n.guify-select-triangle--down {\\n  top: 11px;\\n  border-top: 5px solid #a1a1a1;\\n  border-bottom: 0px transparent; }\\n\\n.guify-select-triangle--up {\\n  top: 4px;\\n  border-bottom: 5px solid #a1a1a1;\\n  border-top: 0px transparent; }\\n\",\"\"])},function(u,t,e){\"use strict\";function n(u,t){if(!(u instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function i(u,t){if(!u)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?u:t}function r(u,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);u.prototype=Object.create(t&&t.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(u,t):u.__proto__=t)}Object.defineProperty(t,\"__esModule\",{value:!0});var o=function(){function u(u,t){for(var e=0;e<t.length;e++){var n=t[e];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(u,n.key,n)}}return function(t,e,n){return e&&u(t.prototype,e),n&&u(t,n),t}}(),a=e(4),s=e(0),l=function(u){function t(u,r,o,a){n(this,t);var l=i(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));l.opts=r;var c=e(1)(u,r.label);return e(5)(c,r.label,o),l.input=c.appendChild(document.createElement(\"input\")),l.input.type=\"text\",l.input.className=\"guify-text\",r.initial&&(l.input.value=r.initial),r.label&&l.input.setAttribute(\"aria-label\",r.label),l.input.onfocus=function(){s(l.input,{outline:\"none\"})},s(l.input,{position:\"absolute\",paddingLeft:\"6px\",height:\"20px\",width:\"62%\",border:\"none\",background:o.background2,color:o.text2,fontFamily:\"inherit\",\"box-sizing\":\"border-box\",\"-moz-box-sizing\":\"border-box\",\"-webkit-box-sizing\":\"border-box\",resize:\"vertical\"}),setTimeout(function(){l.emit(\"initialized\",l.input.value)}),l.input.oninput=function(u){l.emit(\"input\",u.target.value)},l}return r(t,u),o(t,[{key:\"SetValue\",value:function(u){this.input.value=u}},{key:\"GetValue\",value:function(){return this.input.value}}]),t}(a);t.default=l,u.exports=t.default},function(u,t,e){\"use strict\";function n(u,t){if(!(u instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function i(u,t){if(!u)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?u:t}function r(u,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);u.prototype=Object.create(t&&t.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(u,t):u.__proto__=t)}Object.defineProperty(t,\"__esModule\",{value:!0});var o=function(){function u(u,t){for(var e=0;e<t.length;e++){var n=t[e];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(u,n.key,n)}}return function(t,e,n){return e&&u(t.prototype,e),n&&u(t,n),t}}(),a=e(46),s=(function(u){u&&u.__esModule}(a),e(4)),l=e(48),c=e(0),A=e(7),f=function(u){function t(u,r,o,a){n(this,t);var s=i(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));s.opts=r,r.format=r.format||\"rgb\",r.initial=r.initial||\"#123456\";var f=e(1)(u,r.label);e(5)(f,r.label,o);var E=f.appendChild(document.createElement(\"span\"));E.className=\"guify-color-\"+a;var p=e(6)(f,\"\",o,\"46%\");E.onmouseover=function(){s.picker.$el.style.display=\"\"};var h=r.initial;switch(r.format){case\"rgb\":case\"hex\":h=A(h).toHexString();break;case\"array\":h=A.fromRatio({r:h[0],g:h[1],b:h[2]}).toHexString()}return s.picker=new l({el:E,color:h,background:o.background1,width:125,height:100}),c(s.picker.$el,{marginTop:\"20px\",display:\"none\",position:\"absolute\"}),c(E,{position:\"relative\",display:\"inline-block\",width:\"12.5%\",height:\"20px\",backgroundColor:s.picker.getHexString()}),E.onmouseout=function(u){s.picker.$el.style.display=\"none\"},setTimeout(function(){s.emit(\"initialized\",h)}),s.picker.onChange(function(u){p.innerHTML=s.Format(u),c(E,{backgroundColor:u}),s.emit(\"input\",s.Format(u))}),s}return r(t,u),o(t,[{key:\"Format\",value:function(u){switch(this.opts.format){case\"rgb\":return A(u).toRgbString();case\"hex\":return A(u).toHexString();case\"array\":var t=A(u).toRgb();return[t.r/255,t.g/255,t.b/255].map(function(u){return u.toFixed(2)});default:return u}}},{key:\"SetValue\",value:function(u){this.picker.setColor(u)}},{key:\"GetValue\",value:function(){return this.Format(this.picker.getColor())}}]),t}(s);t.default=f,u.exports=t.default},function(u,t,e){var n=e(47);\"string\"==typeof n&&(n=[[u.i,n,\"\"]]);var i={};i.transform=void 0;e(3)(n,i);n.locals&&(u.exports=n.locals)},function(u,t,e){t=u.exports=e(2)(void 0),t.push([u.i,\".Scp {\\n  width: 125px;\\n  height: 100px;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  position: relative;\\n  z-index: 1000;\\n  cursor: pointer; }\\n\\n.Scp-saturation {\\n  position: relative;\\n  width: calc(100% - 25px);\\n  height: 100%;\\n  background: linear-gradient(to right, #fff 0%, #f00 100%);\\n  float: left;\\n  margin-right: 5px; }\\n\\n.Scp-brightness {\\n  width: 100%;\\n  height: 100%;\\n  background: linear-gradient(to top, #000 0%, rgba(255, 255, 255, 0) 100%); }\\n\\n.Scp-sbSelector {\\n  border: 1px solid;\\n  position: absolute;\\n  width: 14px;\\n  height: 14px;\\n  background: #fff;\\n  border-radius: 10px;\\n  top: -7px;\\n  left: -7px;\\n  box-sizing: border-box;\\n  z-index: 10; }\\n\\n.Scp-hue {\\n  width: 20px;\\n  height: 100%;\\n  position: relative;\\n  float: left;\\n  background: linear-gradient(to bottom, #f00 0%, #f0f 17%, #00f 34%, #0ff 50%, #0f0 67%, #ff0 84%, #f00 100%); }\\n\\n.Scp-hSelector {\\n  position: absolute;\\n  background: #fff;\\n  border-bottom: 1px solid #000;\\n  right: -3px;\\n  width: 10px;\\n  height: 2px; }\\n\",\"\"])},function(u,t,e){\"use strict\";!function(){function t(u){return u=u||{},this.color=null,this.width=0,this.widthUnits=\"px\",this.height=0,this.heightUnits=\"px\",this.hue=0,this.position={x:0,y:0},this.huePosition=0,this.saturationWidth=0,this.hueHeight=0,this.maxHue=0,this.inputIsNumber=!1,this._onSaturationMouseDown=this._onSaturationMouseDown.bind(this),this._onSaturationMouseMove=this._onSaturationMouseMove.bind(this),this._onSaturationMouseUp=this._onSaturationMouseUp.bind(this),this._onHueMouseDown=this._onHueMouseDown.bind(this),this._onHueMouseMove=this._onHueMouseMove.bind(this),this._onHueMouseUp=this._onHueMouseUp.bind(this),this.$el=document.createElement(\"div\"),this.$el.className=\"Scp\",this.$el.innerHTML=['<div class=\"Scp-saturation\">','<div class=\"Scp-brightness\"></div>','<div class=\"Scp-sbSelector\"></div>',\"</div>\",'<div class=\"Scp-hue\">','<div class=\"Scp-hSelector\"></div>',\"</div>\"].join(\"\"),this.$saturation=this.$el.querySelector(\".Scp-saturation\"),this.$hue=this.$el.querySelector(\".Scp-hue\"),this.$sbSelector=this.$el.querySelector(\".Scp-sbSelector\"),this.$hSelector=this.$el.querySelector(\".Scp-hSelector\"),this.$saturation.addEventListener(\"mousedown\",this._onSaturationMouseDown),this.$saturation.addEventListener(\"touchstart\",this._onSaturationMouseDown),this.$hue.addEventListener(\"mousedown\",this._onHueMouseDown),this.$hue.addEventListener(\"touchstart\",this._onHueMouseDown),u.el&&this.appendTo(u.el),u.background&&this.setBackgroundColor(u.background),u.widthUnits&&(this.widthUnits=u.widthUnits),u.heightUnits&&(this.heightUnits=u.heightUnits),this.setSize(u.width||175,u.height||150),this.setColor(u.color),this}function n(u,t,e){return Math.min(Math.max(u,t),e)}function i(u){return u=0===u.type.indexOf(\"touch\")?u.touches[0]:u,{x:u.clientX,y:u.clientY}}function r(u){return u=\"#\"+(\"00000\"+(0|u).toString(16)).substr(-6)}var o=e(49),a=e(50),s=e(7),l=e(53);o(t.prototype),t.prototype.appendTo=function(u){return u.appendChild(this.$el),this},t.prototype.remove=function(){this._onSaturationMouseUp(),this._onHueMouseUp(),this.$saturation.removeEventListener(\"mousedown\",this._onSaturationMouseDown),this.$saturation.removeEventListener(\"touchstart\",this._onSaturationMouseDown),this.$hue.removeEventListener(\"mousedown\",this._onHueMouseDown),this.$hue.removeEventListener(\"touchstart\",this._onHueMouseDown),this.off(),this.$el.parentNode&&this.$el.parentNode.removeChild(this.$el)},t.prototype.setColor=function(u){a(u)?(this.inputIsNumber=!0,u=r(u)):this.inputIsNumber=!1,this.color=s(u);var t=this.color.toHsv();return isNaN(t.h)||(this.hue=t.h),this._moveSelectorTo(this.saturationWidth*t.s,(1-t.v)*this.hueHeight),this._moveHueTo((1-this.hue/360)*this.hueHeight),this._updateHue(),this},t.prototype.setSize=function(u,t){return this.width=u,this.height=t,this.$el.style.width=this.width+this.widthUnits,this.$el.style.height=this.height+this.heightUnits,this.saturationWidth=this.width-25,this.$saturation.style.width=this.saturationWidth+\"px\",this.hueHeight=this.height,this.maxHue=this.hueHeight-2,this},t.prototype.setBackgroundColor=function(u){return a(u)&&(u=r(u)),this.$el.style.padding=\"5px\",this.$el.style.background=s(u).toHexString(),this},t.prototype.setNoBackground=function(){this.$el.style.padding=\"0px\",this.$el.style.background=\"none\"},t.prototype.onChange=function(u){return this.on(\"update\",u),this.emit(\"update\",this.getHexString()),this},t.prototype.getColor=function(){return this.inputIsNumber?this.getHexNumber():this.color.toString()},t.prototype.getHexString=function(){return this.color.toHexString().toUpperCase()},t.prototype.getHexNumber=function(){return parseInt(this.color.toHex(),16)},t.prototype.getRGB=function(){return this.color.toRgb()},t.prototype.getHSV=function(){return this.color.toHsv()},t.prototype.isDark=function(){return this.color.isDark()},t.prototype.isLight=function(){return this.color.isLight()},t.prototype._moveSelectorTo=function(u,t){this.position.x=n(u,0,this.saturationWidth),this.position.y=n(t,0,this.hueHeight),l(this.$sbSelector,{x:this.position.x,y:this.position.y})},t.prototype._updateColorFromPosition=function(){this.color=s({h:this.hue,s:this.position.x/this.saturationWidth,v:1-this.position.y/this.hueHeight}),this._updateColor()},t.prototype._moveHueTo=function(u){this.huePosition=n(u,0,this.maxHue),l(this.$hSelector,{y:this.huePosition})},t.prototype._updateHueFromPosition=function(){var u=this.color.toHsv();this.hue=360*(1-this.huePosition/this.maxHue),this.color=s({h:this.hue,s:u.s,v:u.v}),this._updateHue()},t.prototype._updateHue=function(){var u=s({h:this.hue,s:1,v:1});this.$saturation.style.background=\"linear-gradient(to right, #fff, \"+u.toHexString()+\")\",this._updateColor()},t.prototype._updateColor=function(){this.$sbSelector.style.background=this.color.toHexString(),this.$sbSelector.style.borderColor=this.color.isDark()?\"#fff\":\"#000\",this.emit(\"update\",this.color.toHexString())},t.prototype._onSaturationMouseDown=function(u){var t=this.$saturation.getBoundingClientRect(),e=i(u).x,n=i(u).y;this._moveSelectorTo(e-t.left,n-t.top),this._updateColorFromPosition(),window.addEventListener(\"mouseup\",this._onSaturationMouseUp),window.addEventListener(\"touchend\",this._onSaturationMouseUp),window.addEventListener(\"mousemove\",this._onSaturationMouseMove),window.addEventListener(\"touchmove\",this._onSaturationMouseMove),u.preventDefault()},t.prototype._onSaturationMouseMove=function(u){var t=this.$saturation.getBoundingClientRect(),e=i(u).x,n=i(u).y;this._moveSelectorTo(e-t.left,n-t.top),this._updateColorFromPosition()},t.prototype._onSaturationMouseUp=function(){window.removeEventListener(\"mouseup\",this._onSaturationMouseUp),window.removeEventListener(\"touchend\",this._onSaturationMouseUp),window.removeEventListener(\"mousemove\",this._onSaturationMouseMove),window.removeEventListener(\"touchmove\",this._onSaturationMouseMove)},t.prototype._onHueMouseDown=function(u){var t=this.$hue.getBoundingClientRect(),e=i(u).y;this._moveHueTo(e-t.top),this._updateHueFromPosition(),window.addEventListener(\"mouseup\",this._onHueMouseUp),window.addEventListener(\"touchend\",this._onHueMouseUp),window.addEventListener(\"mousemove\",this._onHueMouseMove),window.addEventListener(\"touchmove\",this._onHueMouseMove),u.preventDefault()},t.prototype._onHueMouseMove=function(u){var t=this.$hue.getBoundingClientRect(),e=i(u).y;this._moveHueTo(e-t.top),this._updateHueFromPosition()},t.prototype._onHueMouseUp=function(){window.removeEventListener(\"mouseup\",this._onHueMouseUp),window.removeEventListener(\"touchend\",this._onHueMouseUp),window.removeEventListener(\"mousemove\",this._onHueMouseMove),window.removeEventListener(\"touchmove\",this._onHueMouseMove)},void 0!==u&&u.exports&&(u.exports=t)}()},function(u,t,e){function n(u){if(u)return i(u)}function i(u){for(var t in n.prototype)u[t]=n.prototype[t];return u}u.exports=n,n.prototype.on=n.prototype.addEventListener=function(u,t){return this._callbacks=this._callbacks||{},(this._callbacks[\"$\"+u]=this._callbacks[\"$\"+u]||[]).push(t),this},n.prototype.once=function(u,t){function e(){this.off(u,e),t.apply(this,arguments)}return e.fn=t,this.on(u,e),this},n.prototype.off=n.prototype.removeListener=n.prototype.removeAllListeners=n.prototype.removeEventListener=function(u,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var e=this._callbacks[\"$\"+u];if(!e)return this;if(1==arguments.length)return delete this._callbacks[\"$\"+u],this;for(var n,i=0;i<e.length;i++)if((n=e[i])===t||n.fn===t){e.splice(i,1);break}return this},n.prototype.emit=function(u){this._callbacks=this._callbacks||{};var t=[].slice.call(arguments,1),e=this._callbacks[\"$\"+u];if(e){e=e.slice(0);for(var n=0,i=e.length;n<i;++n)e[n].apply(this,t)}return this},n.prototype.listeners=function(u){return this._callbacks=this._callbacks||{},this._callbacks[\"$\"+u]||[]},n.prototype.hasListeners=function(u){return!!this.listeners(u).length}},function(u,t,e){\"use strict\";/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\nvar n=e(51);u.exports=function(u){var t=n(u);if(\"number\"!==t&&\"string\"!==t)return!1;var e=+u;return e-e+1>=0&&\"\"!==u}},function(u,t,e){var n=e(52),i=Object.prototype.toString;u.exports=function(u){if(void 0===u)return\"undefined\";if(null===u)return\"null\";if(!0===u||!1===u||u instanceof Boolean)return\"boolean\";if(\"string\"==typeof u||u instanceof String)return\"string\";if(\"number\"==typeof u||u instanceof Number)return\"number\";if(\"function\"==typeof u||u instanceof Function)return\"function\";if(void 0!==Array.isArray&&Array.isArray(u))return\"array\";if(u instanceof RegExp)return\"regexp\";if(u instanceof Date)return\"date\";var t=i.call(u);return\"[object RegExp]\"===t?\"regexp\":\"[object Date]\"===t?\"date\":\"[object Arguments]\"===t?\"arguments\":\"[object Error]\"===t?\"error\":n(u)?\"buffer\":\"[object Set]\"===t?\"set\":\"[object WeakSet]\"===t?\"weakset\":\"[object Map]\"===t?\"map\":\"[object WeakMap]\"===t?\"weakmap\":\"[object Symbol]\"===t?\"symbol\":\"[object Int8Array]\"===t?\"int8array\":\"[object Uint8Array]\"===t?\"uint8array\":\"[object Uint8ClampedArray]\"===t?\"uint8clampedarray\":\"[object Int16Array]\"===t?\"int16array\":\"[object Uint16Array]\"===t?\"uint16array\":\"[object Int32Array]\"===t?\"int32array\":\"[object Uint32Array]\"===t?\"uint32array\":\"[object Float32Array]\"===t?\"float32array\":\"[object Float64Array]\"===t?\"float64array\":\"object\"}},function(u,t){function e(u){return!!u.constructor&&\"function\"==typeof u.constructor.isBuffer&&u.constructor.isBuffer(u)}function n(u){return\"function\"==typeof u.readFloatLE&&\"function\"==typeof u.slice&&e(u.slice(0,0))}/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nu.exports=function(u){return null!=u&&(e(u)||n(u)||!!u._isBuffer)}},function(u,t,e){\"use strict\";function n(u,t){var e,n,i,r=[];a(t);for(e in t)E.call(t,e)&&(n=t[e],E.call(A.transform,e)?(i=A.transform[e],c(n)&&(n=n.join(i.separator)),r.push(e+\"(\"+f(n,i.defaultUnit,i.separator)+\")\")):E.call(A,e)?(i=A[e],c(n)&&(n=n.join(i.separator)),u.style[l(e)]=f(n,i.defaultUnit,i.separator)):console.warn(\"dom-transform: this property (`\"+e+\"`) is not supported.\"));u.style[p]=r.join(\" \")}function i(u,t){var e=u.style;if(\"string\"==typeof t)return E.call(A.transform,t)?e[p]:e[l(t)];t||(t=s());var n={};return t.forEach(function(u){n[u]=e[l(u)]}),n}function r(u,t){var e=u.style;if(\"string\"==typeof t)return void(e[l(t)]=null);t||(t=s()),t.forEach(function(u){e[l(u)]=null})}function o(){return p.length>0}function a(u){var t;for(t in u)E.call(h,t)&&(u[h[t]]=u[t],delete u[t])}function s(){return Object.keys(A).map(function(u){return u})}var l=e(54),c=e(55),A=e(56),f=e(57),E=Object.prototype.hasOwnProperty,p=l(\"transform\"),h={x:\"translateX\",y:\"translateY\",z:\"translateZ\",origin:\"transformOrigin\"};t=u.exports=n,t.get=i,t.reset=r,t.isSupported=o},function(u,t){function e(u){if(u=u.replace(/-([a-z])/g,function(u,t){return t.toUpperCase()}),void 0!==r[u])return u;for(var t=u.charAt(0).toUpperCase()+u.slice(1),e=o.length;e--;){var n=o[e]+t;if(void 0!==r[n])return n}return u}function n(u){return u in s?s[u]:s[u]=e(u)}function i(u){return u=e(u),a.test(u)&&(u=\"-\"+u.replace(a,\"-$1\"),a.lastIndex=0),u.toLowerCase()}var r=\"undefined\"!=typeof document?document.createElement(\"p\").style:{},o=[\"O\",\"ms\",\"Moz\",\"Webkit\"],a=/([A-Z])/g,s={};u.exports=n,u.exports.dash=i},function(u,t){var e=Array.isArray,n=Object.prototype.toString;u.exports=e||function(u){return!!u&&\"[object Array]\"==n.call(u)}},function(u,t,e){\"use strict\";u.exports={transform:{translate:{defaultUnit:\"px\"},translate3d:{defaultUnit:\"px\"},translateX:{defaultUnit:\"px\"},translateY:{defaultUnit:\"px\"},translateZ:{defaultUnit:\"px\"},scale:{defaultUnit:\"\"},scale3d:{defaultUnit:\"\"},scaleX:{defaultUnit:\"\"},scaleY:{defaultUnit:\"\"},scaleZ:{defaultUnit:\"\"},rotate:{defaultUnit:\"deg\"},rotate3d:{defaultUnit:\"\"},rotateX:{defaultUnit:\"deg\"},rotateY:{defaultUnit:\"deg\"},rotateZ:{defaultUnit:\"deg\"},skew:{defaultUnit:\"deg\"},skewX:{defaultUnit:\"deg\"},skewY:{defaultUnit:\"deg\"},perspective:{defaultUnit:\"px\"},matrix:{defaultUnit:\"\"},matrix3d:{defaultUnit:\"\"}},transformOrigin:{defaultUnit:\"px\",separator:\" \"}}},function(u,t,e){\"use strict\";var n=e(58),i=/^-?\\d+(\\.\\d+)?$/;u.exports=function(u,t,e){if(e=e||\",\",\"number\"==typeof u)return\"\"+u+t;var r=new RegExp(e,\"g\");return u.split(r.test(u)?e:\" \").map(function(u){return u=n(u),i.test(u)&&(u+=t),u}).join(e)}},function(u,t){function e(u){return u.replace(/^\\s*|\\s*$/g,\"\")}t=u.exports=e,t.left=function(u){return u.replace(/^\\s*/,\"\")},t.right=function(u){return u.replace(/\\s*$/,\"\")}},function(u,t,e){\"use strict\";function n(u,t){if(!(u instanceof t))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(t,\"__esModule\",{value:!0});var i=function(){function u(u,t){for(var e=0;e<t.length;e++){var n=t[e];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(u,n.key,n)}}return function(t,e,n){return e&&u(t.prototype,e),n&&u(t,n),t}}(),r=e(60),o=(function(u){u&&u.__esModule}(r),e(0)),a=function(){function u(t,i,r,a){var s=this;n(this,u),this.opts=i;var l=e(1)(t,i.label);l.classList.add(\"guify-folder\"),l.setAttribute(\"role\",\"button\"),l.setAttribute(\"tabIndex\",\"0\"),o(l,{color:r.text1}),this.arrow=l.appendChild(document.createElement(\"div\")),this.arrow.innerHTML=\"&#9662;\",o(this.arrow,{width:\"5%\"}),this.label=l.appendChild(document.createElement(\"div\")),this.label.innerHTML=i.label,l.onclick=function(){s.Toggle()},l.addEventListener(\"keydown\",function(u){13!==u.which&&32!==u.which||s.Toggle()}),this.folderContainer=t.appendChild(document.createElement(\"div\")),this.folderContainer.classList.add(\"guify-folder-contents\"),this.open=this.opts.open||!1,this.SetOpen(this.opts.open||!1)}return i(u,[{key:\"Toggle\",value:function(){this.open=!this.open,this.SetOpen(this.open)}},{key:\"SetOpen\",value:function(u){this.open=u,u?(this.folderContainer.style.display=\"block\",this.arrow.innerHTML=\"&#9662;\"):(this.folderContainer.style.display=\"none\",this.arrow.innerHTML=\"&#9656;\")}}]),u}();t.default=a,u.exports=t.default},function(u,t,e){var n=e(61);\"string\"==typeof n&&(n=[[u.i,n,\"\"]]);var i={};i.transform=void 0;e(3)(n,i);n.locals&&(u.exports=n.locals)},function(u,t,e){t=u.exports=e(2)(void 0),t.push([u.i,\"div.guify-folder {\\n  cursor: pointer;\\n  padding-left: 2px;\\n  margin-bottom: 5px; }\\n  div.guify-folder div {\\n    display: inline-block;\\n    vertical-align: sub;\\n    line-height: 25px; }\\n  div.guify-folder:hover, div.guify-folder:focus {\\n    background-color: #4c4c4c;\\n    outline: none; }\\n\\ndiv.guify-folder-contents {\\n  display: block;\\n  box-sizing: border-box;\\n  padding-left: 14px; }\\n\",\"\"])},function(u,t,e){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(u,t,e){var i=u.appendChild(document.createElement(\"div\"));return i.innerHTML=t,n(i,{width:\"100%\",textAlign:\"center\",color:e.text2,height:\"20px\",marginBottom:\"4px\"}),i};var n=e(0);u.exports=t.default}])});","var div = null\nvar prefixes = [ 'Webkit', 'Moz', 'O', 'ms' ]\n\nmodule.exports = function prefixStyle (prop) {\n  // re-use a dummy div\n  if (!div) {\n    div = document.createElement('div')\n  }\n\n  var style = div.style\n\n  // prop exists without prefix\n  if (prop in style) {\n    return prop\n  }\n\n  // borderRadius -> BorderRadius\n  var titleCase = prop.charAt(0).toUpperCase() + prop.slice(1)\n\n  // find the vendor-prefixed prop\n  for (var i = prefixes.length; i >= 0; i--) {\n    var name = prefixes[i] + titleCase\n    // e.g. WebkitBorderRadius or webkitBorderRadius\n    if (name in style) {\n      return name\n    }\n  }\n\n  return false\n}\n","\nvar space = require('to-space-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toCamelCase\n\n/**\n * Convert a `string` to camel case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toCamelCase(string) {\n  return space(string).replace(/\\s(\\w)/g, function (matches, letter) {\n    return letter.toUpperCase()\n  })\n}\n","\n/**\n * Export.\n */\n\nmodule.exports = toNoCase\n\n/**\n * Test whether a string is camel-case.\n */\n\nvar hasSpace = /\\s/\nvar hasSeparator = /(_|-|\\.|:)/\nvar hasCamel = /([a-z][A-Z]|[A-Z][a-z])/\n\n/**\n * Remove any starting case from a `string`, like camel or snake, but keep\n * spaces and punctuation that may be important otherwise.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toNoCase(string) {\n  if (hasSpace.test(string)) return string.toLowerCase()\n  if (hasSeparator.test(string)) return (unseparate(string) || string).toLowerCase()\n  if (hasCamel.test(string)) return uncamelize(string).toLowerCase()\n  return string.toLowerCase()\n}\n\n/**\n * Separator splitter.\n */\n\nvar separatorSplitter = /[\\W_]+(.|$)/g\n\n/**\n * Un-separate a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction unseparate(string) {\n  return string.replace(separatorSplitter, function (m, next) {\n    return next ? ' ' + next : ''\n  })\n}\n\n/**\n * Camelcase splitter.\n */\n\nvar camelSplitter = /(.)([A-Z]+)/g\n\n/**\n * Un-camelcase a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction uncamelize(string) {\n  return string.replace(camelSplitter, function (m, previous, uppers) {\n    return previous + ' ' + uppers.toLowerCase().split('').join(' ')\n  })\n}\n","\nvar clean = require('to-no-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toSpaceCase\n\n/**\n * Convert a `string` to space case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toSpaceCase(string) {\n  return clean(string).replace(/[\\W_]+(.|$)/g, function (matches, match) {\n    return match ? ' ' + match : ''\n  }).trim()\n}\n","import * as CellAuto from \"./vendor/cellauto.js\";\nimport { Worlds } from \"./worlds.js\";\nlet css = require(\"dom-css\");\n\nexport class Dust {\n    constructor(container, initFinishedCallback) {\n        this.container = container;\n\n        let worldNames = Object.keys(Worlds);\n        this.worldOptions = {\n            name: worldNames[worldNames.length * Math.random() << 0], // Random startup world\n            //width: 128, // Can force a width/height here\n            //height: 128,\n        }\n\n        // Create the app and put its canvas into `container`\n        this.app = new PIXI.Application(\n            {\n                antialias: false, \n                transparent: false,\n                resolution: 1,\n                width: this.container.offsetWidth,\n                height: this.container.offsetHeight,\n                //powerPreference: \"high-performance\"\n                autoResize: true,\n            }\n        );\n        this.container.appendChild(this.app.view);\n\n        // Start the update loop\n        this.app.ticker.add((delta) => {\n            this.OnUpdate(delta);\n        });\n\n        this.framecounter = new FrameCounter(1, null);\n\n        // Stop application and wait for setup to finish\n        this.app.stop();\n\n        // Load resources needed for the program to run\n        PIXI.loader\n            .add('fragShader', '../resources/dust.frag')\n            .load((loader, res) => {\n                // Loading has finished\n                this.loadedResources = res;\n                this.Setup();\n                this.app.start();\n                initFinishedCallback();\n            });\n    }\n\n    /**\n     * Reusable method for setting up the simulation from `this.worldOptions`.\n     * Also works as a reset function if you call this without changing\n     * `this.worldOptions.name` beforehand.\n     */\n    Setup() {\n\n        // Create the world from the string\n        try {\n            this.world = Worlds[this.worldOptions.name].call(this, this.worldOptions.width, this.worldOptions.height);\n        } catch (err) {\n            throw \"World with the name \" + this.worldOptions.name + \" does not exist!\";\n        }\n        this.framecounter.frameFrequency = this.world.recommendedFrameFrequency || 1;\n\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n        this.app.stage.scale = new PIXI.Point(this.container.offsetWidth / this.world.width, this.container.offsetHeight / this.world.height);\n\n        //this.app.renderer.view.style.border = \"1px dashed green\";\n        this.app.renderer.view.style.width = \"100%\";\n        this.app.renderer.view.style.height = \"100%\";\n        this.app.renderer.backgroundColor = 0xffffff;\n\n        // Create a sprite from a blank canvas\n        this.textureCanvas = document.createElement('canvas');\n        this.textureCanvas.width = this.world.width;\n        this.textureCanvas.height = this.world.height;\n        this.textureCtx = this.textureCanvas.getContext('2d'); // Used later to update texture\n\n        this.baseTexture = new PIXI.BaseTexture.fromCanvas(this.textureCanvas);\n        this.sprite = new PIXI.Sprite(\n            new PIXI.Texture(this.baseTexture, new PIXI.Rectangle(0, 0, this.world.width, this.world.height))\n        );\n\n        // Center the sprite\n        this.sprite.x = this.world.width / 2;\n        this.sprite.y = this.world.height / 2;\n        this.sprite.anchor.set(0.5);\n\n        // Create the shader for the sprite\n        this.filter = new PIXI.Filter(null, this.loadedResources.fragShader.data);\n        this.sprite.filters = [this.filter];\n\n        this.app.stage.removeChildren(); // Remove any attached children (for case where changing presets)\n        this.app.stage.addChild(this.sprite);\n\n        // Update the texture from the initial state of the world\n        this.UpdateTexture();\n    }\n\n    /**\n     * Called every frame. Continues indefinitely after being called once.\n     */\n    OnUpdate(delta) {\n        let noskip = this.framecounter.IncrementFrame();\n        if(noskip) {\n            this.filter.uniforms.time += delta;\n            this.world.step();\n            this.UpdateTexture();\n            this.app.render();\n        }\n\n    }\n\n    /**\n     * Updates the texture representing the world.\n     * Writes cell colors to the texture canvas and updates `baseTexture` from it,\n     * which makes Pixi update the sprite.\n     */\n    UpdateTexture() {\n        \n        let index = 0;\n        let ctx = this.textureCtx;\t\t\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(0, 0, this.textureCanvas.width, this.textureCanvas.height);\n        let pix = ctx.createImageData(this.textureCanvas.width, this.textureCanvas.height);\t\t\n        for (let y = 0; y < this.textureCanvas.height; y++) {\t\t\t\n            for (let x = 0; x < this.textureCanvas.width; x++) {\n                let paletteIndex = this.world.grid[y][x].getColor();\n                let colorRGBA = this.world.palette[paletteIndex];\n                if(colorRGBA != null) {\n                    pix.data[index++] = colorRGBA[0];\t\t\t\t\n                    pix.data[index++] = colorRGBA[1];\t\t\t\t\n                    pix.data[index++] = colorRGBA[2];\t\t\t\t\n                    pix.data[index++] = colorRGBA[3];\t\n                } else {\n                    throw \"Palette index out of bounds: \" + paletteIndex;\n                }\n            }\t\t\n        } \t\t\n        ctx.putImageData(pix, 0, 0);\n\n        // Tell Pixi to update the texture referenced by this ctx.\n        this.baseTexture.update();\n\n    }\n\n}\n\n/**\n * Convenience class for restricting the refresh rate of the simulation.\n */\nclass FrameCounter {\n    constructor(frameFrequency, frameLimit = null) {\n        // The number of frames ingested\n        this.frameCount = 0;\n\n        // The number of frames allowed to run\n        this.passedFrames = 0;\n\n        // Frame will run every `frameFrequency` frames that pass\n        this.frameFrequency = frameFrequency;\n\n        // If set, class will stop allowing frames after `frameLimit` \n        // passedFrames have been allowed.\n        this.frameLimit = frameLimit;\n    }\n\n    /**\n     * Returns true once every `frameFrequency` times it is called.\n     */\n    IncrementFrame(){\n        this.frameCount += 1;\n        if(this.frameCount % this.frameFrequency == 0) {\n            // If we've reached the frame limit\n            if(this.frameLimit != null && this.passedFrames >= this.frameLimit)\n                return false;\n\n            this.frameCount = 0;\n            this.passedFrames += 1;\n            return true;\n        }\n        return false;\n    }\n}","import { Worlds } from \"./worlds.js\";\nlet guify = require(\"guify\");\n\nclass GUI {\n\n    Init(dust, container){\n\n        this.panel = new guify.GUI({\n            title: \"Dust\", \n            theme: \"dark\", \n            root: container,\n            width: 350,\n            barMode: \"above\",\n            align: \"right\",\n            opacity: \"0.95\",\n            useMenuBar: true\n        }, []);\n\n        this.panel.Register({\n            type: \"range\", label: \"Frame Frequency\",\n            min: 1, max: 30, step: 1,\n            object: dust.framecounter, property: \"frameFrequency\"\n        });\n\n        this.panel.Register({\n            type: \"select\", label: \"Preset\",\n            options: Object.getOwnPropertyNames(Worlds),\n            object: dust.worldOptions, property: \"name\",\n            onChange: () => dust.Setup()\n        });\n\n        this.panel.Register({\n            type: \"button\", label: \"Reset\",\n            action: () => dust.Setup()\n        });\n\n    }\n\n}\n\nexport let gui = new GUI();","import { Detector } from \"./utils/webgl-detect.js\";\nimport { Dust } from \"./dust.js\";\nimport { gui } from \"./gui.js\";\n\nlet Init = () => {\n    let container = document.getElementById(\"dust-container\");\n    if(!container) throw new Error(\"No #dust-container was found\");\n    \n    if ( !Detector.HasWebGL() ) {\n        //exit(\"WebGL is not supported on this browser.\");\n        console.log(\"WebGL is not supported on this browser.\");\n        container.innerHTML = Detector.GetErrorHTML();\n        container.classList.add(\"no-webgl\");\n    }\n    else {\n        let dust = new Dust(container, () => {\n            // Dust is now fully loaded\n            gui.Init(dust, container);\n        });\n    }\n}\n\nif (document.readyState === 'complete') {\n    Init();\n} else {\n    window.onload = () => {\n        Init();\n    }\n}","class Detector {\n\n    //http://stackoverflow.com/questions/11871077/proper-way-to-detect-webgl-support\n    static HasWebGL() {\n        if (!!window.WebGLRenderingContext) {\n            var canvas = document.createElement(\"canvas\"),\n                    names = [\"webgl\", \"experimental-webgl\", \"moz-webgl\", \"webkit-3d\"],\n                context = false;\n\n            for(var i=0;i<4;i++) {\n                try {\n                    context = canvas.getContext(names[i]);\n                    if (context && typeof context.getParameter == \"function\") {\n                        // WebGL is enabled\n                        return true;\n                    }\n                } catch(e) {}\n            }\n\n            // WebGL is supported, but disabled\n            return false;\n        }\n        // WebGL not supported\n        return false;\n    }\n\n    static GetErrorHTML(message = null){\n        if(message == null){\n            message = `Your graphics card does not seem to support \n                        <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\">WebGL</a>. <br>\n                        Find out how to get it <a href=\"http://get.webgl.org/\">here</a>.`;\n        }\n        return `\n        <div class=\"no-webgl-support\">\n        <p style=\"text-align: center;\">${message}</p>\n        </div>\n        `\n    }\n\n}\n\nexport { Detector };","function CellAutoCell(locX, locY) {\n\tthis.x = locX;\n\tthis.y = locY;\n\n\tthis.delays = [];\n}\n\nCellAutoCell.prototype.process = function(neighbors) {\n\treturn;\n};\nCellAutoCell.prototype.countSurroundingCellsWithValue = function(neighbors, value) {\n\tvar surrounding = 0;\n\tfor (var i = 0; i < neighbors.length; i++) {\n\t\tif (neighbors[i] !== null && neighbors[i][value]) {\n\t\t\tsurrounding++;\n\t\t}\n\t}\n\treturn surrounding;\n};\nCellAutoCell.prototype.delay = function(numSteps, fn) {\n\tthis.delays.push({ steps: numSteps, action: fn });\n};\n\nCellAutoCell.prototype.reset = function(neighbors) {\n\treturn;\n};\n\nCellAutoCell.prototype.getSurroundingCellsAverageValue = function(neighbors, value) {\n\tvar summed = 0.0;\n\tfor (var i = 0; i < neighbors.length; i++) {\n\t\tif (neighbors[i] !== null && (neighbors[i][value] || neighbors[i][value] === 0)) {\n\t\t\tsummed += neighbors[i][value];\n\t\t}\n\t}\n\treturn summed / neighbors.length;//cnt;\n};\nfunction CAWorld(options) {\n\n\tthis.width = 24;\n\tthis.height = 24;\n\tthis.options = options;\n\n\tthis.wrap = false;\n\n\tthis.TOPLEFT        = { index: 0, x: -1, y: -1 };\n\tthis.TOP            = { index: 1, x:  0, y: -1 };\n\tthis.TOPRIGHT       = { index: 2, x:  1, y: -1 };\n\tthis.LEFT           = { index: 3, x: -1, y:  0 };\n\tthis.RIGHT          = { index: 4, x:  1, y:  0 };\n\tthis.BOTTOMLEFT     = { index: 5, x: -1, y:  1 };\n\tthis.BOTTOM         = { index: 6, x:  0, y:  1 };\n\tthis.BOTTOMRIGHT    = { index: 7, x:  1, y:  1 };\n\t\n\tthis.randomGenerator = Math.random;\n\n\t// square tiles by default, eight sides\n\tvar neighborhood = [null, null, null, null, null, null, null, null];\n\n\tif (this.options.hexTiles) {\n\t\t// six sides\n\t\tneighborhood = [null, null, null, null, null, null];\n\t}\n\tthis.step = function() {\n\t\tvar y, x;\n\t\tfor (y=0; y<this.height; y++) {\n\t\t\tfor (x=0; x<this.width; x++) {\n\t\t\t\tthis.grid[y][x].reset();\n\t\t\t}\n\t\t}\n\n\t\t// bottom up, left to right processing\n\t\tfor (y=this.height-1; y>=0; y--) {\n\t\t\tfor (x=this.width-1; x>=0; x--) {\n\t\t\t\tthis.fillNeighbors(neighborhood, x, y);\n\t\t\t\tvar cell = this.grid[y][x];\n\t\t\t\tcell.process(neighborhood);\n\n\t\t\t\t// perform any delays\n\t\t\t\tfor (var i=0; i<cell.delays.length; i++) {\n\t\t\t\t\tcell.delays[i].steps--;\n\t\t\t\t\tif (cell.delays[i].steps <= 0) {\n\t\t\t\t\t\t// perform action and remove delay\n\t\t\t\t\t\tcell.delays[i].action(cell);\n\t\t\t\t\t\tcell.delays.splice(i, 1);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t//var NEIGHBORLOCS = [{x:-1, y:-1}, {x:0, y:-1}, {x:1, y:-1}, {x:-1, y:0}, {x:1, y:0},{x:-1, y:1}, {x:0, y:1}, {x:1, y:1}];\n\t// square tiles by default\n\tvar NEIGHBORLOCS = [\n\t\t{ diffX : function() { return -1; }, diffY: function() { return -1; }},  // top left\n\t\t{ diffX : function() { return 0; }, diffY: function() { return -1; }},  // top\n\t\t{ diffX : function() { return 1; }, diffY: function() { return -1; }},  // top right\n\t\t{ diffX : function() { return -1; }, diffY: function() { return 0; }},  // left\n\t\t{ diffX : function() { return 1; }, diffY: function() { return 0; }},  // right\n\t\t{ diffX : function() { return -1; }, diffY: function() { return 1; }},  // bottom left\n\t\t{ diffX : function() { return 0; }, diffY: function() { return 1; }},  // bottom\n\t\t{ diffX : function() { return 1; }, diffY: function() { return 1; }}  // bottom right\n\t];\n\tif (this.options.hexTiles) {\n\t\tif (this.options.flatTopped) {\n\t\t\t// flat topped hex map,  function requires column to be passed\n\t\t\tNEIGHBORLOCS = [\n\t\t\t\t{ diffX : function() { return -1; }, diffY: function(x) { return x%2 ? -1 : 0; }},  // top left\n\t\t\t\t{ diffX : function() { return 0; }, diffY: function() { return -1; }},  // top\n\t\t\t\t{ diffX : function() { return 1; }, diffY: function(x) { return x%2 ? -1 : 0; }},  // top right\n\t\t\t\t{ diffX : function() { return 1; }, diffY: function(x) { return x%2 ? 0 : 1; }},  // bottom right\n\t\t\t\t{ diffX : function() { return 0; }, diffY: function() { return 1; }},  // bottom\n\t\t\t\t{ diffX : function() { return -1; }, diffY: function(x) { return x%2 ? 0 : 1; }}  // bottom left\n\t\t\t];\n\t\t}\n\t\telse {\n\t\t\t// pointy topped hex map, function requires row to be passed\n\t\t\tNEIGHBORLOCS = [\n\t\t\t\t{ diffX : function(x, y) { return y%2 ? 0 : -1; }, diffY: function() { return -1; }},  // top left\n\t\t\t\t{ diffX : function(x, y) { return y%2 ? 1 : 0; }, diffY: function() { return -1; }},  // top right\n\t\t\t\t{ diffX : function() { return -1; }, diffY: function() { return 0; }},  // left\n\t\t\t\t{ diffX : function() { return 1; }, diffY: function() { return 0; }},  // right\n\t\t\t\t{ diffX : function(x, y) { return y%2 ? 0 : -1; }, diffY: function() { return 1; }},  // bottom left\n\t\t\t\t{ diffX : function(x, y) { return y%2 ? 1 : 0; }, diffY: function() { return 1; }}  // bottom right\n\t\t\t];\n\t\t}\n\n\t}\n\tthis.fillNeighbors = function(neighbors, x, y) {\n\t\tfor (var i=0; i<NEIGHBORLOCS.length; i++) {\n\t\t\tvar neighborX = x + NEIGHBORLOCS[i].diffX(x, y);\n\t\t\tvar neighborY = y + NEIGHBORLOCS[i].diffY(x, y);\n\t\t\tif (this.wrap) {\n\t\t\t\t// TODO: hex map support for wrapping\n\t\t\t\tneighborX = (neighborX + this.width) % this.width;\n\t\t\t\tneighborY = (neighborY + this.height) % this.height;\n\t\t\t}\n\t\t\tif (!this.wrap && (neighborX < 0 || neighborY < 0 || neighborX >= this.width || neighborY >= this.height)) {\n\t\t\t\tneighbors[i] = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tneighbors[i] = this.grid[neighborY][neighborX];\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.initialize = function(arrayTypeDist) {\n\n\t\t// sort the cell types by distribution\n\t\tarrayTypeDist.sort(function(a, b) {\n\t\t\treturn a.distribution > b.distribution ? 1 : -1;\n\t\t});\n\n\t\tvar totalDist = 0;\n\t\t// add all distributions together\n\t\tfor (var i=0; i<arrayTypeDist.length; i++) {\n\t\t\ttotalDist += arrayTypeDist[i].distribution;\n\t\t\tarrayTypeDist[i].distribution = totalDist;\n\t\t}\n\n\t\tthis.grid = [];\n\t\tfor (var y=0; y<this.height; y++) {\n\t\t\tthis.grid[y] = [];\n\t\t\tfor (var x=0; x<this.width; x++) {\n\t\t\t\tvar random = this.randomGenerator() * 100;\n\n\t\t\t\tfor (i=0; i<arrayTypeDist.length; i++) {\n\t\t\t\t\tif (random <= arrayTypeDist[i].distribution) {\n\t\t\t\t\t\tthis.grid[y][x] = new this.cellTypes[arrayTypeDist[i].name](x, y);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.cellTypes = {};\n\tthis.registerCellType = function(name, cellOptions, init) {\n\t\tthis.cellTypes[name] = function(x, y) {\n\t\t\tCellAutoCell.call(this, x, y);\n\n\t\t\tif (init) {\n\t\t\t\tinit.call(this, x, y);\n\t\t\t}\n\n\t\t\tif (cellOptions) {\n\t\t\t\tfor (var key in cellOptions) {\n\t\t\t\t\tif (typeof cellOptions[key] !== 'function') {\n\t\t\t\t\t\t// properties get instance\n\t\t\t\t\t\tif (typeof cellOptions[key] === 'object') {\n\t\t\t\t\t\t\t// objects must be cloned\n\t\t\t\t\t\t\tthis[key] = JSON.parse(JSON.stringify(cellOptions[key]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// primitive\n\t\t\t\t\t\t\tthis[key] = cellOptions[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis.cellTypes[name].prototype = Object.create(CellAutoCell.prototype);\n\t\tthis.cellTypes[name].prototype.constructor = this.cellTypes[name];\n\t\tthis.cellTypes[name].prototype.cellType = name;\n\n\t\tif (cellOptions) {\n\t\t\tfor (var key in cellOptions) {\n\t\t\t\tif (typeof cellOptions[key] === 'function') {\n\t\t\t\t\t// functions get prototype\n\t\t\t\t\tthis.cellTypes[name].prototype[key] = cellOptions[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// apply options\n\tif (options) {\n\t\tfor (var key in options) {\n\t\t\tthis[key] = options[key];\n\t\t}\n\t}\n\n}\n\nCAWorld.prototype.initializeFromGrid  = function(values, initGrid) {\n\n\tthis.grid = [];\n\tfor (var y=0; y<this.height; y++) {\n\t\tthis.grid[y] = [];\n\t\tfor (var x=0; x<this.width; x++) {\n\t\t\tfor (var i=0; i<values.length; i++) {\n\t\t\t\tif (values[i].gridValue === initGrid[y][x]) {\n\t\t\t\t\tthis.grid[y][x] = new this.cellTypes[values[i].name](x, y);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n};\n\nCAWorld.prototype.createGridFromValues = function(values, defaultValue) {\n\tvar newGrid = [];\n\n\tfor (var y=0; y<this.height; y++) {\n\t\tnewGrid[y] = [];\n\t\tfor (var x = 0; x < this.width; x++) {\n\t\t\tnewGrid[y][x] = defaultValue;\n\t\t\tvar cell = this.grid[y][x];\n\t\t\tfor (var i=0; i<values.length; i++) {\n\t\t\t\tif (cell.cellType == values[i].cellType && cell[values[i].hasProperty]) {\n\t\t\t\t\tnewGrid[y][x] = values[i].value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newGrid;\n};\n\n;(function() {\n  var CellAuto = {\n    World: CAWorld,\n    Cell: CellAutoCell\n  };\n\n  if (typeof define === 'function' && define.amd) {\n    define('CellAuto', function () {\n      return CellAuto;\n    });\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = CellAuto;\n  } else {\n    window.CellAuto = CellAuto;\n  }\n})();","import * as CellAuto from \"./vendor/cellauto.js\";\n\nexport let Worlds = {\n\n    /**\n     * Chooses a random elementary automata from a list.\n     */\n    RandomRule: function (width = 128, height = 128) {\n        let rules = [\n            18, 22, 26, 54, 60, 90, 94, 110, 126, 150\n        ];\n        let options = {\n            width: width,\n            height: height,\n            rule: rules[rules.length * Math.random() << 0], // Random rule from list\n            palette: [\n                [68, 36, 52, 255],\n                [255, 255, 255, 255]\n            ],\n            wrap: true\n        }\n        return Elementary(options);\n    },\n\n    /**\n     * Conway's Game of Life\n     * B3/S23\n     */\n    Life: function (width = 128, height = 128) {\n        let options = {\n            width: width,\n            height: height,\n            B: [3],\n            S: [2, 3],\n            palette: [\n                [68, 36, 52, 255],\n                [255, 255, 255, 255]\n            ],\n            recommendedFrameFrequency: 2,\n        }\n        return LifeLike(options);\n    },\n\n    /**\n     * Generates a maze-like structure.\n     * Based on rule B3/S1234 (Mazecetric).\n     */\n    Mazecetric: function(width = 96, height = 96) {\n        let options = {\n            width: width,\n            height: height,\n            B: [3],\n            S: [1, 2, 3, 4],\n            palette: [\n                [68, 36, 52, 255],\n                [255, 255, 255, 255]\n            ],\n            recommendedFrameFrequency: 5,\n        }\n        return LifeLike(options, (x, y) => {\n            // Distribution function\n            return Math.random() < 0.1;\n        });\n    },\n\n    /**\n     * B35678/S5678\n     */\n    Diamoeba: function(width = 96, height = 96) {\n        let options = {\n            width: width,\n            height: height,\n            B: [3, 5, 6, 7, 8],\n            S: [5, 6, 7, 8],\n            palette: [\n                [68, 36, 52, 255],\n                [255, 255, 255, 255]\n            ],\n            recommendedFrameFrequency: 3\n        }\n        return LifeLike(options, (x, y) => {\n            // Distribution function\n            return Math.random() < 0.2;\n        });\n    },\n\n    /**\n     * B4678/S35678\n     */\n    Anneal: function(width = 96, height = 96) {\n        let options = {\n            width: width,\n            height: height,\n            B: [4, 6, 7, 8],\n            S: [3, 5, 6, 7, 8],\n            palette: [\n                [68, 36, 52, 255],\n                [255, 255, 255, 255]\n            ],\n            recommendedFrameFrequency: 3\n        }\n        return LifeLike(options, (x, y) => {\n            // Distribution function\n            return Math.random() < 0.3;\n        });\n    },\n\n    /**\n     * CA that looks like lava.\n     * \n     * From https://sanojian.github.io/cellauto\n     */\n    Lava: function (width = 128, height = 128) {\n        // thanks to TheLastBanana on TIGSource\n\n        let world = new CellAuto.World({\n            width: width,\n            height: height,\n            wrap: true\n        });\n\n        world.palette = [\n            [34,10,21,255], [68,17,26,255], [123,16,16,255],\n            [190,45,16,255], [244,102,20,255], [254,212,97,255]\n        ];\n\n        let colors = [];\n        let index = 0;\n        for (; index < 18; ++index) { colors[index] = 1; }\n        for (; index < 22; ++index) { colors[index] = 0; }\n        for (; index < 25; ++index) { colors[index] = 1; }\n        for (; index < 27; ++index) { colors[index] = 2; }\n        for (; index < 29; ++index) { colors[index] = 3; }\n        for (; index < 32; ++index) { colors[index] = 2; }\n        for (; index < 35; ++index) { colors[index] = 0; }\n        for (; index < 36; ++index) { colors[index] = 2; }\n        for (; index < 38; ++index) { colors[index] = 4; }\n        for (; index < 42; ++index) { colors[index] = 5; }\n        for (; index < 44; ++index) { colors[index] = 4; }\n        for (; index < 46; ++index) { colors[index] = 2; }\n        for (; index < 56; ++index) { colors[index] = 1; }\n        for (; index < 64; ++index) { colors[index] = 0; }\n\n        world.registerCellType('lava', {\n            getColor: function () {\n                let v = this.value + 0.5\n                    + Math.sin(this.x / world.width * Math.PI) * 0.04\n                    + Math.sin(this.y / world.height * Math.PI) * 0.04\n                    - 0.05;\n                v = Math.min(1.0, Math.max(0.0, v));\n\n                return colors[Math.floor(colors.length * v)];\n            },\n            process: function (neighbors) {\n                if(this.droplet === true) {\n                    for (let i = 0; i < neighbors.length; i++) {\n                        if (neighbors[i] !== null && neighbors[i].value) {\n                            neighbors[i].value = 0.5 *this.value;\n                            neighbors[i].prev = 0.5 *this.prev;\n                        }\n                    }\n                    this.droplet = false;\n                    return true;\n                }\n                let avg = this.getSurroundingCellsAverageValue(neighbors, 'value');\n                this.next = 0.998 * (2 * avg - this.prev);\n\n                return true;\n            },\n            reset: function () {\n                if(Math.random() > 0.99993) {\n                    this.value = -0.25 + 0.3*Math.random();\n                    this.prev = this.value;\n                    this.droplet = true;\n                }\n                else {\n                    this.prev = this.value;\n                    this.value = this.next;\n                }\n                this.value = Math.min(0.5, Math.max(-0.5, this.value));\n                return true;\n            }\n        }, function () {\n            //init\n            this.value = 0.0;\n            this.prev = this.value;\n            this.next = this.value;\n        });\n\n        world.initialize([\n            { name: 'lava', distribution: 100 }\n        ]);\n\n        return world;\n\n    },\n\n    /**\n     * Cyclic rainbow automata.\n     * \n     * From https://sanojian.github.io/cellauto\n     */\n    CyclicRainbows: function(width = 128, height = 128) {\n        let world = new CellAuto.World({\n            width: width,\n            height: height\n        });\n\n        world.recommendedFrameFrequency = 1;\n\n        world.palette = [\n            [255,0,0,1 * 255], [255,96,0,1 * 255], [255,191,0,1 * 255], [223,255,0,1 * 255],\n            [128,255,0,1 * 255], [32,255,0,1 * 255], [0,255,64,1 * 255], [0,255,159,1 * 255],\n            [0,255,255,1 * 255], [0,159,255,1 * 255], [0,64,255,1 * 255], [32,0,255,1 * 255],\n            [127,0,255,1 * 255], [223,0,255,1 * 255], [255,0,191,1 * 255], [255,0,96,1 * 255]\n        ];\n\n        world.registerCellType('cyclic', {\n            getColor: function () {\n                return this.state;\n            },\n            process: function (neighbors) {\n                let next = (this.state + Math.floor(Math.random()*2)) % 16;\n\n                let changing = false;\n                for (let i = 0; i < neighbors.length; i++) {\n                    if (neighbors[i] !== null) {\n                        changing = changing || neighbors[i].state === next;\n                    }\n                }\n                if (changing) this.state = next;\n                return true;\n            }\n        }, function () {\n            //init\n            this.state = Math.floor(Math.random() * 16);\n        });\n\n        world.initialize([\n            { name: 'cyclic', distribution: 100 }\n        ]);\n\n        return world;\n    },\n\n    /**\n     * Simulates caves and water movement.\n     * \n     * From https://sanojian.github.io/cellauto\n     */\n    CavesWithWater: function(width = 128, height = 128) {\n        // FIRST CREATE CAVES\n        let world = new CellAuto.World({\n            width: width,\n            height: height\n        });\n\n        world.registerCellType('wall', {\n            process: function (neighbors) {\n                let surrounding = this.countSurroundingCellsWithValue(neighbors, 'wasOpen');\n                this.open = (this.wasOpen && surrounding >= 4) || surrounding >= 6;\n            },\n            reset: function () {\n                this.wasOpen = this.open;\n            }\n        }, function () {\n            //init\n            this.open = Math.random() > 0.40;\n        });\n\n        world.initialize([\n            { name: 'wall', distribution: 100 }\n        ]);\n\n        // generate our cave, 10 steps aught to do it\n        for (let i=0; i<10; i++) {\n            world.step();\n        }\n\n        let grid = world.createGridFromValues([\n            { cellType: 'wall', hasProperty: 'open', value: 0 }\n        ], 1);\n\n        // NOW USE OUR CAVES TO CREATE A NEW WORLD CONTAINING WATER\n        world = new CellAuto.World({\n            width: width,\n            height: height,\n            clearRect: true\n        });\n\n        world.palette = [\n            [89, 125, 206, 0 * 255],\n            [89, 125, 206, 1/9 * 255],\n            [89, 125, 206, 2/9 * 255],\n            [89, 125, 206, 3/9 * 255],\n            [89, 125, 206, 4/9 * 255],\n            [89, 125, 206, 5/9 * 255],\n            [89, 125, 206, 6/9 * 255],\n            [89, 125, 206, 7/9 * 255],\n            [89, 125, 206, 8/9 * 255],\n            [89, 125, 206, 1 * 255],\n            [109, 170, 44, 1 * 255],\n            [68, 36, 52, 1 * 255]\n        ];\n\n        world.registerCellType('water', {\n            getColor: function() {\n                //return 0x597DCE44;\n                return this.water;\n            },\n            process: function(neighbors) {\n                if (this.water === 0) {\n                    // already empty\n                    return;\n                }\n                // push my water out to my available neighbors\n\n                // cell below me will take all it can\n                if (neighbors[world.BOTTOM.index] !== null && this.water && neighbors[world.BOTTOM.index].water < 9) {\n                    let amt = Math.min(this.water, 9 - neighbors[world.BOTTOM.index].water);\n                    this.water-= amt;\n                    neighbors[world.BOTTOM.index].water += amt;\n                    return;\n                }\n\n                // bottom two corners take half of what I have\n                for (let i=5; i<=7; i++) {\n                    if (i!=world.BOTTOM.index && neighbors[i] !== null && this.water && neighbors[i].water < 9) {\n                        let amt = Math.min(this.water, Math.ceil((9 - neighbors[i].water)/2));\n                        this.water-= amt;\n                        neighbors[i].water += amt;\n                        return;\n                    }\n                }\n                // sides take a third of what I have\n                for (let i=3; i<=4; i++) {\n                    if (neighbors[i] !== null && neighbors[i].water < this.water) {\n                        let amt = Math.min(this.water, Math.ceil((9 - neighbors[i].water)/3));\n                        this.water-= amt;\n                        neighbors[i].water += amt;\n                        return;\n                    }\n                }\n            }\n        }, function() {\n            //init\n            this.water = Math.floor(Math.random() * 9);\n        });\n\n        world.registerCellType('rock', {\n            isSolid: true,\n            getColor: function() {\n                return this.lighted ? 10 : 11;\n            },\n            process: function(neighbors) {\n                this.lighted = neighbors[world.TOP.index] && !(neighbors[world.TOP.index].water === 9) && !neighbors[world.TOP.index].isSolid\n                    && neighbors[world.BOTTOM.index] && neighbors[world.BOTTOM.index].isSolid;\n            }\n        });\n\n        // pass in our generated cave data\n        world.initializeFromGrid([\n            { name: 'rock', gridValue: 1 },\n            { name: 'water', gridValue: 0 }\n        ], grid);\n\n        return world;\n    },\n\n    Rain: function(width = 128, height = 128) {\n        // FIRST CREATE CAVES\n        let world = new CellAuto.World({\n            width: width,\n            height: height\n        });\n\n        world.registerCellType('wall', {\n            process: function (neighbors) {\n                let surrounding = this.countSurroundingCellsWithValue(neighbors, 'wasOpen');\n                this.open = (this.wasOpen && surrounding >= 4) || surrounding >= 6;\n            },\n            reset: function () {\n                this.wasOpen = this.open;\n            }\n        }, function () {\n            //init\n            this.open = Math.random() > 0.40;\n        });\n\n        world.initialize([\n            { name: 'wall', distribution: 100 }\n        ]);\n\n        // generate our cave, 10 steps aught to do it\n        for (let i=0; i<10; i++) {\n            world.step();\n        }\n\n        let grid = world.createGridFromValues([\n            { cellType: 'wall', hasProperty: 'open', value: 0 }\n        ], 1);\n\n        // cut the top half of the caves off\n        for (let y=0; y<Math.floor(world.height/2); y++) {\n            for (let x=0; x<world.width; x++) {\n                grid[y][x] = 0;\n            }\n        }\n\n        // NOW USE OUR CAVES TO CREATE A NEW WORLD CONTAINING WATER\n        world = new CellAuto.World({\n            width: width,\n            height: height,\n            clearRect: true\n        });\n\n        world.palette = [\n            [89, 125, 206, 1],\n            [89, 125, 206, 1/9 * 255],\n            [89, 125, 206, 2/9 * 255],\n            [89, 125, 206, 3/9 * 255],\n            [89, 125, 206, 4/9 * 255],\n            [89, 125, 206, 5/9 * 255],\n            [89, 125, 206, 6/9 * 255],\n            [89, 125, 206, 7/9 * 255],\n            [89, 125, 206, 8/9 * 255],\n            [89, 125, 206, 255],\n            [109, 170, 44, 255],\n            [68, 36, 52, 255]\n        ];\n\n        world.registerCellType('air', {\n            getColor: function() {\n                //return '89, 125, 206, ' + (this.water ? Math.max(0.3, this.water/9) : 0);\n                return this.water;\n            },\n            process: function(neighbors) {\n                // rain on the top row\n                if (neighbors[world.TOP.index] === null && Math.random() < 0.02) {\n                    this.water = 5;\n                }\n                else if (this.water === 0) {\n                    // already empty\n                    return;\n                }\n\n                // push my water out to my available neighbors\n\n                // cell below me will take all it can\n                if (neighbors[world.BOTTOM.index] !== null && this.water && neighbors[world.BOTTOM.index].water < 9) {\n                    let amt = Math.min(this.water, 9 - neighbors[world.BOTTOM.index].water);\n                    this.water-= amt;\n                    neighbors[world.BOTTOM.index].water += amt;\n                    return;\n                }\n\n                // bottom two corners take half of what I have\n                for (let i=5; i<=7; i++) {\n                    if (i!=world.BOTTOM.index && neighbors[i] !== null && this.water && neighbors[i].water < 9) {\n                        let amt = Math.min(this.water, Math.ceil((9 - neighbors[i].water)/2));\n                        this.water-= amt;\n                        neighbors[i].water += amt;\n                        return;\n                    }\n                }\n                // sides take a third of what I have\n                for (let i=3; i<=4; i++) {\n                    if (neighbors[i] !== null && neighbors[i].water < this.water) {\n                        let amt = Math.min(this.water, Math.ceil((9 - neighbors[i].water)/3));\n                        this.water-= amt;\n                        neighbors[i].water += amt;\n                        return;\n                    }\n                }\n            }\n        }, function() {\n            //init\n            this.water = 0;\n        });\n\n        world.registerCellType('rock', {\n            isSolid: true,\n            getColor: function() {\n                return this.lighted ? 10 : 11;\n            },\n            process: function(neighbors) {\n                this.lighted = neighbors[world.TOP.index] && !(neighbors[world.TOP.index].water === 9) && !neighbors[world.TOP.index].isSolid\n                    && neighbors[world.BOTTOM.index] && neighbors[world.BOTTOM.index].isSolid;\n            }\n        });\n\n        // pass in our generated cave data\n        world.initializeFromGrid([\n            { name: 'rock', gridValue: 1 },\n            { name: 'air', gridValue: 0 }\n        ], grid);\n\n        return world;\n    },\n\n    /**\n     * Simulates splashing water.\n     * \n     * From https://sanojian.github.io/cellauto\n     */\n    Splashes: function(width = 128, height = 128) {\n        let world = new CellAuto.World({\n            width: width,\n            height: height\n        });\n\n        world.palette = [];\n        let colors = [];\n        for (let index=0; index<64; index++) {\n            world.palette.push([89, 125, 206, (index/64) * 255]);\n            colors[index] = 63 - index;\n        }\n\n        world.registerCellType('water', {\n            getColor: function () {\n                let v = (Math.max(2 * this.value + 0.02, 0) - 0.02) + 0.5;\n                return colors[Math.floor(colors.length * v)];\n            },\n            process: function (neighbors) {\n                if(this.droplet == true) {\n                    for (let i = 0; i < neighbors.length; i++) {\n                        if (neighbors[i] !== null && neighbors[i].value) {\n                            neighbors[i].value = 0.5 *this.value;\n                            neighbors[i].prev = 0.5 *this.prev;\n                        }\n                    }\n                    this.droplet = false;\n                    return true;\n                }\n                let avg = this.getSurroundingCellsAverageValue(neighbors, 'value');\n                this.next = 0.99 * (2 * avg - this.prev);\n                return true;\n            },\n            reset: function () {\n                if(Math.random() > 0.9999) {\n                    this.value = -0.2 + 0.25*Math.random();\n                    this.prev = this.value;\n                    this.droplet = true;\n                }\n                else {\n                    this.prev = this.value;\n                    this.value = this.next;\n                }\n                return true;\n            }\n        }, function () {\n            //init\n            this.water = true;\n            this.value = 0.0;\n            this.prev = this.value;\n            this.next = this.value;\n        });\n\n        world.initialize([\n            { name: 'water', distribution: 100 }\n        ]);\n\n        return world;\n    },\n\n    /**\n     * Rule 52928 - the CA used for Wolfram Alpha's loading animations\n     * \n     * Resources:\n     * https://www.quora.com/What-is-Wolfram-Alphas-loading-screen-a-depiction-of\n     * http://jsfiddle.net/hungrycamel/9UrzJ/\n     */\n    Wolfram: function(width = 96, height = 96) {\n        let world = new CellAuto.World({\n            width: width,\n            height: height,\n            wrap: true\n        });\n\n        world.recommendedFrameFrequency = 2;\n\n        world.palette = [\n            [255, 255, 255, 255], // Background color\n            [255, 110, 0  , 255], // dark orange\n            [255, 130, 0  , 255], //      |\n            [255, 150, 0  , 255], //      |\n            [255, 170, 0  , 255], //      V\n            [255, 180, 0  , 255]  // light orange\n        ];\n\n        let choice = Math.random();\n\n        let seedList = [\n            [\n                [0, 0, 0, 1, 0, 0, 0, 0, 0, 0], \n                [0, 2, 1, 1, 1, 1, 0, 0, 0, 0], \n                [1, 1, 3, 4, 2, 1, 1, 0, 0, 0], \n                [0, 1, 1, 1, 4, 1, 1, 0, 0, 0], \n                [0, 1, 2, 0, 1, 1, 1, 1, 0, 0], \n                [0, 1, 1, 1, 0, 0, 2, 2, 0, 0], \n                [0, 0, 2, 2, 0, 0, 1, 1, 1, 0], \n                [0, 0, 1, 1, 1, 1, 0, 2, 1, 0], \n                [0, 0, 0, 1, 1, 4, 1, 1, 1, 0], \n                [0, 0, 0, 1, 1, 2, 4, 3, 1, 1], \n                [0, 0, 0, 0, 1, 1, 1, 1, 2, 0], \n                [0, 0, 0, 0, 0, 0, 1, 0, 0, 0]\n            ], \n            [[0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0]], \n            [[0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0]], \n            [[0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0]], \n            [[0, 0, 0, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 0, 0, 0]], \n            [[0, 0, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 1], [1, 1, 0, 0, 0, 0, 0, 0]], \n            [[0, 0, 0, 0, 1, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0]], \n            [[0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 0]], \n            [[0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 0, 1, 0]], \n            [[0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1, 1, 0]], \n            [[1, 1, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 1, 1]], \n            [[1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1]], \n            [[1, 1, 1, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 1]], \n            [[1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 1, 1, 1]], \n            [[1, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1]], \n            [[1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 1]], \n            [[1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 1]], \n            [[1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 1]], \n            [[1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1]], \n            [[1, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 1, 1, 1]], \n            [[1, 1, 1, 1, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 1, 1, 1]], \n            [[1, 1, 1, 1, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1]], \n            [[1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1]], \n            [[1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1, 1]], \n            [[1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 1, 1]], \n            [[1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 1, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 1, 1, 1]], \n            [[1, 1, 1, 1, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 1, 1, 1, 1]], \n            [[1, 1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 1]], \n            [[1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1]], \n            [[1, 1, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 1]], \n            [[1, 1, 1, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 1]]\n        ];\n\n        world.registerCellType('living', {\n            getColor: function () {\n                return this.state;\n            },\n            process: function (neighbors) {\n\n                let neighborOnes = neighbors.filter(function(item){\n                    return item.state == 1;\n                }).length;\n\n                if(this.state == 0) {\n                    if(neighborOnes == 3 || neighborOnes == 5 || neighborOnes == 7) \n                        this.newState = 1;\n                } else if (this.state == 1) {\n                    if(neighborOnes == 0 || neighborOnes == 1 || neighborOnes == 2 || neighborOnes == 6 || neighborOnes == 8)\n                        this.newState = 2;\n                } else if (this.state == 2) {\n                    this.newState = 3;\n                } else if (this.state == 3) {\n                    this.newState = 4;\n                } else if (this.state == 4) {\n                    this.newState = 0;\n                }\n            },\n            reset: function () {\n                this.state = this.newState;\n            }\n        }, function (x, y) {\n            // Init \n\n            // 50% chance to use a seed\n            if(choice < 0.5){\n                let seed;\n                // 25% chance to use a random seed\n                if(choice < 0.25) {\n                    seed = seedList[Math.floor(Math.random() * seedList.length)];\n                }\n                // 25% chance to use the Wolfram seed\n                else {\n                    seed = seedList[0];\n                }\n\n                let minX = Math.floor(width / 2) - Math.floor(seed[0].length / 2);\n                let maxX = Math.floor(width / 2) + Math.floor(seed[0].length / 2);\n                let minY = Math.floor(height / 2) - Math.floor(seed.length / 2);\n                let maxY = Math.floor(height / 2) + Math.floor(seed.length / 2);\n\n                this.state = 0;\n\n                // If the cell is inside of the seed array (centered in the world), then use its value\n                if (x >= minX && x < maxX && y >= minY && y < maxY) {\n                    this.state = seed[y - minY][x - minX];\n                }\n            } \n            // 50% chance to initialize with noise\n            else {\n                this.state = Math.random() < 0.15 ? 1 : 0;\n            }\n            this.newState = this.state;\n        });\n\n        world.initialize([\n           { name: 'living', distribution: 100 },\n        ]);\n\n        return world;\n    },\n\n    /**\n     * Simulates a Belousov-Zhabotinsky reaction (approximately).\n     * This one's still a little messed up, so consider it experimental.\n     * \n     * Resources:\n     * http://ccl.northwestern.edu/netlogo/models/B-ZReaction\n     * http://www.fractaldesign.net/automataalgorithm.aspx\n     */\n    BelousovZhabotinsky: function(width = 128, height = 128) {\n        let world = new CellAuto.World({\n            width: width,\n            height: height,\n            wrap: true\n        });\n\n        // Override frame frequency for this setup\n        world.recommendedFrameFrequency = 10;\n\n        // Config letiables\n        let kernel = [ // weights for neighbors. First index is for self weight\n         0, 1, 1, 1,\n            1,    1,\n            1, 1, 1\n        ].reverse();\n        let k1 = 5; // Lower gives higher tendency for a cell to be sickened by ill neighbors\n        let k2 = 1; // Lower gives higher tendency for a cell to be sickened by infected neighbors\n        let g = 5;\n        let numStates = 255;\n\n        world.palette = [];\n        for (let i = 0; i < numStates; i++) {\n            let gray = Math.floor((255 / numStates) * i);\n            world.palette.push([gray, gray, gray, 255]);\n        }\n\n        world.registerCellType('bz', {\n            getColor: function () {\n                return this.state;\n            },\n            process: function (neighbors) {\n                let healthy = 0;\n                let infected = 0;\n                let ill = 0;\n                let sumStates = this.state;\n    \n                for(let i = 0; i < neighbors.length + 1; i++) {\n                    let neighbor;\n                    if (i == 8) neighbor = this;\n                    else neighbor = neighbors[i];\n                    \n                    //if(neighbor !== null && neighbor.state){\n                        sumStates += neighbor.state * kernel[i];\n                        if(kernel[i] > 0) {\n                            if(neighbor.state == 0) healthy += 1;\n                            else if(neighbor.state < (numStates - 1)) infected += 1;\n                            else ill += 1;\n                        }\n                    //}\n                }\n\n                if(this.state == 0) {\n                    this.newState = (infected / k1) + (ill / k2);\n                } else if (this.state < (numStates) - 1) {\n                    this.newState = (sumStates / infected + ill + 1) + g;\n                    //this.newState = (sumStates / 9) + g;\n                } else {\n                    this.newState = 0;\n                }\n\n                // Make sure to set state to newstate in a second pass\n                this.newState = Math.max(0, Math.min(numStates - 1, Math.floor(this.newState)));\n\n            },\n            reset: function () {\n                this.state = this.newState;\n            }\n        }, function () {\n            // Init\n            // Generate a random state\n            this.state = Math.random() < 1.0 ? Math.floor(Math.random() * numStates) : 0;\n            this.newState = this.state;\n        });\n\n        world.initialize([\n            { name: 'bz', distribution: 100 }\n        ]);\n\n        return world;\n    }\n\n}\n\n\n/**\n * Simulates a 1D automata.\n * Expects a property `rule` in `options`, which is the integer rule of the CA.\n * \n * Not totally correct yet!\n * \n */\nfunction Elementary(options) {\n    let world = new CellAuto.World(options);\n\n    let rule = (options.rule >>> 0).toString(2);\n    while(rule.length < 8) {\n        rule = \"0\" + rule;\n    }\n\n    console.log(options.rule);\n\n    function processRule(leftAlive, centerAlive, rightAlive) {\n        let index = 0;\n        if(rightAlive) index += 1;\n        if(centerAlive) index += 2;\n        if(leftAlive) index += 4;\n        return rule[rule.length - 1 - index];\n    }\n    \n    function testRule() {\n        let lastIndex = rule.length - 1;\n        for(let i = 0; i < 8; i++) {\n            // Convert i to binary and use it to feed processRule\n            let bin = ((lastIndex - i) >>> 0).toString(2);\n            while(bin.length < 3) bin = \"0\" + bin;\n            let ruleOut = processRule(bin[0] == \"1\", bin[1] == \"1\", bin[2] == \"1\");\n\n            console.assert(ruleOut == rule[i], bin + \" \" + rule[i] + \" \" + (ruleOut == rule[i]).toString());\n        }\n    }\n    //testRule();\n\n    world.registerCellType('living', {\n        getColor: function () {\n            return this.alive ? 0 : 1;\n        },\n        process: function (neighbors) {\n            function getWasAlive(neighbor){\n                if(neighbor != null)\n                    return neighbor.wasAlive;\n                return false;\n            }\n            \n            // If the cell isn't active yet, determine its state based on its upper neighbors\n            if(!this.wasAlive) {\n                this.alive = processRule(getWasAlive(neighbors[0]), getWasAlive(neighbors[1]), getWasAlive(neighbors[2])) == \"1\";\n            }\n        },\n        reset: function () {\n            this.wasAlive = this.alive;\n        }\n    }, function (x, y) {\n        // Init\n        this.alive = (x == Math.floor(options.width / 2)) && (y == 1);\n        //this.alive = Math.random() < 0.01;\n        //this.wasAlive = this.alive;\n    });\n\n    world.initialize([\n        { name: 'living', distribution: 100 }\n    ]);\n\n    return world;\n}\n\n/**\n * Simulates a Life-like automata. Uses B/S notation.\n * See https://en.wikipedia.org/wiki/Life-like_cellular_automaton\n * \n * Expects two additional properties in `options`:\n * `B`: An array of ints representing the B component of the rule\n * `S`: An array of ints representing the S component of the rule\n */\nfunction LifeLike(options, distributionFunc) {\n    let world = new CellAuto.World(options);\n\n    world.registerCellType('living', {\n        getColor: function () {\n            return this.alive ? 0 : 1;\n        },\n        process: function (neighbors) {\n            let surrounding = this.countSurroundingCellsWithValue(neighbors, 'wasAlive');\n            this.alive = options.B.includes(surrounding) || options.S.includes(surrounding) && this.alive;\n        },\n        reset: function () {\n            this.wasAlive = this.alive;\n        }\n    }, function (x, y) {\n        // Init\n        if(distributionFunc)\n            this.alive = distributionFunc(x, y);\n        else   \n            this.alive = Math.random() < 0.5;\n    });\n\n    world.initialize([\n        { name: 'living', distribution: 100 }\n    ]);\n\n    return world;\n}"]}